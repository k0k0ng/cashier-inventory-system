/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Main;

import java.awt.Color;
import java.awt.Font;
import javax.swing.BorderFactory;
import javax.swing.table.JTableHeader;
import ArrayUtil.ActivityList;
import ArrayUtil.Activity;
import ArrayUtil.AdminList;
import ArrayUtil.TransactionList;
import ArrayUtil.Transaction;
import ArrayUtil.TransactionDetail;
import ArrayUtil.TransactionDetailList;
import ArrayUtil.Product;
import ArrayUtil.ProductList;
import ArrayUtil.SupplierList;
import ArrayUtil.Supplier;
import ArrayUtil.UserLogin;
import java.awt.print.PrinterException;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.MessageFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;

/**
 *
 * @author Kortopi
 */
public class AdminDashboard extends javax.swing.JFrame {

    private String ChosenCategory = "";
    private String SelectedId = "";
    private String SelectedProductId = "";
    private String SelectedSupplierName = "";
    private String SelectedSupplierProduct = "";
    private String SelectedMostPurchased = "";
    private String supplierByProduct = "";
    private String productId[] = null;
    static String admin_id;
    private String SelectedAccountUsername = "";
    private String old_username = "";

    private TransactionList transactionList = null;
    private Transaction transactions[] = null;
    private TransactionDetailList detailList = null;
    private TransactionDetail details[] = null;
    private ProductList productList = null;
    private Product product = null;
    private Product ProductSelected;
    private SupplierList supplierList = null;
    private Supplier supplier = null;
    private ActivityList activityList = null;
    private AdminList adminList = null;
    private UserLogin User;

    public AdminDashboard() {

    }

    public AdminDashboard(String x) {
        this.admin_id = x;
        try {
            transactionList = new TransactionList();
            detailList = new TransactionDetailList();
            productList = new ProductList();
            supplierList = new SupplierList();
            activityList = new ActivityList();
            adminList = new AdminList();
        } catch (Exception e) {

        }
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Background = new javax.swing.JPanel();
        Admin = new javax.swing.JLabel();
        Exit = new javax.swing.JLabel();
        MinimizeBtn = new javax.swing.JLabel();
        AccountsIcon = new javax.swing.JLabel();
        LeftPanel = new javax.swing.JPanel();
        Menu1Panel = new javax.swing.JPanel();
        Menu1Label = new javax.swing.JLabel();
        Menu2Panel = new javax.swing.JPanel();
        Menu2Label = new javax.swing.JLabel();
        Menu3Panel = new javax.swing.JPanel();
        Menu3Label = new javax.swing.JLabel();
        Menu4Panel = new javax.swing.JPanel();
        Menu4Label = new javax.swing.JLabel();
        Menu5Panel = new javax.swing.JPanel();
        Menu5Label = new javax.swing.JLabel();
        LogoutPanel = new javax.swing.JPanel();
        LogoutLabel = new javax.swing.JLabel();
        MainPanel = new javax.swing.JPanel();
        DashboardFrame = new javax.swing.JPanel();
        DashboardPanel = new javax.swing.JPanel();
        DashboardLabel = new javax.swing.JLabel();
        DashboardPanelMid = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        DashboardGainLabe = new javax.swing.JLabel();
        DashboardGainField = new javax.swing.JTextField();
        DashboardPane = new javax.swing.JScrollPane();
        DashboardTable = new javax.swing.JTable();
        DashboardStockLabel = new javax.swing.JLabel();
        DashViewBtn = new javax.swing.JButton();
        TripleKLogo = new javax.swing.JLabel();
        ItemCategoryFrame = new javax.swing.JPanel();
        ItemCategoryPanel = new javax.swing.JPanel();
        ItemCategoryLabel = new javax.swing.JLabel();
        Category1Panel = new javax.swing.JPanel();
        Category1Label = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        Category2Panel = new javax.swing.JPanel();
        Category2Label = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Category3Panel = new javax.swing.JPanel();
        Category3Label = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Category4Panel = new javax.swing.JPanel();
        Category4Label = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Category5Panel = new javax.swing.JPanel();
        Category5Label = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        Category6Panel = new javax.swing.JPanel();
        Category6Label = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        Category7Panel = new javax.swing.JPanel();
        Category7Label = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        Category8Panel = new javax.swing.JPanel();
        Category8Label = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        Category9Panel = new javax.swing.JPanel();
        Category9Label = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        SalesFrame = new javax.swing.JPanel();
        SalesPanel = new javax.swing.JPanel();
        SalesLabel = new javax.swing.JLabel();
        SalesPane = new javax.swing.JScrollPane();
        SalesTable = new javax.swing.JTable();
        SalesGainLabel = new javax.swing.JLabel();
        SalesGainField = new javax.swing.JTextField();
        SalesStartLabel = new javax.swing.JLabel();
        SalesStartDate = new com.toedter.calendar.JDateChooser();
        SalesEndLabel = new javax.swing.JLabel();
        SalesEndDate = new com.toedter.calendar.JDateChooser();
        SalesViewBtn = new javax.swing.JButton();
        SalesResetBtn = new javax.swing.JButton();
        SalesEnterBtn = new javax.swing.JButton();
        MostPurchasedFrame = new javax.swing.JPanel();
        MostPurchasedPanel = new javax.swing.JPanel();
        MostPurchasedLabel = new javax.swing.JLabel();
        MostPurchasedPane = new javax.swing.JScrollPane();
        MostPurchasedTable = new javax.swing.JTable();
        MostEnterBtn = new javax.swing.JButton();
        MostResetBtn = new javax.swing.JButton();
        MostStartDate = new com.toedter.calendar.JDateChooser();
        MostStartLabel = new javax.swing.JLabel();
        MostEndDate = new com.toedter.calendar.JDateChooser();
        MostEndLabel = new javax.swing.JLabel();
        ActivityLogFrame = new javax.swing.JPanel();
        ActivityLogPanel = new javax.swing.JPanel();
        ActivityLogLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ActivityTable = new javax.swing.JTable();
        ItemInfoFrame = new javax.swing.JPanel();
        ItemInfoPanel = new javax.swing.JPanel();
        DeletePanel = new javax.swing.JPanel();
        DeleteLabel = new javax.swing.JLabel();
        MainInfoPanel = new javax.swing.JPanel();
        ItemNameLabel = new javax.swing.JLabel();
        ItemNameField = new javax.swing.JTextField();
        ItemBarcodeLabel = new javax.swing.JLabel();
        StockLabel = new javax.swing.JLabel();
        StockField = new javax.swing.JTextField();
        CapitalLabel = new javax.swing.JLabel();
        CapitalField = new javax.swing.JTextField();
        SellingLabel = new javax.swing.JLabel();
        SellingField = new javax.swing.JTextField();
        ItemBarcodeField = new javax.swing.JComboBox<>();
        ItemInformationLabel = new javax.swing.JLabel();
        ItemInfoEditBtn = new javax.swing.JButton();
        ItemInfoBackBtn = new javax.swing.JButton();
        ItemInfoViewSupp = new javax.swing.JButton();
        ItemListFrame = new javax.swing.JPanel();
        ItemListPanel = new javax.swing.JPanel();
        ItemListLabel = new javax.swing.JLabel();
        SearchPanel = new javax.swing.JPanel();
        ItemSearchLogo = new javax.swing.JLabel();
        ItemSearchField = new javax.swing.JTextField();
        ItemListPane = new javax.swing.JScrollPane();
        ItemListTable = new javax.swing.JTable();
        ListViewBtn = new javax.swing.JButton();
        ListItemResetBtn = new javax.swing.JButton();
        ListItemAddBtn = new javax.swing.JButton();
        ListItemBackBtn = new javax.swing.JButton();
        AddItemFrame = new javax.swing.JPanel();
        AddItemPanel = new javax.swing.JPanel();
        AddItemLabel = new javax.swing.JLabel();
        AddNameLabel = new javax.swing.JLabel();
        AddNameField = new javax.swing.JTextField();
        AddBarcodeLabel = new javax.swing.JLabel();
        AddStockField = new javax.swing.JTextField();
        AddStockLabel = new javax.swing.JLabel();
        AddCapitalLabel = new javax.swing.JLabel();
        AddCapitalField = new javax.swing.JTextField();
        AddSellLabel = new javax.swing.JLabel();
        AddSellField = new javax.swing.JTextField();
        AddItemUnit = new javax.swing.JComboBox<>();
        AddItemSaveBtn = new javax.swing.JButton();
        AddItemCancelBtn = new javax.swing.JButton();
        AddItemSuppNameLabel = new javax.swing.JLabel();
        AddItemSuppNameField = new javax.swing.JTextField();
        TransactionFrame = new javax.swing.JPanel();
        TransactionPanel = new javax.swing.JPanel();
        TransactionLabe = new javax.swing.JLabel();
        TransactionPanelMid = new javax.swing.JPanel();
        TransIDLabel = new javax.swing.JLabel();
        TransIDField = new javax.swing.JTextField();
        TansactionPane = new javax.swing.JScrollPane();
        TransactionTable = new javax.swing.JTable();
        TransCashierLabel = new javax.swing.JLabel();
        TransTimeLabel = new javax.swing.JLabel();
        TransDateLabel = new javax.swing.JLabel();
        TransDateField = new javax.swing.JTextField();
        TransTimeField = new javax.swing.JTextField();
        TransCashierField = new javax.swing.JTextField();
        TransBillLabel = new javax.swing.JLabel();
        TransBillField = new javax.swing.JTextField();
        TransactionBackBtn = new javax.swing.JButton();
        SuppliersListFrame = new javax.swing.JPanel();
        SuppliersListPanel = new javax.swing.JPanel();
        SupplierLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        SuppListTable = new javax.swing.JTable();
        SuppDeleteBtn = new javax.swing.JButton();
        SuppBackBtn = new javax.swing.JButton();
        SuppAddBtn = new javax.swing.JButton();
        SupplierListProductName = new javax.swing.JLabel();
        AddSuppFrame = new javax.swing.JPanel();
        AddSuppPanel = new javax.swing.JPanel();
        AddSuppLabel = new javax.swing.JLabel();
        AddSuppNameLabel = new javax.swing.JLabel();
        AddSuppNameField = new javax.swing.JTextField();
        AddSuppPriceLabel = new javax.swing.JLabel();
        AddSuppPriceField = new javax.swing.JTextField();
        AddSuppSaveBtn = new javax.swing.JButton();
        AddSuppCancelBtn = new javax.swing.JButton();
        StockPrintFrame = new javax.swing.JPanel();
        StockPrintPanel = new javax.swing.JPanel();
        StockPrintLabel = new javax.swing.JLabel();
        StockPrintMidPanel = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        PlumbingCB = new javax.swing.JCheckBox();
        ConstructionCB = new javax.swing.JCheckBox();
        ElectricalCB = new javax.swing.JCheckBox();
        OilCB = new javax.swing.JCheckBox();
        AutoCB = new javax.swing.JCheckBox();
        MotorCB = new javax.swing.JCheckBox();
        StainlessCB = new javax.swing.JCheckBox();
        OtherCB = new javax.swing.JCheckBox();
        FishingCB = new javax.swing.JCheckBox();
        StockPrintContinueBtn = new javax.swing.JToggleButton();
        StockPrintCancelBtn = new javax.swing.JToggleButton();
        PrintStock = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        PrintStockPrintBtn = new javax.swing.JButton();
        PrintStockCancelBtn = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        PrintTable = new javax.swing.JTable();
        AccountsFrame = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        AccountsTable = new javax.swing.JTable();
        AccountsViewBtn = new javax.swing.JButton();
        SpecificAccountFrame = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        AccountNameLabel = new javax.swing.JLabel();
        AccountNameField = new javax.swing.JTextField();
        AccountUsernameLabel = new javax.swing.JLabel();
        AccountUsernameField = new javax.swing.JTextField();
        AccountPasswordLabel = new javax.swing.JLabel();
        AccountPasswordField = new javax.swing.JTextField();
        AccountTypeLabel = new javax.swing.JLabel();
        AccountTypeCB = new javax.swing.JComboBox<>();
        AccountEditBtn = new javax.swing.JButton();
        AccountBackBtn = new javax.swing.JButton();
        TempFrame = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        Background.setBackground(new java.awt.Color(51, 51, 51));

        Admin.setFont(new java.awt.Font("Century Gothic", 0, 36)); // NOI18N
        Admin.setForeground(new java.awt.Color(255, 255, 255));
        Admin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Admin.setText("Admin");

        Exit.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        Exit.setForeground(new java.awt.Color(204, 204, 204));
        Exit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Exit.setText("X");
        Exit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Exit.setPreferredSize(new java.awt.Dimension(25, 25));
        Exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ExitMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ExitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ExitMouseExited(evt);
            }
        });

        MinimizeBtn.setBackground(new java.awt.Color(204, 204, 204));
        MinimizeBtn.setFont(new java.awt.Font("Tahoma", 0, 40)); // NOI18N
        MinimizeBtn.setForeground(new java.awt.Color(204, 204, 204));
        MinimizeBtn.setText("-");
        MinimizeBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        MinimizeBtn.setPreferredSize(new java.awt.Dimension(20, 5));
        MinimizeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MinimizeBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MinimizeBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                MinimizeBtnMouseExited(evt);
            }
        });

        AccountsIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        AccountsIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/account.png"))); // NOI18N
        AccountsIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AccountsIcon.setPreferredSize(new java.awt.Dimension(35, 35));
        AccountsIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AccountsIconMouseClicked(evt);
            }
        });

        LeftPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        LeftPanel.setPreferredSize(new java.awt.Dimension(245, 290));

        Menu1Panel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Menu1PanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Menu1PanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Menu1PanelMouseExited(evt);
            }
        });

        Menu1Label.setBackground(new java.awt.Color(204, 204, 204));
        Menu1Label.setFont(new java.awt.Font("Century Gothic", 0, 20)); // NOI18N
        Menu1Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Menu1Label.setText("Dashbaord");
        Menu1Label.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout Menu1PanelLayout = new javax.swing.GroupLayout(Menu1Panel);
        Menu1Panel.setLayout(Menu1PanelLayout);
        Menu1PanelLayout.setHorizontalGroup(
            Menu1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Menu1Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        Menu1PanelLayout.setVerticalGroup(
            Menu1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Menu1PanelLayout.createSequentialGroup()
                .addComponent(Menu1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        Menu2Panel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Menu2PanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Menu2PanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Menu2PanelMouseExited(evt);
            }
        });

        Menu2Label.setFont(new java.awt.Font("Century Gothic", 0, 20)); // NOI18N
        Menu2Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Menu2Label.setText("Item Category");
        Menu2Label.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout Menu2PanelLayout = new javax.swing.GroupLayout(Menu2Panel);
        Menu2Panel.setLayout(Menu2PanelLayout);
        Menu2PanelLayout.setHorizontalGroup(
            Menu2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Menu2Label, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
        );
        Menu2PanelLayout.setVerticalGroup(
            Menu2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Menu2Label, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        Menu3Panel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Menu3PanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Menu3PanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Menu3PanelMouseExited(evt);
            }
        });

        Menu3Label.setFont(new java.awt.Font("Century Gothic", 0, 20)); // NOI18N
        Menu3Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Menu3Label.setText("Sales Record");
        Menu3Label.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout Menu3PanelLayout = new javax.swing.GroupLayout(Menu3Panel);
        Menu3Panel.setLayout(Menu3PanelLayout);
        Menu3PanelLayout.setHorizontalGroup(
            Menu3PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Menu3Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        Menu3PanelLayout.setVerticalGroup(
            Menu3PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Menu3Label, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        Menu4Panel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Menu4Panel.setPreferredSize(new java.awt.Dimension(126, 50));
        Menu4Panel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Menu4PanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Menu4PanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Menu4PanelMouseExited(evt);
            }
        });

        Menu4Label.setFont(new java.awt.Font("Century Gothic", 0, 20)); // NOI18N
        Menu4Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Menu4Label.setText("Most Purchased");

        javax.swing.GroupLayout Menu4PanelLayout = new javax.swing.GroupLayout(Menu4Panel);
        Menu4Panel.setLayout(Menu4PanelLayout);
        Menu4PanelLayout.setHorizontalGroup(
            Menu4PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Menu4PanelLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(Menu4Label)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        Menu4PanelLayout.setVerticalGroup(
            Menu4PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Menu4PanelLayout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addComponent(Menu4Label)
                .addContainerGap())
        );

        Menu5Panel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Menu5Panel.setPreferredSize(new java.awt.Dimension(126, 50));
        Menu5Panel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Menu5PanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Menu5PanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Menu5PanelMouseExited(evt);
            }
        });

        Menu5Label.setFont(new java.awt.Font("Century Gothic", 0, 20)); // NOI18N
        Menu5Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Menu5Label.setText("Activity Log");

        javax.swing.GroupLayout Menu5PanelLayout = new javax.swing.GroupLayout(Menu5Panel);
        Menu5Panel.setLayout(Menu5PanelLayout);
        Menu5PanelLayout.setHorizontalGroup(
            Menu5PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Menu5PanelLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(Menu5Label)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        Menu5PanelLayout.setVerticalGroup(
            Menu5PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Menu5PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Menu5Label)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        LogoutPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        LogoutPanel.setPreferredSize(new java.awt.Dimension(100, 50));
        LogoutPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LogoutPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                LogoutPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                LogoutPanelMouseExited(evt);
            }
        });

        LogoutLabel.setFont(new java.awt.Font("Century Gothic", 0, 20)); // NOI18N
        LogoutLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LogoutLabel.setText("Logout");

        javax.swing.GroupLayout LogoutPanelLayout = new javax.swing.GroupLayout(LogoutPanel);
        LogoutPanel.setLayout(LogoutPanelLayout);
        LogoutPanelLayout.setHorizontalGroup(
            LogoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LogoutPanelLayout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addComponent(LogoutLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        LogoutPanelLayout.setVerticalGroup(
            LogoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LogoutPanelLayout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addComponent(LogoutLabel)
                .addContainerGap())
        );

        javax.swing.GroupLayout LeftPanelLayout = new javax.swing.GroupLayout(LeftPanel);
        LeftPanel.setLayout(LeftPanelLayout);
        LeftPanelLayout.setHorizontalGroup(
            LeftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Menu1Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Menu2Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Menu3Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Menu4Panel, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
            .addGroup(LeftPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LogoutPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(Menu5Panel, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
        );
        LeftPanelLayout.setVerticalGroup(
            LeftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LeftPanelLayout.createSequentialGroup()
                .addComponent(Menu1Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Menu2Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Menu3Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Menu4Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Menu5Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 254, Short.MAX_VALUE)
                .addComponent(LogoutPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        MainPanel.setBackground(new java.awt.Color(51, 51, 51));
        MainPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        MainPanel.setPreferredSize(new java.awt.Dimension(891, 2));
        MainPanel.setLayout(new java.awt.CardLayout());

        DashboardFrame.setBackground(new java.awt.Color(51, 51, 51));

        DashboardPanel.setBackground(new java.awt.Color(51, 51, 51));

        DashboardLabel.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        DashboardLabel.setForeground(new java.awt.Color(204, 204, 204));
        DashboardLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        DashboardLabel.setText("Dashboard");

        jSeparator1.setBackground(new java.awt.Color(51, 51, 51));
        jSeparator1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51), 3));
        jSeparator1.setPreferredSize(new java.awt.Dimension(2, 495));

        DashboardGainLabe.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        DashboardGainLabe.setText("Today's Total Sale:");

        DashboardGainField.setEditable(false);
        DashboardGainField.setBackground(new java.awt.Color(255, 255, 255));
        DashboardGainField.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        DashboardGainField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        DashboardGainField.setBorder(null);

        DashboardTable.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        Product least_product[] = productList.getLeastStock();
        Object least_obj[][] = new Object[least_product.length][3];
        for (int i=0; i < least_obj.length; i++){
            least_obj[i][0] = least_product[i].getName();
            least_obj[i][1] = least_product[i].getStock();
            least_obj[i][2] = least_product[i].getCategory();
        }
        DashboardTable.setModel(new javax.swing.table.DefaultTableModel(
            least_obj,
            new String [] {
                "Name", "Stock", "Category"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        DashboardTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        DashboardTable.setRowHeight(30);
        DashboardTable.setShowVerticalLines(false);
        DashboardTable.getTableHeader().setReorderingAllowed(false);
        DashboardTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DashboardTableMouseClicked(evt);
            }
        });
        DashboardPane.setViewportView(DashboardTable);

        DashboardStockLabel.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        DashboardStockLabel.setForeground(new java.awt.Color(255, 51, 51));
        DashboardStockLabel.setText("Items with few stocks left:");

        DashViewBtn.setBackground(new java.awt.Color(102, 102, 102));
        DashViewBtn.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        DashViewBtn.setForeground(new java.awt.Color(240, 240, 240));
        DashViewBtn.setText("View Item Detail");
        DashViewBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        DashViewBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        DashViewBtn.setPreferredSize(new java.awt.Dimension(200, 45));
        DashViewBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DashViewBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                DashViewBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                DashViewBtnMouseExited(evt);
            }
        });

        TripleKLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/logo.png"))); // NOI18N

        javax.swing.GroupLayout DashboardPanelMidLayout = new javax.swing.GroupLayout(DashboardPanelMid);
        DashboardPanelMid.setLayout(DashboardPanelMidLayout);
        DashboardPanelMidLayout.setHorizontalGroup(
            DashboardPanelMidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DashboardPanelMidLayout.createSequentialGroup()
                .addGroup(DashboardPanelMidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DashboardPanelMidLayout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addComponent(DashboardGainLabe))
                    .addGroup(DashboardPanelMidLayout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(DashboardPanelMidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TripleKLogo)
                            .addComponent(DashboardGainField, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(DashboardPanelMidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DashboardPanelMidLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(DashboardPanelMidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DashboardPane, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DashboardStockLabel))
                        .addGap(28, 28, 28))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DashboardPanelMidLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DashViewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(134, 134, 134))))
        );
        DashboardPanelMidLayout.setVerticalGroup(
            DashboardPanelMidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DashboardPanelMidLayout.createSequentialGroup()
                .addGroup(DashboardPanelMidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(DashboardPanelMidLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(DashboardStockLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(DashboardPane, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(DashViewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, DashboardPanelMidLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 520, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(DashboardPanelMidLayout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addComponent(DashboardGainLabe)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(DashboardGainField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(TripleKLogo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        //DashboardGainField.setText("123");
        try{
            DashboardGainField.setText(String.valueOf(transactionList.getTotalGainToday(String.valueOf(java.time.LocalDate.now()))));
        }catch(Exception e){
            e.printStackTrace();
        }

        javax.swing.GroupLayout DashboardPanelLayout = new javax.swing.GroupLayout(DashboardPanel);
        DashboardPanel.setLayout(DashboardPanelLayout);
        DashboardPanelLayout.setHorizontalGroup(
            DashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DashboardPanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(DashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DashboardPanelMid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DashboardLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(66, Short.MAX_VALUE))
        );
        DashboardPanelLayout.setVerticalGroup(
            DashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DashboardPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(DashboardLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DashboardPanelMid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout DashboardFrameLayout = new javax.swing.GroupLayout(DashboardFrame);
        DashboardFrame.setLayout(DashboardFrameLayout);
        DashboardFrameLayout.setHorizontalGroup(
            DashboardFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DashboardFrameLayout.createSequentialGroup()
                .addComponent(DashboardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        DashboardFrameLayout.setVerticalGroup(
            DashboardFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(DashboardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        MainPanel.add(DashboardFrame, "card3");

        ItemCategoryFrame.setBackground(new java.awt.Color(51, 51, 51));

        ItemCategoryPanel.setBackground(new java.awt.Color(51, 51, 51));

        ItemCategoryLabel.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        ItemCategoryLabel.setForeground(new java.awt.Color(204, 204, 204));
        ItemCategoryLabel.setText("Item Category");

        Category1Panel.setBackground(new java.awt.Color(51, 51, 51));
        Category1Panel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        Category1Panel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Category1Panel.setPreferredSize(new java.awt.Dimension(140, 140));
        Category1Panel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Category1PanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Category1PanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Category1PanelMouseExited(evt);
            }
        });

        Category1Label.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        Category1Label.setForeground(new java.awt.Color(204, 204, 204));
        Category1Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Category1Label.setText("Construction Supp.");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/Construction.png")));

        javax.swing.GroupLayout Category1PanelLayout = new javax.swing.GroupLayout(Category1Panel);
        Category1Panel.setLayout(Category1PanelLayout);
        Category1PanelLayout.setHorizontalGroup(
            Category1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Category1PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Category1Label, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(Category1PanelLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        Category1PanelLayout.setVerticalGroup(
            Category1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Category1PanelLayout.createSequentialGroup()
                .addContainerGap(95, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(Category1Label)
                .addContainerGap())
        );

        Category2Panel.setBackground(new java.awt.Color(51, 51, 51));
        Category2Panel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        Category2Panel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Category2Panel.setPreferredSize(new java.awt.Dimension(140, 140));
        Category2Panel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Category2PanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Category2PanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Category2PanelMouseExited(evt);
            }
        });

        Category2Label.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        Category2Label.setForeground(new java.awt.Color(204, 204, 204));
        Category2Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Category2Label.setText("Plumbing Supp.");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/Plumbing.png")));

        javax.swing.GroupLayout Category2PanelLayout = new javax.swing.GroupLayout(Category2Panel);
        Category2Panel.setLayout(Category2PanelLayout);
        Category2PanelLayout.setHorizontalGroup(
            Category2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Category2PanelLayout.createSequentialGroup()
                .addGroup(Category2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Category2PanelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(Category2Label))
                    .addGroup(Category2PanelLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabel2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        Category2PanelLayout.setVerticalGroup(
            Category2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Category2PanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(Category2Label)
                .addContainerGap())
        );

        Category3Panel.setBackground(new java.awt.Color(51, 51, 51));
        Category3Panel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        Category3Panel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Category3Panel.setPreferredSize(new java.awt.Dimension(140, 140));
        Category3Panel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Category3PanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Category3PanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Category3PanelMouseExited(evt);
            }
        });

        Category3Label.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        Category3Label.setForeground(new java.awt.Color(204, 204, 204));
        Category3Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Category3Label.setText("Electrical Supp.");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/Electric.png")));

        javax.swing.GroupLayout Category3PanelLayout = new javax.swing.GroupLayout(Category3Panel);
        Category3Panel.setLayout(Category3PanelLayout);
        Category3PanelLayout.setHorizontalGroup(
            Category3PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Category3PanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(Category3PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Category3Label)
                    .addGroup(Category3PanelLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel3)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        Category3PanelLayout.setVerticalGroup(
            Category3PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Category3PanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(Category3Label)
                .addContainerGap())
        );

        Category4Panel.setBackground(new java.awt.Color(51, 51, 51));
        Category4Panel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        Category4Panel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Category4Panel.setPreferredSize(new java.awt.Dimension(140, 140));
        Category4Panel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Category4PanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Category4PanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Category4PanelMouseExited(evt);
            }
        });

        Category4Label.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        Category4Label.setForeground(new java.awt.Color(204, 204, 204));
        Category4Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Category4Label.setText("Oil's");

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/Oil.png")));

        javax.swing.GroupLayout Category4PanelLayout = new javax.swing.GroupLayout(Category4Panel);
        Category4Panel.setLayout(Category4PanelLayout);
        Category4PanelLayout.setHorizontalGroup(
            Category4PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Category4PanelLayout.createSequentialGroup()
                .addGroup(Category4PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Category4PanelLayout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(Category4Label))
                    .addGroup(Category4PanelLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabel4)))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        Category4PanelLayout.setVerticalGroup(
            Category4PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Category4PanelLayout.createSequentialGroup()
                .addContainerGap(93, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(Category4Label)
                .addContainerGap())
        );

        Category5Panel.setBackground(new java.awt.Color(51, 51, 51));
        Category5Panel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        Category5Panel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Category5Panel.setPreferredSize(new java.awt.Dimension(140, 140));
        Category5Panel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Category5PanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Category5PanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Category5PanelMouseExited(evt);
            }
        });

        Category5Label.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        Category5Label.setForeground(new java.awt.Color(204, 204, 204));
        Category5Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Category5Label.setText("Motorcycle Acc.");

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/Motor.png")));

        javax.swing.GroupLayout Category5PanelLayout = new javax.swing.GroupLayout(Category5Panel);
        Category5Panel.setLayout(Category5PanelLayout);
        Category5PanelLayout.setHorizontalGroup(
            Category5PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Category5PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Category5Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(Category5PanelLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        Category5PanelLayout.setVerticalGroup(
            Category5PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Category5PanelLayout.createSequentialGroup()
                .addContainerGap(93, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(Category5Label)
                .addContainerGap())
        );

        Category6Panel.setBackground(new java.awt.Color(51, 51, 51));
        Category6Panel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        Category6Panel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Category6Panel.setPreferredSize(new java.awt.Dimension(140, 140));
        Category6Panel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Category6PanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Category6PanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Category6PanelMouseExited(evt);
            }
        });

        Category6Label.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        Category6Label.setForeground(new java.awt.Color(204, 204, 204));
        Category6Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Category6Label.setText("Auto Parts");

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/auto.png"))); // NOI18N

        javax.swing.GroupLayout Category6PanelLayout = new javax.swing.GroupLayout(Category6Panel);
        Category6Panel.setLayout(Category6PanelLayout);
        Category6PanelLayout.setHorizontalGroup(
            Category6PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Category6PanelLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(Category6PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(Category6Label))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        Category6PanelLayout.setVerticalGroup(
            Category6PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Category6PanelLayout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(Category6Label)
                .addContainerGap())
        );

        Category7Panel.setBackground(new java.awt.Color(51, 51, 51));
        Category7Panel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        Category7Panel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Category7Panel.setPreferredSize(new java.awt.Dimension(140, 140));
        Category7Panel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Category7PanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Category7PanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Category7PanelMouseExited(evt);
            }
        });

        Category7Label.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        Category7Label.setForeground(new java.awt.Color(204, 204, 204));
        Category7Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Category7Label.setText("Stainless");

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/stainless.png"))); // NOI18N

        javax.swing.GroupLayout Category7PanelLayout = new javax.swing.GroupLayout(Category7Panel);
        Category7Panel.setLayout(Category7PanelLayout);
        Category7PanelLayout.setHorizontalGroup(
            Category7PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Category7PanelLayout.createSequentialGroup()
                .addGroup(Category7PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Category7PanelLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel11))
                    .addGroup(Category7PanelLayout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(Category7Label)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        Category7PanelLayout.setVerticalGroup(
            Category7PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Category7PanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 93, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Category7Label)
                .addContainerGap())
        );

        Category8Panel.setBackground(new java.awt.Color(51, 51, 51));
        Category8Panel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        Category8Panel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Category8Panel.setPreferredSize(new java.awt.Dimension(140, 140));
        Category8Panel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Category8PanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Category8PanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Category8PanelMouseExited(evt);
            }
        });

        Category8Label.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        Category8Label.setForeground(new java.awt.Color(204, 204, 204));
        Category8Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Category8Label.setText("Fishing Equipements");

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/fishing.png"))); // NOI18N

        javax.swing.GroupLayout Category8PanelLayout = new javax.swing.GroupLayout(Category8Panel);
        Category8Panel.setLayout(Category8PanelLayout);
        Category8PanelLayout.setHorizontalGroup(
            Category8PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Category8PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Category8Label, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(Category8PanelLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel9)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        Category8PanelLayout.setVerticalGroup(
            Category8PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Category8PanelLayout.createSequentialGroup()
                .addContainerGap(36, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Category8Label)
                .addContainerGap())
        );

        Category9Panel.setBackground(new java.awt.Color(51, 51, 51));
        Category9Panel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        Category9Panel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Category9Panel.setPreferredSize(new java.awt.Dimension(140, 140));
        Category9Panel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Category9PanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Category9PanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Category9PanelMouseExited(evt);
            }
        });

        Category9Label.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        Category9Label.setForeground(new java.awt.Color(204, 204, 204));
        Category9Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Category9Label.setText("Others");

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/other.png"))); // NOI18N

        javax.swing.GroupLayout Category9PanelLayout = new javax.swing.GroupLayout(Category9Panel);
        Category9Panel.setLayout(Category9PanelLayout);
        Category9PanelLayout.setHorizontalGroup(
            Category9PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Category9PanelLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(Category9Label)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Category9PanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addGap(36, 36, 36))
        );
        Category9PanelLayout.setVerticalGroup(
            Category9PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Category9PanelLayout.createSequentialGroup()
                .addContainerGap(36, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Category9Label)
                .addContainerGap())
        );

        jLabel5.setBackground(new java.awt.Color(204, 204, 204));
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/print_blue.png"))); // NOI18N
        jLabel5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout ItemCategoryPanelLayout = new javax.swing.GroupLayout(ItemCategoryPanel);
        ItemCategoryPanel.setLayout(ItemCategoryPanelLayout);
        ItemCategoryPanelLayout.setHorizontalGroup(
            ItemCategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ItemCategoryPanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(ItemCategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ItemCategoryPanelLayout.createSequentialGroup()
                        .addGroup(ItemCategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Category4Panel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(ItemCategoryPanelLayout.createSequentialGroup()
                                .addGap(157, 157, 157)
                                .addComponent(Category1Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(Category7Panel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(57, 57, 57)
                        .addGroup(ItemCategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Category5Panel, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                            .addComponent(Category2Panel, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                            .addComponent(Category8Panel, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE))
                        .addGap(58, 58, 58)
                        .addGroup(ItemCategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Category3Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Category6Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Category9Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(209, Short.MAX_VALUE))
                    .addGroup(ItemCategoryPanelLayout.createSequentialGroup()
                        .addComponent(ItemCategoryLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addGap(80, 80, 80))))
        );
        ItemCategoryPanelLayout.setVerticalGroup(
            ItemCategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ItemCategoryPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(ItemCategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(ItemCategoryLabel))
                .addGap(18, 18, 18)
                .addGroup(ItemCategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(ItemCategoryPanelLayout.createSequentialGroup()
                        .addGroup(ItemCategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Category1Panel, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                            .addComponent(Category2Panel, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                            .addComponent(Category3Panel, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE))
                        .addGap(28, 28, 28)
                        .addGroup(ItemCategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Category5Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Category4Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(Category6Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(ItemCategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Category8Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Category7Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Category9Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58))
        );

        javax.swing.GroupLayout ItemCategoryFrameLayout = new javax.swing.GroupLayout(ItemCategoryFrame);
        ItemCategoryFrame.setLayout(ItemCategoryFrameLayout);
        ItemCategoryFrameLayout.setHorizontalGroup(
            ItemCategoryFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ItemCategoryFrameLayout.createSequentialGroup()
                .addComponent(ItemCategoryPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        ItemCategoryFrameLayout.setVerticalGroup(
            ItemCategoryFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ItemCategoryPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        MainPanel.add(ItemCategoryFrame, "card2");

        SalesFrame.setBackground(new java.awt.Color(51, 51, 51));

        SalesPanel.setBackground(new java.awt.Color(51, 51, 51));

        SalesLabel.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        SalesLabel.setForeground(new java.awt.Color(204, 204, 204));
        SalesLabel.setText("Sales Record");

        String query = "SELECT * FROM transactions";
        Object obj[][] = null;
        ArrayUtil.UserLogin admin;
        AdminList adminlist;
        Transaction transactions[];
        TransactionList transactionlist;
        float total_bill = 0;
        try{
            transactionlist = new TransactionList();
            transactions = transactionlist.getTransactions();
            obj = new Object[transactionlist.getTableSize()][3]; //Specify the size of array using the number of rows queried

            for (int i = 0; i < transactions.length; i++) {
                obj[i][0] = transactions[i].getId();
                obj[i][1] = transactions[i].getDate();
                obj[i][2] = transactions[i].getTotalBIll();
                total_bill+=transactions[i].getTotalBIll();
                //                obj[i][3] = transactions[i].getAdminId();
            }
            SalesGainField.setText(String.valueOf(total_bill));
        }catch(Exception e){
            e.printStackTrace();
        }
        SalesTable.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        SalesTable.setModel(new javax.swing.table.DefaultTableModel(
            obj,
            new String [] {
                "Receipt Number", "Date", "Bill"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        SalesTable.setRowHeight(35);
        SalesTable.setShowVerticalLines(false);
        SalesTable.getTableHeader().setReorderingAllowed(false);
        SalesTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SalesTableMouseClicked(evt);
            }
        });
        SalesPane.setViewportView(SalesTable);
        JTableHeader SalesTableHead = SalesTable.getTableHeader();
        SalesTableHead.setBackground(new Color(240,240,240));
        SalesTableHead.setForeground(new Color(51,51,51));
        SalesTableHead.setFont (new Font("Century Gothic", Font.PLAIN, 20));
        SalesTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        SalesGainLabel.setFont(new java.awt.Font("Century Gothic", 0, 22)); // NOI18N
        SalesGainLabel.setForeground(new java.awt.Color(255, 255, 255));
        SalesGainLabel.setText("Total Gain:");

        SalesGainField.setEditable(false);
        SalesGainField.setFont(new java.awt.Font("Century Gothic", 0, 20)); // NOI18N
        SalesGainField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        SalesGainField.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        SalesGainField.setPreferredSize(new java.awt.Dimension(170, 43));
        SalesGainField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalesGainFieldActionPerformed(evt);
            }
        });

        SalesStartLabel.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        SalesStartLabel.setForeground(new java.awt.Color(204, 204, 204));
        SalesStartLabel.setText("Start Date:");

        SalesStartDate.setDateFormatString("MM- dd- yyyy");
        SalesStartDate.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        SalesStartDate.setPreferredSize(new java.awt.Dimension(160, 43));

        SalesEndLabel.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        SalesEndLabel.setForeground(new java.awt.Color(204, 204, 204));
        SalesEndLabel.setText("End Date:");

        SalesEndDate.setDateFormatString("MM-dd-yyyy");
        SalesEndDate.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        SalesEndDate.setPreferredSize(new java.awt.Dimension(160, 43));

        SalesViewBtn.setBackground(new java.awt.Color(235, 235, 235));
        SalesViewBtn.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        SalesViewBtn.setForeground(new java.awt.Color(30, 30, 30));
        SalesViewBtn.setText("View Sale Info");
        SalesViewBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        SalesViewBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SalesViewBtn.setPreferredSize(new java.awt.Dimension(150, 45));
        SalesViewBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SalesViewBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                SalesViewBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                SalesViewBtnMouseExited(evt);
            }
        });

        SalesResetBtn.setBackground(new java.awt.Color(238, 238, 238));
        SalesResetBtn.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        SalesResetBtn.setForeground(new java.awt.Color(20, 20, 20));
        SalesResetBtn.setText("Delete");
        SalesResetBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        SalesResetBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SalesResetBtn.setPreferredSize(new java.awt.Dimension(115, 45));
        SalesResetBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SalesResetBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                SalesResetBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                SalesResetBtnMouseExited(evt);
            }
        });

        SalesEnterBtn.setBackground(new java.awt.Color(238, 238, 238));
        SalesEnterBtn.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        SalesEnterBtn.setForeground(new java.awt.Color(20, 20, 20));
        SalesEnterBtn.setText("Enter");
        SalesEnterBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        SalesEnterBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SalesEnterBtn.setPreferredSize(new java.awt.Dimension(115, 45));
        SalesEnterBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SalesEnterBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                SalesEnterBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                SalesEnterBtnMouseExited(evt);
            }
        });

        javax.swing.GroupLayout SalesPanelLayout = new javax.swing.GroupLayout(SalesPanel);
        SalesPanel.setLayout(SalesPanelLayout);
        SalesPanelLayout.setHorizontalGroup(
            SalesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SalesPanelLayout.createSequentialGroup()
                .addGroup(SalesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(SalesPanelLayout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(SalesViewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(SalesGainLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SalesGainField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, SalesPanelLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(SalesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SalesLabel)
                            .addGroup(SalesPanelLayout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(SalesStartLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(SalesStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(SalesEndLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(SalesEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(SalesEnterBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(SalesResetBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(SalesPane, javax.swing.GroupLayout.PREFERRED_SIZE, 830, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(24, 24, 24))
        );
        SalesPanelLayout.setVerticalGroup(
            SalesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SalesPanelLayout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addGroup(SalesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SalesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(SalesResetBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(SalesEnterBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(SalesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(SalesEndDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(SalesEndLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SalesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SalesStartLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SalesStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(27, 27, 27)
                .addComponent(SalesLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SalesPane, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(SalesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(SalesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(SalesGainField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(SalesGainLabel))
                    .addComponent(SalesViewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46))
        );

        javax.swing.GroupLayout SalesFrameLayout = new javax.swing.GroupLayout(SalesFrame);
        SalesFrame.setLayout(SalesFrameLayout);
        SalesFrameLayout.setHorizontalGroup(
            SalesFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(SalesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        SalesFrameLayout.setVerticalGroup(
            SalesFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(SalesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        MainPanel.add(SalesFrame, "card4");

        MostPurchasedPanel.setBackground(new java.awt.Color(51, 51, 51));

        MostPurchasedLabel.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        MostPurchasedLabel.setForeground(new java.awt.Color(204, 204, 204));
        MostPurchasedLabel.setText("Most Purchased Items");

        MostPurchasedTable.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        MostPurchasedTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Category", "Stock", "Sale Percentage"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        MostPurchasedTable.setRowHeight(35);
        MostPurchasedTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        JTableHeader MostPurchasedTableHead = MostPurchasedTable.getTableHeader();
        MostPurchasedTableHead.setBackground(new Color(240,240,240));
        MostPurchasedTableHead.setForeground(new Color(51,51,51));
        MostPurchasedTableHead.setFont (new Font("Century Gothic", Font.PLAIN, 20));
        MostPurchasedTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MostPurchasedTableMouseClicked(evt);
            }
        });
        MostPurchasedPane.setViewportView(MostPurchasedTable);
        if (MostPurchasedTable.getColumnModel().getColumnCount() > 0) {
            MostPurchasedTable.getColumnModel().getColumn(0).setResizable(false);
            MostPurchasedTable.getColumnModel().getColumn(1).setResizable(false);
            MostPurchasedTable.getColumnModel().getColumn(2).setResizable(false);
            MostPurchasedTable.getColumnModel().getColumn(3).setResizable(false);
        }

        MostEnterBtn.setBackground(new java.awt.Color(235, 235, 235));
        MostEnterBtn.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        MostEnterBtn.setText("Enter");
        MostEnterBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        MostEnterBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        MostEnterBtn.setPreferredSize(new java.awt.Dimension(140, 45));
        MostEnterBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MostEnterBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MostEnterBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                MostEnterBtnMouseExited(evt);
            }
        });
        MostEnterBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MostEnterBtnActionPerformed(evt);
            }
        });

        MostResetBtn.setBackground(new java.awt.Color(235, 235, 235));
        MostResetBtn.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        MostResetBtn.setText("Reset");
        MostResetBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        MostResetBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        MostResetBtn.setPreferredSize(new java.awt.Dimension(140, 45));
        MostResetBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MostResetBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MostResetBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                MostResetBtnMouseExited(evt);
            }
        });

        MostStartDate.setDateFormatString("MM- dd- yyyy");
        MostStartDate.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        MostStartDate.setPreferredSize(new java.awt.Dimension(150, 43));

        MostStartLabel.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        MostStartLabel.setForeground(new java.awt.Color(204, 204, 204));
        MostStartLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MostStartLabel.setText("Start Date:");

        MostEndDate.setDateFormatString("MM- dd- yyyy");
        MostEndDate.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        MostEndDate.setPreferredSize(new java.awt.Dimension(150, 43));

        MostEndLabel.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        MostEndLabel.setForeground(new java.awt.Color(204, 204, 204));
        MostEndLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MostEndLabel.setText("End Date:");

        javax.swing.GroupLayout MostPurchasedPanelLayout = new javax.swing.GroupLayout(MostPurchasedPanel);
        MostPurchasedPanel.setLayout(MostPurchasedPanelLayout);
        MostPurchasedPanelLayout.setHorizontalGroup(
            MostPurchasedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MostPurchasedPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(MostPurchasedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MostPurchasedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 833, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MostPurchasedLabel)
                    .addGroup(MostPurchasedPanelLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(MostStartLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MostStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(MostEndLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MostEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(MostEnterBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(MostResetBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 31, Short.MAX_VALUE))
        );
        MostPurchasedPanelLayout.setVerticalGroup(
            MostPurchasedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MostPurchasedPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(MostPurchasedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MostPurchasedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(MostPurchasedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MostEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MostPurchasedPanelLayout.createSequentialGroup()
                                .addComponent(MostEndLabel)
                                .addGap(12, 12, 12)))
                        .addGroup(MostPurchasedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(MostEnterBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MostResetBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(MostPurchasedPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(MostStartLabel))
                    .addComponent(MostStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addComponent(MostPurchasedLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MostPurchasedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(57, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout MostPurchasedFrameLayout = new javax.swing.GroupLayout(MostPurchasedFrame);
        MostPurchasedFrame.setLayout(MostPurchasedFrameLayout);
        MostPurchasedFrameLayout.setHorizontalGroup(
            MostPurchasedFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MostPurchasedPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        MostPurchasedFrameLayout.setVerticalGroup(
            MostPurchasedFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MostPurchasedPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        MainPanel.add(MostPurchasedFrame, "card10");

        ActivityLogPanel.setBackground(new java.awt.Color(51, 51, 51));

        ActivityLogLabel.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        ActivityLogLabel.setForeground(new java.awt.Color(204, 204, 204));
        ActivityLogLabel.setText("Activity Log");

        ActivityTable.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        Activity tmp[] = activityList.getActivities();
        Object obj_activity[][] = new Object[tmp.length][4];

        for (int i = 0; i < obj_activity.length; i++) {
            obj_activity[i][0] = adminList.getAdminById(tmp[i].getAdminId()).getName();
            obj_activity[i][1] = tmp[i].getType();
            obj_activity[i][2] = tmp[i].getDateTime();
            obj_activity[i][3] = tmp[i].getLocation();
        }
        ActivityTable.setModel(new javax.swing.table.DefaultTableModel(
            obj_activity,
            new String [] {
                "Account Name", "Activity", "Date", "Area Performed"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class

                , java.lang.String.class

                , java.lang.String.class

                , java.lang.String.class
            };
            boolean[] canEdit = new boolean[]{
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        ActivityTable.setRowHeight(35);
        ActivityTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        ActivityTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(ActivityTable);
        JTableHeader ActivityTableHead = ActivityTable.getTableHeader();

        ActivityTableHead.setBackground (

            new Color(240,240,240));
        ActivityTableHead.setForeground (

            new Color(51,51,51));
        ActivityTableHead.setFont (

            new Font("Century Gothic", Font.PLAIN, 20));
        if (ActivityTable.getColumnModel().getColumnCount() > 0) {
            ActivityTable.getColumnModel().getColumn(0).setResizable(false);
            ActivityTable.getColumnModel().getColumn(1).setResizable(false);
            ActivityTable.getColumnModel().getColumn(2).setResizable(false);
            ActivityTable.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout ActivityLogPanelLayout = new javax.swing.GroupLayout(ActivityLogPanel);
        ActivityLogPanel.setLayout(ActivityLogPanelLayout);
        ActivityLogPanelLayout.setHorizontalGroup(
            ActivityLogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ActivityLogPanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(ActivityLogLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(ActivityLogPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 868, Short.MAX_VALUE)
                .addContainerGap())
        );
        ActivityLogPanelLayout.setVerticalGroup(
            ActivityLogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ActivityLogPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(ActivityLogLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 554, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout ActivityLogFrameLayout = new javax.swing.GroupLayout(ActivityLogFrame);
        ActivityLogFrame.setLayout(ActivityLogFrameLayout);
        ActivityLogFrameLayout.setHorizontalGroup(
            ActivityLogFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ActivityLogPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        ActivityLogFrameLayout.setVerticalGroup(
            ActivityLogFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ActivityLogPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        MainPanel.add(ActivityLogFrame, "card13");

        ItemInfoPanel.setBackground(new java.awt.Color(51, 51, 51));

        DeletePanel.setBackground(new java.awt.Color(51, 51, 51));
        DeletePanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true));
        DeletePanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        DeletePanel.setPreferredSize(new java.awt.Dimension(115, 45));
        DeletePanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DeletePanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                DeletePanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                DeletePanelMouseExited(evt);
            }
        });

        DeleteLabel.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        DeleteLabel.setForeground(new java.awt.Color(204, 204, 204));
        DeleteLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        DeleteLabel.setText("Delete");
        DeleteLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout DeletePanelLayout = new javax.swing.GroupLayout(DeletePanel);
        DeletePanel.setLayout(DeletePanelLayout);
        DeletePanelLayout.setHorizontalGroup(
            DeletePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DeletePanelLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(DeleteLabel)
                .addContainerGap(35, Short.MAX_VALUE))
        );
        DeletePanelLayout.setVerticalGroup(
            DeletePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DeletePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(DeleteLabel)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        MainInfoPanel.setBackground(new java.awt.Color(204, 204, 204));

        ItemNameLabel.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        ItemNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ItemNameLabel.setText("Item Name:");

        ItemNameField.setEditable(true);
        ItemNameField.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N

        ItemBarcodeLabel.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        ItemBarcodeLabel.setText("Unit Type");

        StockLabel.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        StockLabel.setText("Stock Remaining");

        StockField.setEditable(true);
        StockField.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        StockField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        StockField.setPreferredSize(new java.awt.Dimension(150, 45));

        CapitalLabel.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        CapitalLabel.setText("Capital Price [Unit/Kilo]");

        CapitalField.setEditable(true);
        CapitalField.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        CapitalField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CapitalField.setPreferredSize(new java.awt.Dimension(150, 45));

        SellingLabel.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        SellingLabel.setText("Selling Price [Unit/Kilo]");

        SellingField.setEditable(true);
        SellingField.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        SellingField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        SellingField.setPreferredSize(new java.awt.Dimension(150, 45));

        ItemBarcodeField.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        ItemBarcodeField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "pc", "kg" }));
        ItemBarcodeField.setPreferredSize(new java.awt.Dimension(70, 45));

        javax.swing.GroupLayout MainInfoPanelLayout = new javax.swing.GroupLayout(MainInfoPanel);
        MainInfoPanel.setLayout(MainInfoPanelLayout);
        MainInfoPanelLayout.setHorizontalGroup(
            MainInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainInfoPanelLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(MainInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ItemNameLabel, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, MainInfoPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(ItemNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 638, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, MainInfoPanelLayout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(MainInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CapitalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ItemBarcodeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(MainInfoPanelLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(MainInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CapitalField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ItemBarcodeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(44, 44, 44)
                        .addGroup(MainInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SellingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(MainInfoPanelLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(SellingField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(MainInfoPanelLayout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(StockField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(StockLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(118, Short.MAX_VALUE))
        );
        MainInfoPanelLayout.setVerticalGroup(
            MainInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainInfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ItemNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ItemNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(MainInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ItemBarcodeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StockLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(MainInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(StockField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ItemBarcodeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addGroup(MainInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CapitalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SellingLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(MainInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(SellingField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CapitalField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(86, Short.MAX_VALUE))
        );

        ItemInformationLabel.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        ItemInformationLabel.setForeground(new java.awt.Color(204, 204, 204));
        ItemInformationLabel.setText("Item Information");

        ItemInfoEditBtn.setBackground(new java.awt.Color(235, 235, 235));
        ItemInfoEditBtn.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        ItemInfoEditBtn.setText("Edit");
        ItemInfoEditBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        ItemInfoEditBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ItemInfoEditBtn.setPreferredSize(new java.awt.Dimension(115, 45));
        ItemInfoEditBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ItemInfoEditBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ItemInfoEditBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ItemInfoEditBtnMouseExited(evt);
            }
        });

        ItemInfoBackBtn.setBackground(new java.awt.Color(235, 235, 235));
        ItemInfoBackBtn.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        ItemInfoBackBtn.setText("Back");
        ItemInfoBackBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        ItemInfoBackBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ItemInfoBackBtn.setPreferredSize(new java.awt.Dimension(115, 45));
        ItemInfoBackBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ItemInfoBackBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ItemInfoBackBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ItemInfoBackBtnMouseExited(evt);
            }
        });

        ItemInfoViewSupp.setBackground(new java.awt.Color(235, 235, 235));
        ItemInfoViewSupp.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        ItemInfoViewSupp.setText("View Supplier(s)");
        ItemInfoViewSupp.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        ItemInfoViewSupp.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ItemInfoViewSupp.setPreferredSize(new java.awt.Dimension(150, 45));
        ItemInfoViewSupp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ItemInfoViewSuppMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ItemInfoViewSuppMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ItemInfoViewSuppMouseExited(evt);
            }
        });

        javax.swing.GroupLayout ItemInfoPanelLayout = new javax.swing.GroupLayout(ItemInfoPanel);
        ItemInfoPanel.setLayout(ItemInfoPanelLayout);
        ItemInfoPanelLayout.setHorizontalGroup(
            ItemInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ItemInfoPanelLayout.createSequentialGroup()
                .addGroup(ItemInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(ItemInfoPanelLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(ItemInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(ItemInfoPanelLayout.createSequentialGroup()
                                .addComponent(ItemInformationLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(DeletePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(MainInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(ItemInfoPanelLayout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(ItemInfoViewSupp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ItemInfoEditBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(104, 104, 104)
                        .addComponent(ItemInfoBackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        ItemInfoPanelLayout.setVerticalGroup(
            ItemInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ItemInfoPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(ItemInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ItemInformationLabel)
                    .addComponent(DeletePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(MainInfoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(ItemInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ItemInfoBackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ItemInfoEditBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ItemInfoViewSupp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13))
        );

        javax.swing.GroupLayout ItemInfoFrameLayout = new javax.swing.GroupLayout(ItemInfoFrame);
        ItemInfoFrame.setLayout(ItemInfoFrameLayout);
        ItemInfoFrameLayout.setHorizontalGroup(
            ItemInfoFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ItemInfoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        ItemInfoFrameLayout.setVerticalGroup(
            ItemInfoFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ItemInfoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        MainPanel.add(ItemInfoFrame, "card6");

        ItemListPanel.setBackground(new java.awt.Color(51, 51, 51));

        ItemListLabel.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        ItemListLabel.setForeground(new java.awt.Color(204, 204, 204));
        ItemListLabel.setText("Item List");

        SearchPanel.setPreferredSize(new java.awt.Dimension(505, 45));

        ItemSearchLogo.setBackground(new java.awt.Color(255, 255, 255));
        ItemSearchLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/Search-mini.png"))); // NOI18N
        ItemSearchLogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ItemSearchLogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ItemSearchLogoMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ItemSearchLogoMouseEntered(evt);
            }
        });

        ItemSearchField.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        ItemSearchField.setBorder(null);
        ItemSearchField.setPreferredSize(new java.awt.Dimension(1, 45));

        javax.swing.GroupLayout SearchPanelLayout = new javax.swing.GroupLayout(SearchPanel);
        SearchPanel.setLayout(SearchPanelLayout);
        SearchPanelLayout.setHorizontalGroup(
            SearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SearchPanelLayout.createSequentialGroup()
                .addComponent(ItemSearchField, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ItemSearchLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        SearchPanelLayout.setVerticalGroup(
            SearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ItemSearchLogo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(ItemSearchField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        ItemListTable.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        ItemListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Name", "Stock Remaining", "Category"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ItemListTable.setRowHeight(35);
        ItemListTable.setShowVerticalLines(false);
        ItemListTable.getTableHeader().setReorderingAllowed(false);
        ItemListTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ItemListTableMouseClicked(evt);
            }
        });
        ItemListPane.setViewportView(ItemListTable);
        if (ItemListTable.getColumnModel().getColumnCount() > 0) {
            ItemListTable.getColumnModel().getColumn(0).setResizable(false);
            ItemListTable.getColumnModel().getColumn(1).setResizable(false);
            ItemListTable.getColumnModel().getColumn(2).setResizable(false);
        }
        JTableHeader ItemListTableHead = ItemListTable.getTableHeader();
        ItemListTableHead.setBackground(new Color(240,240,240));
        ItemListTableHead.setForeground(new Color(51,51,51));
        ItemListTableHead.setFont (new Font("Century Gothic", Font.PLAIN, 20));
        ItemListTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        ListViewBtn.setBackground(new java.awt.Color(235, 235, 235));
        ListViewBtn.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        ListViewBtn.setText("View Item");
        ListViewBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        ListViewBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ListViewBtn.setPreferredSize(new java.awt.Dimension(135, 45));
        ListViewBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ListViewBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ListViewBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ListViewBtnMouseExited(evt);
            }
        });

        ListItemResetBtn.setBackground(new java.awt.Color(235, 235, 235));
        ListItemResetBtn.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        ListItemResetBtn.setText("Reset");
        ListItemResetBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        ListItemResetBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ListItemResetBtn.setPreferredSize(new java.awt.Dimension(120, 45));
        ListItemResetBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ListItemResetBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ListItemResetBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ListItemResetBtnMouseExited(evt);
            }
        });

        ListItemAddBtn.setBackground(new java.awt.Color(235, 235, 235));
        ListItemAddBtn.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        ListItemAddBtn.setText("Add New Item");
        ListItemAddBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        ListItemAddBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ListItemAddBtn.setPreferredSize(new java.awt.Dimension(140, 45));
        ListItemAddBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ListItemAddBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ListItemAddBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ListItemAddBtnMouseExited(evt);
            }
        });

        ListItemBackBtn.setBackground(new java.awt.Color(235, 235, 235));
        ListItemBackBtn.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        ListItemBackBtn.setText("Back");
        ListItemBackBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        ListItemBackBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ListItemBackBtn.setPreferredSize(new java.awt.Dimension(120, 45));
        ListItemBackBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ListItemBackBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ListItemBackBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ListItemBackBtnMouseExited(evt);
            }
        });

        javax.swing.GroupLayout ItemListPanelLayout = new javax.swing.GroupLayout(ItemListPanel);
        ItemListPanel.setLayout(ItemListPanelLayout);
        ItemListPanelLayout.setHorizontalGroup(
            ItemListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ItemListPanelLayout.createSequentialGroup()
                .addGroup(ItemListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(ItemListPanelLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(ItemListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ItemListPane, javax.swing.GroupLayout.PREFERRED_SIZE, 810, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(ItemListPanelLayout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(ItemListLabel)
                                .addGap(31, 31, 31)
                                .addComponent(SearchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ListItemResetBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(19, 19, 19))))
                    .addGroup(ItemListPanelLayout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(ListViewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ListItemAddBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(69, 69, 69)
                        .addComponent(ListItemBackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        ItemListPanelLayout.setVerticalGroup(
            ItemListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ItemListPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(ItemListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ItemListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(SearchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ItemListPanelLayout.createSequentialGroup()
                            .addComponent(ItemListLabel)
                            .addGap(13, 13, 13)))
                    .addComponent(ListItemResetBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(ItemListPane, javax.swing.GroupLayout.DEFAULT_SIZE, 454, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ItemListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ListItemAddBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ListViewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ListItemBackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout ItemListFrameLayout = new javax.swing.GroupLayout(ItemListFrame);
        ItemListFrame.setLayout(ItemListFrameLayout);
        ItemListFrameLayout.setHorizontalGroup(
            ItemListFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ItemListPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        ItemListFrameLayout.setVerticalGroup(
            ItemListFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ItemListPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        MainPanel.add(ItemListFrame, "card7");

        AddItemPanel.setBackground(new java.awt.Color(51, 51, 51));

        AddItemLabel.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        AddItemLabel.setForeground(new java.awt.Color(204, 204, 204));
        AddItemLabel.setText("Add Item");

        AddNameLabel.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        AddNameLabel.setForeground(new java.awt.Color(240, 240, 240));
        AddNameLabel.setText("Product Name");

        AddNameField.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        AddNameField.setPreferredSize(new java.awt.Dimension(650, 45));
        AddNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddNameFieldActionPerformed(evt);
            }
        });

        AddBarcodeLabel.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        AddBarcodeLabel.setForeground(new java.awt.Color(240, 240, 240));
        AddBarcodeLabel.setText("Unit Type");

        AddStockField.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        AddStockField.setPreferredSize(new java.awt.Dimension(150, 45));
        AddStockField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddStockFieldActionPerformed(evt);
            }
        });

        AddStockLabel.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        AddStockLabel.setForeground(new java.awt.Color(240, 240, 240));
        AddStockLabel.setText("Stock");

        AddCapitalLabel.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        AddCapitalLabel.setForeground(new java.awt.Color(240, 240, 240));
        AddCapitalLabel.setText("Capital Price");

        AddCapitalField.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        AddCapitalField.setPreferredSize(new java.awt.Dimension(150, 45));

        AddSellLabel.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        AddSellLabel.setForeground(new java.awt.Color(240, 240, 240));
        AddSellLabel.setText("Selling Price");

        AddSellField.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        AddSellField.setPreferredSize(new java.awt.Dimension(150, 45));
        AddSellField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddSellFieldActionPerformed(evt);
            }
        });

        AddItemUnit.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        AddItemUnit.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "pc", "kg" }));
        AddItemUnit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AddItemUnit.setPreferredSize(new java.awt.Dimension(150, 45));

        AddItemSaveBtn.setBackground(new java.awt.Color(235, 235, 235));
        AddItemSaveBtn.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        AddItemSaveBtn.setText("Save");
        AddItemSaveBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        AddItemSaveBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AddItemSaveBtn.setPreferredSize(new java.awt.Dimension(120, 45));
        AddItemSaveBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddItemSaveBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                AddItemSaveBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                AddItemSaveBtnMouseExited(evt);
            }
        });

        AddItemCancelBtn.setBackground(new java.awt.Color(235, 235, 235));
        AddItemCancelBtn.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        AddItemCancelBtn.setText("Cancel");
        AddItemCancelBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        AddItemCancelBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AddItemCancelBtn.setPreferredSize(new java.awt.Dimension(120, 45));
        AddItemCancelBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddItemCancelBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                AddItemCancelBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                AddItemCancelBtnMouseExited(evt);
            }
        });

        AddItemSuppNameLabel.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        AddItemSuppNameLabel.setForeground(new java.awt.Color(240, 240, 240));
        AddItemSuppNameLabel.setText("Supplier Name");

        AddItemSuppNameField.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        AddItemSuppNameField.setPreferredSize(new java.awt.Dimension(580, 45));
        AddItemSuppNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddItemSuppNameFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AddItemPanelLayout = new javax.swing.GroupLayout(AddItemPanel);
        AddItemPanel.setLayout(AddItemPanelLayout);
        AddItemPanelLayout.setHorizontalGroup(
            AddItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddItemPanelLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(AddItemLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddItemPanelLayout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addGroup(AddItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AddNameField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(AddItemPanelLayout.createSequentialGroup()
                        .addComponent(AddNameLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(AddItemPanelLayout.createSequentialGroup()
                        .addGroup(AddItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(AddItemPanelLayout.createSequentialGroup()
                                .addGap(300, 300, 300)
                                .addComponent(AddItemSaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(AddItemSuppNameLabel)
                            .addComponent(AddItemSuppNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(AddItemPanelLayout.createSequentialGroup()
                                .addGroup(AddItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(AddStockLabel)
                                    .addComponent(AddStockField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(AddItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(AddBarcodeLabel)
                                    .addComponent(AddItemUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(40, 40, 40)))
                        .addGroup(AddItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AddItemPanelLayout.createSequentialGroup()
                                .addGap(81, 81, 81)
                                .addComponent(AddItemCancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddItemPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                                .addGroup(AddItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(AddSellLabel)
                                    .addComponent(AddSellField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(AddCapitalLabel)
                                    .addComponent(AddCapitalField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(94, 94, 94))
        );
        AddItemPanelLayout.setVerticalGroup(
            AddItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddItemPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(AddItemLabel)
                .addGroup(AddItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddItemPanelLayout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(AddNameLabel)
                        .addGroup(AddItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AddItemPanelLayout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(AddNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(AddItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(AddItemPanelLayout.createSequentialGroup()
                                        .addGap(37, 37, 37)
                                        .addComponent(AddStockLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(AddStockField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(AddItemPanelLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(AddSellLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(AddSellField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(AddItemPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(AddBarcodeLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(AddItemUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(58, 58, 58)
                        .addComponent(AddCapitalLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(AddCapitalField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AddItemPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(AddItemSuppNameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(AddItemSuppNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 118, Short.MAX_VALUE)
                .addGroup(AddItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddItemCancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AddItemSaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37))
        );

        javax.swing.GroupLayout AddItemFrameLayout = new javax.swing.GroupLayout(AddItemFrame);
        AddItemFrame.setLayout(AddItemFrameLayout);
        AddItemFrameLayout.setHorizontalGroup(
            AddItemFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(AddItemPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        AddItemFrameLayout.setVerticalGroup(
            AddItemFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(AddItemPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        MainPanel.add(AddItemFrame, "card8");

        TransactionPanel.setBackground(new java.awt.Color(51, 51, 51));

        TransactionLabe.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        TransactionLabe.setForeground(new java.awt.Color(204, 204, 204));
        TransactionLabe.setText("Transaction Detail");

        TransIDLabel.setFont(new java.awt.Font("Century Gothic", 0, 20)); // NOI18N
        TransIDLabel.setText("Receipt #");

        TransIDField.setEditable(false);
        TransIDField.setBackground(new java.awt.Color(255, 255, 255));
        TransIDField.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N

        TransactionTable.setFont(new java.awt.Font("Century Gothic", 0, 14));
        TransactionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                null,null,null,null
            },
            new String [] {
                "Name", "Price", "Quantity", "Total Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TransactionTable.setRowHeight(35);
        TransactionTable.setShowVerticalLines(false);
        TransactionTable.getTableHeader().setReorderingAllowed(false);
        TansactionPane.setViewportView(TransactionTable);
        if (TransactionTable.getColumnModel().getColumnCount() > 0) {
            TransactionTable.getColumnModel().getColumn(0).setResizable(false);
            TransactionTable.getColumnModel().getColumn(1).setResizable(false);
            TransactionTable.getColumnModel().getColumn(2).setResizable(false);
            TransactionTable.getColumnModel().getColumn(3).setResizable(false);
        }
        JTableHeader TransactionTableHead = TransactionTable.getTableHeader();
        TransactionTableHead.setBackground(new Color(240,240,240));
        TransactionTableHead.setForeground(new Color(51,51,51));
        TransactionTableHead.setFont (new Font("Century Gothic", Font.PLAIN, 20));

        TransCashierLabel.setFont(new java.awt.Font("Century Gothic", 0, 20)); // NOI18N
        TransCashierLabel.setText("Cashier");

        TransTimeLabel.setFont(new java.awt.Font("Century Gothic", 0, 20)); // NOI18N
        TransTimeLabel.setText("Time");

        TransDateLabel.setFont(new java.awt.Font("Century Gothic", 0, 20)); // NOI18N
        TransDateLabel.setText("Date");

        TransDateField.setEditable(false);
        TransDateField.setBackground(new java.awt.Color(255, 255, 255));
        TransDateField.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N

        TransTimeField.setEditable(false);
        TransTimeField.setBackground(new java.awt.Color(255, 255, 255));
        TransTimeField.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N

        TransCashierField.setEditable(false);
        TransCashierField.setBackground(new java.awt.Color(255, 255, 255));
        TransCashierField.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N

        TransBillLabel.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        TransBillLabel.setText("Total Bill");

        TransBillField.setEditable(false);
        TransBillField.setBackground(new java.awt.Color(255, 255, 255));
        TransBillField.setFont(new java.awt.Font("Century Gothic", 0, 20)); // NOI18N
        TransBillField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout TransactionPanelMidLayout = new javax.swing.GroupLayout(TransactionPanelMid);
        TransactionPanelMid.setLayout(TransactionPanelMidLayout);
        TransactionPanelMidLayout.setHorizontalGroup(
            TransactionPanelMidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TransactionPanelMidLayout.createSequentialGroup()
                .addGroup(TransactionPanelMidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TransactionPanelMidLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(TransactionPanelMidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(TransactionPanelMidLayout.createSequentialGroup()
                                .addComponent(TransBillLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(TransBillField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(TansactionPane, javax.swing.GroupLayout.PREFERRED_SIZE, 729, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(TransactionPanelMidLayout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addGroup(TransactionPanelMidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(TransIDLabel)
                            .addComponent(TransCashierLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(TransactionPanelMidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(TransIDField)
                            .addComponent(TransCashierField, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50)
                        .addGroup(TransactionPanelMidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(TransDateLabel)
                            .addComponent(TransTimeLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(TransactionPanelMidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TransDateField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TransTimeField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        TransactionPanelMidLayout.setVerticalGroup(
            TransactionPanelMidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TransactionPanelMidLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(TransactionPanelMidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TransIDLabel)
                    .addComponent(TransIDField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TransDateLabel)
                    .addComponent(TransDateField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(TransactionPanelMidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TransTimeLabel)
                    .addComponent(TransCashierLabel)
                    .addComponent(TransTimeField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TransCashierField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(TansactionPane, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(TransactionPanelMidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TransBillLabel)
                    .addComponent(TransBillField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        TransactionBackBtn.setBackground(new java.awt.Color(235, 235, 235));
        TransactionBackBtn.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        TransactionBackBtn.setText("Back");
        TransactionBackBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        TransactionBackBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        TransactionBackBtn.setPreferredSize(new java.awt.Dimension(120, 45));
        TransactionBackBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TransactionBackBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                TransactionBackBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                TransactionBackBtnMouseExited(evt);
            }
        });

        javax.swing.GroupLayout TransactionPanelLayout = new javax.swing.GroupLayout(TransactionPanel);
        TransactionPanel.setLayout(TransactionPanelLayout);
        TransactionPanelLayout.setHorizontalGroup(
            TransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TransactionPanelLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(TransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TransactionPanelLayout.createSequentialGroup()
                        .addComponent(TransactionPanelMid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(39, Short.MAX_VALUE))
                    .addGroup(TransactionPanelLayout.createSequentialGroup()
                        .addComponent(TransactionLabe)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(TransactionBackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52))))
        );
        TransactionPanelLayout.setVerticalGroup(
            TransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TransactionPanelLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(TransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TransactionLabe)
                    .addComponent(TransactionBackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(TransactionPanelMid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        javax.swing.GroupLayout TransactionFrameLayout = new javax.swing.GroupLayout(TransactionFrame);
        TransactionFrame.setLayout(TransactionFrameLayout);
        TransactionFrameLayout.setHorizontalGroup(
            TransactionFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TransactionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        TransactionFrameLayout.setVerticalGroup(
            TransactionFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TransactionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        MainPanel.add(TransactionFrame, "card9");

        SuppliersListPanel.setBackground(new java.awt.Color(51, 51, 51));

        SupplierLabel.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        SupplierLabel.setForeground(new java.awt.Color(204, 204, 204));
        SupplierLabel.setText("Suppliers List");

        SuppListTable.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        SuppListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Supplier Name", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        SuppListTable.setRowHeight(35);
        SuppListTable.getTableHeader().setReorderingAllowed(false);
        JTableHeader SuppListTableHead = SuppListTable.getTableHeader();
        SuppListTableHead.setBackground(new Color(240,240,240));
        SuppListTableHead.setForeground(new Color(51,51,51));
        SuppListTableHead.setFont (new Font("Century Gothic", Font.PLAIN, 20));
        SuppListTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        SuppListTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SuppListTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(SuppListTable);
        if (SuppListTable.getColumnModel().getColumnCount() > 0) {
            SuppListTable.getColumnModel().getColumn(0).setResizable(false);
            SuppListTable.getColumnModel().getColumn(1).setResizable(false);
        }

        SuppDeleteBtn.setBackground(new java.awt.Color(235, 235, 235));
        SuppDeleteBtn.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        SuppDeleteBtn.setText("Delete");
        SuppDeleteBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        SuppDeleteBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SuppDeleteBtn.setPreferredSize(new java.awt.Dimension(120, 45));
        SuppDeleteBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SuppDeleteBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                SuppDeleteBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                SuppDeleteBtnMouseExited(evt);
            }
        });

        SuppBackBtn.setBackground(new java.awt.Color(235, 235, 235));
        SuppBackBtn.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        SuppBackBtn.setText("Back");
        SuppBackBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        SuppBackBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SuppBackBtn.setPreferredSize(new java.awt.Dimension(120, 45));
        SuppBackBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SuppBackBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                SuppBackBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                SuppBackBtnMouseExited(evt);
            }
        });

        SuppAddBtn.setBackground(new java.awt.Color(235, 235, 235));
        SuppAddBtn.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        SuppAddBtn.setText("Add Supplier");
        SuppAddBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        SuppAddBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SuppAddBtn.setPreferredSize(new java.awt.Dimension(130, 45));
        SuppAddBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SuppAddBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                SuppAddBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                SuppAddBtnMouseExited(evt);
            }
        });

        SupplierListProductName.setFont(new java.awt.Font("Century Gothic", 0, 20)); // NOI18N
        SupplierListProductName.setForeground(new java.awt.Color(240, 240, 240));
        SupplierListProductName.setText("Product: ");

        javax.swing.GroupLayout SuppliersListPanelLayout = new javax.swing.GroupLayout(SuppliersListPanel);
        SuppliersListPanel.setLayout(SuppliersListPanelLayout);
        SuppliersListPanelLayout.setHorizontalGroup(
            SuppliersListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SuppliersListPanelLayout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(SuppDeleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SuppAddBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(113, 113, 113)
                .addComponent(SuppBackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
            .addGroup(SuppliersListPanelLayout.createSequentialGroup()
                .addGroup(SuppliersListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SuppliersListPanelLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(SupplierLabel))
                    .addGroup(SuppliersListPanelLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(SuppliersListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SupplierListProductName)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 820, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        SuppliersListPanelLayout.setVerticalGroup(
            SuppliersListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SuppliersListPanelLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(SupplierLabel)
                .addGap(18, 18, 18)
                .addComponent(SupplierListProductName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(SuppliersListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SuppDeleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SuppAddBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SuppBackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout SuppliersListFrameLayout = new javax.swing.GroupLayout(SuppliersListFrame);
        SuppliersListFrame.setLayout(SuppliersListFrameLayout);
        SuppliersListFrameLayout.setHorizontalGroup(
            SuppliersListFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(SuppliersListPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        SuppliersListFrameLayout.setVerticalGroup(
            SuppliersListFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(SuppliersListPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        MainPanel.add(SuppliersListFrame, "card11");

        AddSuppPanel.setBackground(new java.awt.Color(51, 51, 51));

        AddSuppLabel.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        AddSuppLabel.setForeground(new java.awt.Color(204, 204, 204));
        AddSuppLabel.setText("Add Supplier");

        AddSuppNameLabel.setFont(new java.awt.Font("Century Gothic", 0, 20)); // NOI18N
        AddSuppNameLabel.setForeground(new java.awt.Color(240, 240, 240));
        AddSuppNameLabel.setText("Supplier Name");

        AddSuppNameField.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        AddSuppNameField.setPreferredSize(new java.awt.Dimension(450, 43));

        AddSuppPriceLabel.setFont(new java.awt.Font("Century Gothic", 0, 20)); // NOI18N
        AddSuppPriceLabel.setForeground(new java.awt.Color(240, 240, 240));
        AddSuppPriceLabel.setText("Supplier Price");

        AddSuppPriceField.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        AddSuppPriceField.setPreferredSize(new java.awt.Dimension(180, 43));

        AddSuppSaveBtn.setBackground(new java.awt.Color(235, 235, 235));
        AddSuppSaveBtn.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        AddSuppSaveBtn.setText("Save");
        AddSuppSaveBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        AddSuppSaveBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AddSuppSaveBtn.setPreferredSize(new java.awt.Dimension(120, 45));
        AddSuppSaveBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddSuppSaveBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                AddSuppSaveBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                AddSuppSaveBtnMouseExited(evt);
            }
        });

        AddSuppCancelBtn.setBackground(new java.awt.Color(235, 235, 235));
        AddSuppCancelBtn.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        AddSuppCancelBtn.setText("Cancel");
        AddSuppCancelBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        AddSuppCancelBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AddSuppCancelBtn.setPreferredSize(new java.awt.Dimension(120, 45));
        AddSuppCancelBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddSuppCancelBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                AddSuppCancelBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                AddSuppCancelBtnMouseExited(evt);
            }
        });

        javax.swing.GroupLayout AddSuppPanelLayout = new javax.swing.GroupLayout(AddSuppPanel);
        AddSuppPanel.setLayout(AddSuppPanelLayout);
        AddSuppPanelLayout.setHorizontalGroup(
            AddSuppPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddSuppPanelLayout.createSequentialGroup()
                .addGroup(AddSuppPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddSuppPanelLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(AddSuppLabel))
                    .addGroup(AddSuppPanelLayout.createSequentialGroup()
                        .addGap(196, 196, 196)
                        .addGroup(AddSuppPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AddSuppNameLabel)
                            .addComponent(AddSuppPriceLabel)
                            .addGroup(AddSuppPanelLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(AddSuppPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(AddSuppNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(AddSuppPriceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(AddSuppPanelLayout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(AddSuppSaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(173, 173, 173)
                                .addComponent(AddSuppCancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(232, Short.MAX_VALUE))
        );
        AddSuppPanelLayout.setVerticalGroup(
            AddSuppPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddSuppPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(AddSuppLabel)
                .addGap(49, 49, 49)
                .addComponent(AddSuppNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AddSuppNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63)
                .addComponent(AddSuppPriceLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AddSuppPriceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 181, Short.MAX_VALUE)
                .addGroup(AddSuppPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddSuppSaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AddSuppCancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(84, 84, 84))
        );

        javax.swing.GroupLayout AddSuppFrameLayout = new javax.swing.GroupLayout(AddSuppFrame);
        AddSuppFrame.setLayout(AddSuppFrameLayout);
        AddSuppFrameLayout.setHorizontalGroup(
            AddSuppFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(AddSuppPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        AddSuppFrameLayout.setVerticalGroup(
            AddSuppFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(AddSuppPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        MainPanel.add(AddSuppFrame, "card12");

        StockPrintPanel.setBackground(new java.awt.Color(51, 51, 51));

        StockPrintLabel.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        StockPrintLabel.setForeground(new java.awt.Color(204, 204, 204));
        StockPrintLabel.setText("Stock Print");

        StockPrintMidPanel.setBackground(new java.awt.Color(204, 204, 204));

        jLabel6.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        jLabel6.setText("Select category to print:");

        PlumbingCB.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        PlumbingCB.setText("Plumbing");
        PlumbingCB.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        PlumbingCB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PlumbingCB.setPreferredSize(new java.awt.Dimension(175, 40));

        ConstructionCB.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        ConstructionCB.setText("Construction");
        ConstructionCB.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ConstructionCB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ConstructionCB.setPreferredSize(new java.awt.Dimension(130, 40));

        ElectricalCB.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        ElectricalCB.setText("Electrical");
        ElectricalCB.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ElectricalCB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ElectricalCB.setPreferredSize(new java.awt.Dimension(130, 40));

        OilCB.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        OilCB.setText("Oils");
        OilCB.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        OilCB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        OilCB.setPreferredSize(new java.awt.Dimension(130, 40));

        AutoCB.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        AutoCB.setText("Auto Parts");
        AutoCB.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AutoCB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        AutoCB.setPreferredSize(new java.awt.Dimension(130, 40));

        MotorCB.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        MotorCB.setText("Motor Accessories");
        MotorCB.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        MotorCB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MotorCB.setPreferredSize(new java.awt.Dimension(175, 40));

        StainlessCB.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        StainlessCB.setText("Stainless");
        StainlessCB.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        StainlessCB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        StainlessCB.setPreferredSize(new java.awt.Dimension(130, 40));

        OtherCB.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        OtherCB.setText("Other");
        OtherCB.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        OtherCB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        OtherCB.setPreferredSize(new java.awt.Dimension(130, 40));

        FishingCB.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        FishingCB.setText("Fishing Gear");
        FishingCB.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        FishingCB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        FishingCB.setPreferredSize(new java.awt.Dimension(175, 40));

        javax.swing.GroupLayout StockPrintMidPanelLayout = new javax.swing.GroupLayout(StockPrintMidPanel);
        StockPrintMidPanel.setLayout(StockPrintMidPanelLayout);
        StockPrintMidPanelLayout.setHorizontalGroup(
            StockPrintMidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, StockPrintMidPanelLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(StockPrintMidPanelLayout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addGroup(StockPrintMidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(OilCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ConstructionCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StainlessCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                .addGroup(StockPrintMidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(FishingCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MotorCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PlumbingCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addGroup(StockPrintMidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ElectricalCB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AutoCB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(OtherCB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(72, 72, 72))
        );
        StockPrintMidPanelLayout.setVerticalGroup(
            StockPrintMidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StockPrintMidPanelLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel6)
                .addGap(59, 59, 59)
                .addGroup(StockPrintMidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PlumbingCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ElectricalCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ConstructionCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(StockPrintMidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OilCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MotorCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AutoCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(56, 56, 56)
                .addGroup(StockPrintMidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(StainlessCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FishingCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(OtherCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(62, Short.MAX_VALUE))
        );

        StockPrintContinueBtn.setBackground(new java.awt.Color(235, 235, 235));
        StockPrintContinueBtn.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        StockPrintContinueBtn.setText("Continue");
        StockPrintContinueBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        StockPrintContinueBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        StockPrintContinueBtn.setPreferredSize(new java.awt.Dimension(120, 45));
        StockPrintContinueBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                StockPrintContinueBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                StockPrintContinueBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                StockPrintContinueBtnMouseExited(evt);
            }
        });

        StockPrintCancelBtn.setBackground(new java.awt.Color(235, 235, 235));
        StockPrintCancelBtn.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        StockPrintCancelBtn.setText("Cancel");
        StockPrintCancelBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        StockPrintCancelBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        StockPrintCancelBtn.setPreferredSize(new java.awt.Dimension(120, 45));
        StockPrintCancelBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                StockPrintCancelBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                StockPrintCancelBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                StockPrintCancelBtnMouseExited(evt);
            }
        });

        javax.swing.GroupLayout StockPrintPanelLayout = new javax.swing.GroupLayout(StockPrintPanel);
        StockPrintPanel.setLayout(StockPrintPanelLayout);
        StockPrintPanelLayout.setHorizontalGroup(
            StockPrintPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StockPrintPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(StockPrintLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, StockPrintPanelLayout.createSequentialGroup()
                .addContainerGap(85, Short.MAX_VALUE)
                .addGroup(StockPrintPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, StockPrintPanelLayout.createSequentialGroup()
                        .addComponent(StockPrintMidPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(83, 83, 83))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, StockPrintPanelLayout.createSequentialGroup()
                        .addComponent(StockPrintContinueBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(108, 108, 108)
                        .addComponent(StockPrintCancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(134, 134, 134))))
        );
        StockPrintPanelLayout.setVerticalGroup(
            StockPrintPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StockPrintPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(StockPrintLabel)
                .addGap(30, 30, 30)
                .addComponent(StockPrintMidPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(StockPrintPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(StockPrintContinueBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StockPrintCancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53))
        );

        javax.swing.GroupLayout StockPrintFrameLayout = new javax.swing.GroupLayout(StockPrintFrame);
        StockPrintFrame.setLayout(StockPrintFrameLayout);
        StockPrintFrameLayout.setHorizontalGroup(
            StockPrintFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(StockPrintPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        StockPrintFrameLayout.setVerticalGroup(
            StockPrintFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(StockPrintPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        MainPanel.add(StockPrintFrame, "card14");

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        PrintStockPrintBtn.setBackground(new java.awt.Color(235, 235, 235));
        PrintStockPrintBtn.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        PrintStockPrintBtn.setForeground(new java.awt.Color(51, 51, 51));
        PrintStockPrintBtn.setText("Print");
        PrintStockPrintBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PrintStockPrintBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        PrintStockPrintBtn.setPreferredSize(new java.awt.Dimension(120, 45));
        PrintStockPrintBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PrintStockPrintBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                PrintStockPrintBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                PrintStockPrintBtnMouseExited(evt);
            }
        });

        PrintStockCancelBtn.setBackground(new java.awt.Color(235, 235, 235));
        PrintStockCancelBtn.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        PrintStockCancelBtn.setForeground(new java.awt.Color(51, 51, 51));
        PrintStockCancelBtn.setText("Cancel");
        PrintStockCancelBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PrintStockCancelBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        PrintStockCancelBtn.setPreferredSize(new java.awt.Dimension(120, 45));
        PrintStockCancelBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PrintStockCancelBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                PrintStockCancelBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                PrintStockCancelBtnMouseExited(evt);
            }
        });

        PrintTable.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        PrintTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Capital Price", "Sell Price", "Stock", "Unit", "Category"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        PrintTable.setMaximumSize(new java.awt.Dimension(2147483647, 12000000));
        PrintTable.setRowHeight(23);
        PrintTable.getTableHeader().setReorderingAllowed(false);
        JTableHeader PrintTableHead = PrintTable.getTableHeader();
        PrintTableHead.setBackground(new Color(240,240,240));
        PrintTableHead.setForeground(new Color(51,51,51));
        PrintTableHead.setFont (new Font("Century Gothic", Font.PLAIN, 15));
        jScrollPane4.setViewportView(PrintTable);
        if (PrintTable.getColumnModel().getColumnCount() > 0) {
            PrintTable.getColumnModel().getColumn(1).setResizable(false);
            PrintTable.getColumnModel().getColumn(2).setResizable(false);
            PrintTable.getColumnModel().getColumn(3).setResizable(false);
            PrintTable.getColumnModel().getColumn(4).setResizable(false);
            PrintTable.getColumnModel().getColumn(5).setResizable(false);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(112, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(PrintStockPrintBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(81, 81, 81)
                        .addComponent(PrintStockCancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(90, 90, 90))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 649, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(127, 127, 127))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PrintStockPrintBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PrintStockCancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38))
        );

        javax.swing.GroupLayout PrintStockLayout = new javax.swing.GroupLayout(PrintStock);
        PrintStock.setLayout(PrintStockLayout);
        PrintStockLayout.setHorizontalGroup(
            PrintStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        PrintStockLayout.setVerticalGroup(
            PrintStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        MainPanel.add(PrintStock, "card15");

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));

        jLabel12.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(204, 204, 204));
        jLabel12.setText("Accounts");

        AccountsTable.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        AccountsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Account Name", "Username"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        AccountsTable.setRowHeight(35);
        AccountsTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        AccountsTable.getTableHeader().setReorderingAllowed(false);
        AccountsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AccountsTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(AccountsTable);
        if (AccountsTable.getColumnModel().getColumnCount() > 0) {
            AccountsTable.getColumnModel().getColumn(0).setResizable(false);
            AccountsTable.getColumnModel().getColumn(1).setResizable(false);
        }
        JTableHeader AccountsTableHead = AccountsTable.getTableHeader();
        AccountsTableHead.setBackground(new Color(240,240,240));
        AccountsTableHead.setForeground(new Color(51,51,51));
        AccountsTableHead.setFont (new Font("Century Gothic", Font.PLAIN, 20));

        AccountsViewBtn.setBackground(new java.awt.Color(235, 235, 235));
        AccountsViewBtn.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        AccountsViewBtn.setText("View");
        AccountsViewBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        AccountsViewBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AccountsViewBtn.setPreferredSize(new java.awt.Dimension(120, 45));
        AccountsViewBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AccountsViewBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                AccountsViewBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                AccountsViewBtnMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 830, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(AccountsViewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel12)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(AccountsViewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(54, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout AccountsFrameLayout = new javax.swing.GroupLayout(AccountsFrame);
        AccountsFrame.setLayout(AccountsFrameLayout);
        AccountsFrameLayout.setHorizontalGroup(
            AccountsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        AccountsFrameLayout.setVerticalGroup(
            AccountsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        MainPanel.add(AccountsFrame, "card16");

        jPanel4.setBackground(new java.awt.Color(51, 51, 51));

        jLabel13.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(204, 204, 204));
        jLabel13.setText("Accounts");

        AccountNameLabel.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        AccountNameLabel.setForeground(new java.awt.Color(204, 204, 204));
        AccountNameLabel.setText("Account Name");

        AccountNameField.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        AccountNameField.setPreferredSize(new java.awt.Dimension(400, 40));

        AccountUsernameLabel.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        AccountUsernameLabel.setForeground(new java.awt.Color(204, 204, 204));
        AccountUsernameLabel.setText("Account Username");

        AccountUsernameField.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        AccountUsernameField.setPreferredSize(new java.awt.Dimension(400, 40));

        AccountPasswordLabel.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        AccountPasswordLabel.setForeground(new java.awt.Color(204, 204, 204));
        AccountPasswordLabel.setText("Account Password");

        AccountPasswordField.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        AccountPasswordField.setPreferredSize(new java.awt.Dimension(400, 40));

        AccountTypeLabel.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        AccountTypeLabel.setForeground(new java.awt.Color(204, 204, 204));
        AccountTypeLabel.setText("Account Type");

        AccountTypeCB.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        AccountTypeCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SUPER", "STAFF" }));
        AccountTypeCB.setPreferredSize(new java.awt.Dimension(140, 40));

        AccountEditBtn.setBackground(new java.awt.Color(235, 235, 235));
        AccountEditBtn.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        AccountEditBtn.setText("Edit");
        AccountEditBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        AccountEditBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AccountEditBtn.setPreferredSize(new java.awt.Dimension(120, 45));
        AccountEditBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AccountEditBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                AccountEditBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                AccountEditBtnMouseExited(evt);
            }
        });

        AccountBackBtn.setBackground(new java.awt.Color(235, 235, 235));
        AccountBackBtn.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        AccountBackBtn.setText("Back");
        AccountBackBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        AccountBackBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AccountBackBtn.setPreferredSize(new java.awt.Dimension(120, 45));
        AccountBackBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AccountBackBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                AccountBackBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                AccountBackBtnMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(AccountEditBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(105, 105, 105)
                .addComponent(AccountBackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(146, 146, 146))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                        .addComponent(AccountUsernameLabel)
                                        .addGap(233, 233, 233))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(AccountUsernameField, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(109, 109, 109)))
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(AccountPasswordLabel, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(AccountPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(AccountNameLabel)
                            .addComponent(AccountTypeLabel)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(AccountTypeCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(AccountNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 653, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel13)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel13)
                .addGap(51, 51, 51)
                .addComponent(AccountNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(AccountNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(AccountPasswordLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(AccountPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(AccountUsernameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(AccountUsernameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(53, 53, 53)
                .addComponent(AccountTypeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(AccountTypeCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AccountEditBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AccountBackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(65, 65, 65))
        );

        javax.swing.GroupLayout SpecificAccountFrameLayout = new javax.swing.GroupLayout(SpecificAccountFrame);
        SpecificAccountFrame.setLayout(SpecificAccountFrameLayout);
        SpecificAccountFrameLayout.setHorizontalGroup(
            SpecificAccountFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        SpecificAccountFrameLayout.setVerticalGroup(
            SpecificAccountFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        MainPanel.add(SpecificAccountFrame, "card17");

        javax.swing.GroupLayout TempFrameLayout = new javax.swing.GroupLayout(TempFrame);
        TempFrame.setLayout(TempFrameLayout);
        TempFrameLayout.setHorizontalGroup(
            TempFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 888, Short.MAX_VALUE)
        );
        TempFrameLayout.setVerticalGroup(
            TempFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 614, Short.MAX_VALUE)
        );

        MainPanel.add(TempFrame, "card5");

        javax.swing.GroupLayout BackgroundLayout = new javax.swing.GroupLayout(Background);
        Background.setLayout(BackgroundLayout);
        BackgroundLayout.setHorizontalGroup(
            BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BackgroundLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BackgroundLayout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(Admin)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(AccountsIcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(MinimizeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Exit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(BackgroundLayout.createSequentialGroup()
                        .addComponent(LeftPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(MainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 890, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(61, Short.MAX_VALUE))))
        );
        BackgroundLayout.setVerticalGroup(
            BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Admin, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(BackgroundLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MinimizeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AccountsIcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Exit, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(MainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LeftPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(1250, 720));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void Menu1PanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Menu1PanelMouseEntered
        Menu1Panel.setBackground(new Color(204, 204, 204));
    }//GEN-LAST:event_Menu1PanelMouseEntered

    private void Menu1PanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Menu1PanelMouseExited
        Menu1Panel.setBackground(new Color(240, 240, 240));
    }//GEN-LAST:event_Menu1PanelMouseExited

    private void Menu2PanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Menu2PanelMouseEntered
        Menu2Panel.setBackground(new Color(204, 204, 204));
    }//GEN-LAST:event_Menu2PanelMouseEntered

    private void Menu2PanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Menu2PanelMouseExited
        Menu2Panel.setBackground(new Color(240, 240, 240));
    }//GEN-LAST:event_Menu2PanelMouseExited

    private void Menu3PanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Menu3PanelMouseEntered
        Menu3Panel.setBackground(new Color(204, 204, 204));
    }//GEN-LAST:event_Menu3PanelMouseEntered

    private void Menu3PanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Menu3PanelMouseExited
        Menu3Panel.setBackground(new Color(240, 240, 240));
    }//GEN-LAST:event_Menu3PanelMouseExited

    private void ExitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExitMouseEntered
        Exit.setForeground(new Color(255, 255, 255));
    }//GEN-LAST:event_ExitMouseEntered

    private void ExitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExitMouseExited
        Exit.setForeground(new Color(240, 240, 240));
    }//GEN-LAST:event_ExitMouseExited

    private void ExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExitMouseClicked
        int x = JOptionPane.showConfirmDialog(this, "Are you sure you want to exit?", "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (x == JOptionPane.YES_OPTION) {
            System.exit(0);
        }

    }//GEN-LAST:event_ExitMouseClicked

    private void LogoutPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LogoutPanelMouseEntered
        LogoutPanel.setBackground(new Color(204, 204, 204));
    }//GEN-LAST:event_LogoutPanelMouseEntered

    private void LogoutPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LogoutPanelMouseExited
        LogoutPanel.setBackground(new Color(240, 240, 240));
    }//GEN-LAST:event_LogoutPanelMouseExited

    private void LogoutPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LogoutPanelMouseClicked
        LoginPage LP = new LoginPage();
        LP.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_LogoutPanelMouseClicked

    private void Menu2PanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Menu2PanelMouseClicked
        ChosenCategory = "";
        SelectedId = "";
        SelectedProductId = "";
        ItemSearchField.setText("");

        DashboardFrame.setVisible(false);
        ItemCategoryFrame.setVisible(true);
        SalesFrame.setVisible(false);
        ItemInfoFrame.setVisible(false);
        ItemListFrame.setVisible(false);
        AddItemFrame.setVisible(false);
        MostPurchasedFrame.setVisible(false);
        SuppliersListFrame.setVisible(false);
        AddSuppFrame.setVisible(false);
        ActivityLogFrame.setVisible(false);
        TransactionFrame.setVisible(false);
        StockPrintFrame.setVisible(false);
        PrintStock.setVisible(false);
        AccountsFrame.setVisible(false);
        SpecificAccountFrame.setVisible(false);
    }//GEN-LAST:event_Menu2PanelMouseClicked

    private void Menu1PanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Menu1PanelMouseClicked
        
        try{
            DashboardGainField.setText(String.valueOf(transactionList.getTotalGainToday(String.valueOf(java.time.LocalDate.now()))));
        }catch(Exception e){
            e.printStackTrace();
        }
        
        ChosenCategory = "";
        SelectedId = "";

        DashboardFrame.setVisible(true);
        ItemCategoryFrame.setVisible(false);
        SalesFrame.setVisible(false);
        ItemInfoFrame.setVisible(false);
        ItemListFrame.setVisible(false);
        AddItemFrame.setVisible(false);
        MostPurchasedFrame.setVisible(false);
        SuppliersListFrame.setVisible(false);
        AddSuppFrame.setVisible(false);
        ActivityLogFrame.setVisible(false);
        TransactionFrame.setVisible(false);
        StockPrintFrame.setVisible(false);
        PrintStock.setVisible(false);
        AccountsFrame.setVisible(false);
        SpecificAccountFrame.setVisible(false);
    }//GEN-LAST:event_Menu1PanelMouseClicked

    private void Menu3PanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Menu3PanelMouseClicked
        ChosenCategory = "";
        SelectedId = "";
        SalesStartDate.setDate(null);
        SalesEndDate.setDate(null);

        DashboardFrame.setVisible(false);
        ItemCategoryFrame.setVisible(false);
        SalesFrame.setVisible(true);
        ItemInfoFrame.setVisible(false);
        ItemListFrame.setVisible(false);
        AddItemFrame.setVisible(false);
        MostPurchasedFrame.setVisible(false);
        SuppliersListFrame.setVisible(false);
        AddSuppFrame.setVisible(false);
        ActivityLogFrame.setVisible(false);
        TransactionFrame.setVisible(false);
        StockPrintFrame.setVisible(false);
        PrintStock.setVisible(false);
        AccountsFrame.setVisible(false);
        SpecificAccountFrame.setVisible(false);
    }//GEN-LAST:event_Menu3PanelMouseClicked

    private void Category1PanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Category1PanelMouseEntered
        Category1Panel.setBackground(new Color(204, 255, 255));
        Category1Label.setForeground(new Color(20, 20, 20));
    }//GEN-LAST:event_Category1PanelMouseEntered

    private void Category1PanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Category1PanelMouseExited
        Category1Panel.setBackground(new Color(51, 51, 51));
        Category1Label.setForeground(new Color(204, 204, 204));
    }//GEN-LAST:event_Category1PanelMouseExited

    private void Category2PanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Category2PanelMouseEntered
        Category2Panel.setBackground(new Color(204, 255, 255));
        Category2Label.setForeground(new Color(20, 20, 20));
    }//GEN-LAST:event_Category2PanelMouseEntered

    private void Category2PanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Category2PanelMouseExited
        Category2Panel.setBackground(new Color(51, 51, 51));
        Category2Label.setForeground(new Color(204, 204, 204));
    }//GEN-LAST:event_Category2PanelMouseExited

    private void Category3PanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Category3PanelMouseEntered
        Category3Panel.setBackground(new Color(204, 255, 255));
        Category3Label.setForeground(new Color(20, 20, 20));
    }//GEN-LAST:event_Category3PanelMouseEntered

    private void Category3PanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Category3PanelMouseExited
        Category3Panel.setBackground(new Color(51, 51, 51));
        Category3Label.setForeground(new Color(204, 204, 204));
    }//GEN-LAST:event_Category3PanelMouseExited

    private void Category4PanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Category4PanelMouseEntered
        Category4Panel.setBackground(new Color(204, 255, 255));
        Category4Label.setForeground(new Color(20, 20, 20));
    }//GEN-LAST:event_Category4PanelMouseEntered

    private void Category4PanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Category4PanelMouseExited
        Category4Panel.setBackground(new Color(51, 51, 51));
        Category4Label.setForeground(new Color(204, 204, 204));
    }//GEN-LAST:event_Category4PanelMouseExited

    private void Category5PanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Category5PanelMouseEntered
        Category5Panel.setBackground(new Color(204, 255, 255));
        Category5Label.setForeground(new Color(20, 20, 20));
    }//GEN-LAST:event_Category5PanelMouseEntered

    private void Category5PanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Category5PanelMouseExited
        Category5Panel.setBackground(new Color(51, 51, 51));
        Category5Label.setForeground(new Color(204, 204, 204));
    }//GEN-LAST:event_Category5PanelMouseExited

    private void SalesGainFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalesGainFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SalesGainFieldActionPerformed

    private void AddNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AddNameFieldActionPerformed

    private void AddStockFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddStockFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AddStockFieldActionPerformed

    private void AddSellFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddSellFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AddSellFieldActionPerformed

    private void CategoryPanelInit() {
        Product products_by_category[] = null;
        Object obj3[][] = null;
        productId = null;
        try {
            products_by_category = productList.getProductByCategory(ChosenCategory);
            obj3 = new Object[products_by_category.length][4];
            productId = new String[products_by_category.length];
            for (int i = 0; i < products_by_category.length; i++) {
                obj3[i][0] = products_by_category[i].getName();
                obj3[i][1] = products_by_category[i].getStock();
                obj3[i][2] = products_by_category[i].getCategory();
                productId[i] = products_by_category[i].getId();
            }
            ItemListTable.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
            ItemListTable.setModel(new javax.swing.table.DefaultTableModel(
                    obj3,
                    new String[]{
                        "Name", "Stock Remaining", "Category"
                    }
            ) {
                Class[] types = new Class[]{
                    java.lang.String.class, java.lang.String.class, java.lang.Object.class
                };
                boolean[] canEdit = new boolean[]{
                    false, false, false
                };

                public Class getColumnClass(int columnIndex) {
                    return types[columnIndex];
                }

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit[columnIndex];
                }
            });
            SelectedProductId = "";
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void Category1PanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Category1PanelMouseClicked

        ChosenCategory = "Construction";
        ItemCategoryFrame.setVisible(false);
        ItemListFrame.setVisible(true);
        CategoryPanelInit();

    }//GEN-LAST:event_Category1PanelMouseClicked


    private void Category2PanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Category2PanelMouseClicked

        ChosenCategory = "Plumbing";
        ItemCategoryFrame.setVisible(false);
        ItemListFrame.setVisible(true);
        CategoryPanelInit();

    }//GEN-LAST:event_Category2PanelMouseClicked


    private void Category3PanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Category3PanelMouseClicked

        ChosenCategory = "Electrical";
        ItemCategoryFrame.setVisible(false);
        ItemListFrame.setVisible(true);
        CategoryPanelInit();

    }//GEN-LAST:event_Category3PanelMouseClicked


    private void Category4PanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Category4PanelMouseClicked

        ChosenCategory = "Oils";
        ItemCategoryFrame.setVisible(false);
        ItemListFrame.setVisible(true);
        CategoryPanelInit();

    }//GEN-LAST:event_Category4PanelMouseClicked


    private void Category5PanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Category5PanelMouseClicked

        ChosenCategory = "Motor";
        ItemCategoryFrame.setVisible(false);
        ItemListFrame.setVisible(true);
        CategoryPanelInit();

    }//GEN-LAST:event_Category5PanelMouseClicked


    private void SalesTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SalesTableMouseClicked
        int row = SalesTable.getSelectedRow();
        SelectedId = String.valueOf(SalesTable.getValueAt(row, 0));
    }//GEN-LAST:event_SalesTableMouseClicked

    private void ItemSearchLogoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ItemSearchLogoMouseClicked

        Object obj3[][] = null;
        try {
            Product searchedProducts[] = productList.searchByNameCategory(ItemSearchField.getText(), ChosenCategory);
            obj3 = new Object[searchedProducts.length][3];
            System.out.println("LENGTH: " + searchedProducts.length);
            for (int i = 0; i < searchedProducts.length; i++) {
                if (searchedProducts[i] != null) {
                    obj3[i][0] = searchedProducts[i].getName();
                    obj3[i][1] = searchedProducts[i].getStock();
                    obj3[i][2] = searchedProducts[i].getCategory();
                }
            }

            if (searchedProducts.length == 0) {
                JOptionPane.showMessageDialog(null, "No result please try again");
            }

            ItemListTable.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
            ItemListTable.setModel(new javax.swing.table.DefaultTableModel(
                    obj3,
                    new String[]{
                        "Name", "Stock Remaining", "Category"
                    }
            ) {
                Class[] types = new Class[]{
                    java.lang.String.class, java.lang.String.class, java.lang.Object.class
                };
                boolean[] canEdit = new boolean[]{
                    false, false, false
                };

                public Class getColumnClass(int columnIndex) {
                    return types[columnIndex];
                }

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit[columnIndex];
                }
            });
        } catch (Exception e) {
            e.printStackTrace();
//            JOptionPane.showMessageDialog(null, "System error please contact system admin");
        }
    }//GEN-LAST:event_ItemSearchLogoMouseClicked

    private void ItemSearchLogoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ItemSearchLogoMouseEntered
        ItemSearchLogo.setBackground(new Color(51, 51, 51));
    }//GEN-LAST:event_ItemSearchLogoMouseEntered

    private void ItemListTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ItemListTableMouseClicked
        int row = ItemListTable.getSelectedRow();

        SelectedProductId = productId[row];
//        supplierByProduct = String.valueOf(ItemListTable.getValueAt(row, 0));

        SelectedId = String.valueOf(ItemListTable.getValueAt(row, 0));
    }//GEN-LAST:event_ItemListTableMouseClicked

    private void Category8PanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Category8PanelMouseClicked

        ChosenCategory = "Fishing";
        ItemCategoryFrame.setVisible(false);
        ItemListFrame.setVisible(true);
        CategoryPanelInit();

    }//GEN-LAST:event_Category8PanelMouseClicked

    private void Category8PanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Category8PanelMouseEntered
        Category8Panel.setBackground(new Color(204, 255, 255));
        Category8Label.setForeground(new Color(20, 20, 20));
    }//GEN-LAST:event_Category8PanelMouseEntered

    private void Category8PanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Category8PanelMouseExited
        Category8Panel.setBackground(new Color(51, 51, 51));
        Category8Label.setForeground(new Color(204, 204, 204));
    }//GEN-LAST:event_Category8PanelMouseExited

    private void Category6PanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Category6PanelMouseClicked

        ChosenCategory = "Auto";
        ItemCategoryFrame.setVisible(false);
        ItemListFrame.setVisible(true);
        CategoryPanelInit();

    }//GEN-LAST:event_Category6PanelMouseClicked

    private void Category6PanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Category6PanelMouseEntered
        Category6Panel.setBackground(new Color(204, 255, 255));
        Category6Label.setForeground(new Color(20, 20, 20));
    }//GEN-LAST:event_Category6PanelMouseEntered

    private void Category6PanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Category6PanelMouseExited
        Category6Panel.setBackground(new Color(51, 51, 51));
        Category6Label.setForeground(new Color(204, 204, 204));
    }//GEN-LAST:event_Category6PanelMouseExited

    private void Category9PanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Category9PanelMouseClicked

        ChosenCategory = "Others";
        ItemCategoryFrame.setVisible(false);
        ItemListFrame.setVisible(true);
        CategoryPanelInit();

    }//GEN-LAST:event_Category9PanelMouseClicked

    private void Category9PanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Category9PanelMouseEntered
        Category9Panel.setBackground(new Color(204, 255, 255));
        Category9Label.setForeground(new Color(20, 20, 20));
    }//GEN-LAST:event_Category9PanelMouseEntered

    private void Category9PanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Category9PanelMouseExited
        Category9Panel.setBackground(new Color(51, 51, 51));
        Category9Label.setForeground(new Color(204, 204, 204));
    }//GEN-LAST:event_Category9PanelMouseExited

    private void Category7PanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Category7PanelMouseClicked

        ChosenCategory = "Stainless";
        ItemCategoryFrame.setVisible(false);
        ItemListFrame.setVisible(true);
        CategoryPanelInit();

    }//GEN-LAST:event_Category7PanelMouseClicked

    private void Category7PanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Category7PanelMouseEntered
        Category7Panel.setBackground(new Color(204, 255, 255));
        Category7Label.setForeground(new Color(20, 20, 20));
    }//GEN-LAST:event_Category7PanelMouseEntered

    private void Category7PanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Category7PanelMouseExited
        Category7Panel.setBackground(new Color(51, 51, 51));
        Category7Label.setForeground(new Color(204, 204, 204));
    }//GEN-LAST:event_Category7PanelMouseExited

    private void DashViewBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DashViewBtnMouseEntered
        DashViewBtn.setBackground(new Color(240, 240, 240));
        DashViewBtn.setBorder(BorderFactory.createLineBorder(new Color(40, 40, 40)));
        DashViewBtn.setForeground(new Color(40, 40, 40));
    }//GEN-LAST:event_DashViewBtnMouseEntered

    private void DashViewBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DashViewBtnMouseExited
        DashViewBtn.setBackground(new Color(102, 102, 102));
        DashViewBtn.setBorder(BorderFactory.createLineBorder(new Color(240, 240, 240)));
        DashViewBtn.setForeground(new Color(255, 255, 255));
    }//GEN-LAST:event_DashViewBtnMouseExited

    private void SalesViewBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SalesViewBtnMouseEntered
        SalesViewBtn.setBackground(new Color(100, 100, 100));
        SalesViewBtn.setForeground(new Color(240, 240, 240));
        SalesViewBtn.setBorder(BorderFactory.createLineBorder(new Color(255, 255, 255)));
    }//GEN-LAST:event_SalesViewBtnMouseEntered

    private void SalesViewBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SalesViewBtnMouseExited
        SalesViewBtn.setBackground(new Color(235, 235, 235));
        SalesViewBtn.setForeground(new Color(30, 30, 30));
        SalesViewBtn.setBorder(BorderFactory.createLineBorder(new Color(30, 30, 30)));
    }//GEN-LAST:event_SalesViewBtnMouseExited

    private void SalesViewBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SalesViewBtnMouseClicked
        if (!SelectedId.equals("")) {
            DashboardFrame.setVisible(false);
            ItemCategoryFrame.setVisible(false);
            SalesFrame.setVisible(false);
            ItemInfoFrame.setVisible(false);
            ItemListFrame.setVisible(false);
            AddItemFrame.setVisible(false);
            TransactionFrame.setVisible(true);
            MostPurchasedFrame.setVisible(false);
            SuppliersListFrame.setVisible(false);
            AddSuppFrame.setVisible(false);
            AccountsFrame.setVisible(false);
            SpecificAccountFrame.setVisible(false);
            Transaction transaction;
            Object obj2[][] = null;

            try {
                transaction = transactionList.getTransactionById(SelectedId);
                details = detailList.getDetailById(SelectedId);

                obj2 = new Object[details.length][4];

                for (int i = 0; i < details.length; i++) {
                    if (details[i].getTransactionId().equals(transaction.getId())) {
                        product = productList.getProductById(details[i].getProductId());
                        obj2[i][0] = product.getName();
                        obj2[i][1] = details[i].getProductPrice();
                        obj2[i][2] = String.valueOf(details[i].getQuantity());
                        obj2[i][3] = Float.parseFloat(String.valueOf(details[i].getProductPrice())) * details[i].getQuantity();
                    }
                }

                TransIDField.setText(transaction.getId());
                TransCashierField.setText(adminList.getAdminById(transaction.getAdminId()).getName());
                TransDateField.setText(transaction.getDate());
                TransTimeField.setText(transaction.getTime());
                TransBillField.setText(String.valueOf(transaction.getTotalBIll()));

                TransactionTable.setModel(new javax.swing.table.DefaultTableModel(
                        obj2,
                        new String[]{
                            "Name", "Price", "Quantity", "Total Price"
                        }
                ) {
                    Class[] types = new Class[]{
                        java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
                    };
                    boolean[] canEdit = new boolean[]{
                        false, false, false, false
                    };

                    public Class getColumnClass(int columnIndex) {
                        return types[columnIndex];
                    }

                    public boolean isCellEditable(int rowIndex, int columnIndex) {
                        return canEdit[columnIndex];
                    }
                });
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        SelectedId = "";
    }//GEN-LAST:event_SalesViewBtnMouseClicked

    private void SalesResetBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SalesResetBtnMouseEntered
        SalesResetBtn.setBackground(new Color(100, 100, 100));
        SalesResetBtn.setForeground(new Color(240, 240, 240));
        SalesResetBtn.setBorder(BorderFactory.createLineBorder(new Color(255, 255, 255)));
    }//GEN-LAST:event_SalesResetBtnMouseEntered

    private void SalesResetBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SalesResetBtnMouseExited
        SalesResetBtn.setBackground(new Color(240, 240, 240));
        SalesResetBtn.setForeground(new Color(0, 0, 0));
        SalesResetBtn.setBorder(BorderFactory.createLineBorder(new Color(30, 30, 30)));
    }//GEN-LAST:event_SalesResetBtnMouseExited

    private void SalesResetBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SalesResetBtnMouseClicked
        if (!SelectedId.equals("")) {
            Object choices[] = {"Confirm", "Cancel"};
            int flag = JOptionPane.showOptionDialog(AddItemPanel,
                    "Are you sure you want to delete this transaction?",
                    "CONFIRM DELETE",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE,
                    null,
                    choices,
                    choices[0]);
            try {
                if (flag == 0) {
                    if (transactionList.deleteTransactionToDb(SelectedId)) {
                        if (detailList.deleteDetailToDb(SelectedId)) {
                            if (activityList.addActivityToDb(new Activity("DELETE SALE RECORD", "SALE RECORD", admin_id))) {
                                JOptionPane.showMessageDialog(null, "Successfuly deleted transaction.");
                            }
                            transactionList = new TransactionList();
                            detailList = new TransactionDetailList();
                            SalesTableInit();
                            activityList = new ActivityList();
                            AdminLogInit();

                        }
                    }
                }

            } catch (Exception e) {
                e.printStackTrace();
            }
        }

    }//GEN-LAST:event_SalesResetBtnMouseClicked
    public void SalesTableInit() {
        Object obj_sales[][] = null;
        Transaction tmp[] = transactionList.getTransactions();

        obj_sales = new Object[tmp.length][3];

        for (int i = 0; i < obj_sales.length; i++) {
            obj_sales[i][0] = tmp[i].getId();
            obj_sales[i][1] = tmp[i].getDate();
            obj_sales[i][2] = tmp[i].getTotalBIll();
        }
        
        SalesTable.setModel(new javax.swing.table.DefaultTableModel(
                obj_sales,
                new String[]{
                    "Receipt Number", "Date", "Bill"
                }
        ) {
            Class[] types = new Class[]{
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean[]{
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
    }
    private void SalesEnterBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SalesEnterBtnMouseEntered
        SalesEnterBtn.setBackground(new Color(100, 100, 100));
        SalesEnterBtn.setForeground(new Color(240, 240, 240));
        SalesEnterBtn.setBorder(BorderFactory.createLineBorder(new Color(255, 255, 255)));
    }//GEN-LAST:event_SalesEnterBtnMouseEntered

    private void SalesEnterBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SalesEnterBtnMouseExited
        SalesEnterBtn.setBackground(new Color(240, 240, 240));
        SalesEnterBtn.setForeground(new Color(0, 0, 0));
        SalesEnterBtn.setBorder(BorderFactory.createLineBorder(new Color(30, 30, 30)));
    }//GEN-LAST:event_SalesEnterBtnMouseExited

    private void SalesEnterBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SalesEnterBtnMouseClicked
        DateFormat df = new SimpleDateFormat("MM-dd-yyyy");
        Object obj[][] = null;
        float total_bill = 0;
        try {
            transactions = transactionList.getDateRange(df.format(SalesStartDate.getDate()), df.format(SalesEndDate.getDate()));
            obj = new Object[transactions.length][3];
            for (int i = 0; i < transactions.length; i++) {
                obj[i][0] = transactions[i].getId();
                obj[i][1] = transactions[i].getDate();
                obj[i][2] = transactions[i].getTotalBIll();
                total_bill += transactions[i].getTotalBIll();
            }
            SalesGainField.setText(String.valueOf(total_bill));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please enter a correct date format");
        }

        SalesTable.setModel(new javax.swing.table.DefaultTableModel(
                obj,
                new String[]{
                    "Receipt Number", "Date", "Bill"
                }
        ) {
            Class[] types = new Class[]{
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean[]{
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
    }//GEN-LAST:event_SalesEnterBtnMouseClicked

    private void ItemInfoEditBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ItemInfoEditBtnMouseClicked
        this.product = new Product();
        this.product.setProduct(ItemNameField.getText(), Double.parseDouble(CapitalField.getText()),
                Double.parseDouble(SellingField.getText()), Double.parseDouble(StockField.getText()),
                String.valueOf(ItemBarcodeField.getSelectedItem()), ChosenCategory, SelectedId);
        Object[] choices = {"Confirm", "Cancel"};
        try {
            int flag = JOptionPane.showOptionDialog(AddItemPanel,
                    "Are you sure you want to edit this product?",
                    "CONFIRM EDIT",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE,
                    null,
                    choices,
                    choices[0]);
            if (flag == 0) {
                if (productList.editProductToDb(this.product)) {
                    if (activityList.addActivityToDb(new Activity("EDIT PRODUCT", "ADMIN DASHBOARD", admin_id))) {
                        JOptionPane.showMessageDialog(null, "Succesfully edited product");
                    }

                    activityList = new ActivityList();
                    productList = new ProductList();
                    CategoryPanelInit();
                    DashboardPanelInit();
                    AdminLogInit();
                    if (!ChosenCategory.equals("")) {
                        ItemInfoFrame.setVisible(false);
                        ItemListFrame.setVisible(true);
                    } else {
                        ItemInfoFrame.setVisible(false);
                        DashboardFrame.setVisible(true);
                    }

                } else {
                    JOptionPane.showMessageDialog(null, "Something went wrong please contact system administator.");
                    if (!ChosenCategory.equals("")) {
                        ItemInfoFrame.setVisible(false);
                        ItemListFrame.setVisible(true);
                    } else {
                        ItemInfoFrame.setVisible(false);
                        DashboardFrame.setVisible(true);
                    }

                }
            } else {

            }

        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_ItemInfoEditBtnMouseClicked

    private void ItemInfoBackBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ItemInfoBackBtnMouseClicked
        if (!ChosenCategory.equals("")) {
            ItemInfoFrame.setVisible(false);
            ItemListFrame.setVisible(true);

        } else {
            DashboardFrame.setVisible(true);
            ItemInfoFrame.setVisible(false);

        }
    }//GEN-LAST:event_ItemInfoBackBtnMouseClicked

    private void DeletePanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeletePanelMouseClicked
        if (!SelectedId.equals("")) {
            Object[] choices = {"Confirm", "Cancel"};
            try {
                int flag = JOptionPane.showOptionDialog(AddItemPanel,
                        "Are you sure you want to delete this product?",
                        "CONFIRM DELETE",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE,
                        null,
                        choices,
                        choices[0]);

                if (flag == 0) {
                    if (this.productList.deleteProductToDb(SelectedId)) {
                        if (activityList.addActivityToDb(new Activity("DELETE PRODUCT", "ITEM CATEGORY", admin_id))) {
                            if (supplierList.deleteSupplierByProduct(productList.getProductByName(SelectedId).getId())) {
                                JOptionPane.showMessageDialog(null, "Succesfully deleted product");
                            }
                        }

                        activityList = new ActivityList();
                        productList = new ProductList();
                        CategoryPanelInit();
                        AdminLogInit();
                        ItemInfoFrame.setVisible(false);
                        ItemListFrame.setVisible(true);

                    } else {
                        JOptionPane.showMessageDialog(null, "Something went wrong please contact system administator.");
                        ItemInfoFrame.setVisible(false);
                        ItemListFrame.setVisible(true);

                    }
                } else {
                    ItemInfoFrame.setVisible(false);
                    ItemListFrame.setVisible(true);

                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error: " + e);

            }
        }
    }//GEN-LAST:event_DeletePanelMouseClicked

    private void DeletePanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeletePanelMouseEntered
        DeletePanel.setBorder(BorderFactory.createLineBorder(new Color(255, 0, 0)));
        DeleteLabel.setForeground(new Color(255, 0, 0));
    }//GEN-LAST:event_DeletePanelMouseEntered

    private void DeletePanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeletePanelMouseExited
        DeletePanel.setBorder(BorderFactory.createLineBorder(new Color(153, 153, 153)));
        DeleteLabel.setForeground(new Color(153, 153, 153));
    }//GEN-LAST:event_DeletePanelMouseExited

    private void ItemInfoEditBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ItemInfoEditBtnMouseEntered
        ItemInfoEditBtn.setBackground(new Color(150, 150, 150));
        ItemInfoEditBtn.setForeground(new Color(255, 255, 255));
        ItemInfoEditBtn.setBorder(BorderFactory.createLineBorder(new Color(255, 255, 255)));
    }//GEN-LAST:event_ItemInfoEditBtnMouseEntered

    private void ItemInfoEditBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ItemInfoEditBtnMouseExited
        ItemInfoEditBtn.setBackground(new Color(235, 235, 235));
        ItemInfoEditBtn.setForeground(new Color(0, 0, 0));
        ItemInfoEditBtn.setBorder(BorderFactory.createLineBorder(new Color(51, 51, 51)));
    }//GEN-LAST:event_ItemInfoEditBtnMouseExited

    private void ItemInfoBackBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ItemInfoBackBtnMouseEntered
        ItemInfoBackBtn.setBackground(new Color(150, 150, 150));
        ItemInfoBackBtn.setForeground(new Color(255, 255, 255));
        ItemInfoBackBtn.setBorder(BorderFactory.createLineBorder(new Color(255, 255, 255)));
    }//GEN-LAST:event_ItemInfoBackBtnMouseEntered

    private void ItemInfoBackBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ItemInfoBackBtnMouseExited
        ItemInfoBackBtn.setBackground(new Color(235, 235, 235));
        ItemInfoBackBtn.setForeground(new Color(0, 0, 0));
        ItemInfoBackBtn.setBorder(BorderFactory.createLineBorder(new Color(51, 51, 51)));
    }//GEN-LAST:event_ItemInfoBackBtnMouseExited

    private void ItemInfoViewSuppMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ItemInfoViewSuppMouseEntered
        ItemInfoViewSupp.setBackground(new Color(150, 150, 150));
        ItemInfoViewSupp.setForeground(new Color(255, 255, 255));
        ItemInfoViewSupp.setBorder(BorderFactory.createLineBorder(new Color(255, 255, 255)));
    }//GEN-LAST:event_ItemInfoViewSuppMouseEntered

    private void ItemInfoViewSuppMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ItemInfoViewSuppMouseExited
        ItemInfoViewSupp.setBackground(new Color(235, 235, 235));
        ItemInfoViewSupp.setForeground(new Color(0, 0, 0));
        ItemInfoViewSupp.setBorder(BorderFactory.createLineBorder(new Color(51, 51, 51)));
    }//GEN-LAST:event_ItemInfoViewSuppMouseExited

    private void ListViewBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ListViewBtnMouseClicked

        if (!SelectedProductId.equals("")) {
            ItemInfoFrame.setVisible(true);
            ItemListFrame.setVisible(false);

            try {
                this.ProductSelected = productList.getProductById(SelectedProductId);

                ItemNameField.setText(ProductSelected.getName());
                if (ProductSelected.getUnit().equals("kg")) {
                    ItemBarcodeField.setSelectedIndex(1);
                }
                StockField.setText(String.valueOf(ProductSelected.getStock()));
                CapitalField.setText(String.valueOf(ProductSelected.getCapitalPrice()));
                SellingField.setText(String.valueOf(ProductSelected.getSellPrice()));
            } catch (Exception e) {
                e.printStackTrace();
            }
        }

        SelectedProductId = "";
    }//GEN-LAST:event_ListViewBtnMouseClicked

    private void ListViewBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ListViewBtnMouseEntered
        ListViewBtn.setBackground(new Color(150, 150, 150));
        ListViewBtn.setForeground(new Color(255, 255, 255));
        ListViewBtn.setBorder(BorderFactory.createLineBorder(new Color(255, 255, 255)));
    }//GEN-LAST:event_ListViewBtnMouseEntered

    private void ListViewBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ListViewBtnMouseExited
        ListViewBtn.setBackground(new Color(235, 235, 235));
        ListViewBtn.setForeground(new Color(0, 0, 0));
        ListViewBtn.setBorder(BorderFactory.createLineBorder(new Color(51, 51, 51)));
    }//GEN-LAST:event_ListViewBtnMouseExited

    private void ListItemResetBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ListItemResetBtnMouseClicked
        ItemSearchField.setText("");
        CategoryPanelInit();
    }//GEN-LAST:event_ListItemResetBtnMouseClicked

    private void ListItemResetBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ListItemResetBtnMouseEntered
        ListItemResetBtn.setBackground(new Color(150, 150, 150));
        ListItemResetBtn.setForeground(new Color(255, 255, 255));
        ListItemResetBtn.setBorder(BorderFactory.createLineBorder(new Color(255, 255, 255)));
    }//GEN-LAST:event_ListItemResetBtnMouseEntered

    private void ListItemResetBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ListItemResetBtnMouseExited
        ListItemResetBtn.setBackground(new Color(235, 235, 235));
        ListItemResetBtn.setForeground(new Color(0, 0, 0));
        ListItemResetBtn.setBorder(BorderFactory.createLineBorder(new Color(51, 51, 51)));
    }//GEN-LAST:event_ListItemResetBtnMouseExited

    private void ListItemAddBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ListItemAddBtnMouseClicked

        ItemSearchField.setText("");
        ItemListFrame.setVisible(false);
        AddItemFrame.setVisible(true);

    }//GEN-LAST:event_ListItemAddBtnMouseClicked

    private void ListItemAddBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ListItemAddBtnMouseEntered
        ListItemAddBtn.setBackground(new Color(150, 150, 150));
        ListItemAddBtn.setForeground(new Color(255, 255, 255));
        ListItemAddBtn.setBorder(BorderFactory.createLineBorder(new Color(255, 255, 255)));
    }//GEN-LAST:event_ListItemAddBtnMouseEntered

    private void ListItemAddBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ListItemAddBtnMouseExited
        ListItemAddBtn.setBackground(new Color(235, 235, 235));
        ListItemAddBtn.setForeground(new Color(0, 0, 0));
        ListItemAddBtn.setBorder(BorderFactory.createLineBorder(new Color(51, 51, 51)));
    }//GEN-LAST:event_ListItemAddBtnMouseExited

    private void ListItemBackBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ListItemBackBtnMouseClicked

        ItemSearchField.setText("");
        ItemCategoryFrame.setVisible(true);
        ItemListFrame.setVisible(false);


    }//GEN-LAST:event_ListItemBackBtnMouseClicked

    private void ListItemBackBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ListItemBackBtnMouseEntered
        ListItemBackBtn.setBackground(new Color(150, 150, 150));
        ListItemBackBtn.setForeground(new Color(255, 255, 255));
        ListItemBackBtn.setBorder(BorderFactory.createLineBorder(new Color(255, 255, 255)));
    }//GEN-LAST:event_ListItemBackBtnMouseEntered

    private void ListItemBackBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ListItemBackBtnMouseExited
        ListItemBackBtn.setBackground(new Color(235, 235, 235));
        ListItemBackBtn.setForeground(new Color(0, 0, 0));
        ListItemBackBtn.setBorder(BorderFactory.createLineBorder(new Color(51, 51, 51)));
    }//GEN-LAST:event_ListItemBackBtnMouseExited

    private void AddItemSaveBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddItemSaveBtnMouseClicked

        try {
            product = new Product(AddNameField.getText(), Double.parseDouble(AddCapitalField.getText()),
                    Double.parseDouble(AddSellField.getText()), Double.parseDouble(AddStockField.getText()), (String) AddItemUnit.getSelectedItem(), ChosenCategory, AddItemSuppNameField.getText());

            Product temp_prod[] = productList.getProducts();
            boolean checker = false;
            for (int i = 0; i < productList.getTableSize(); i++) {
                if (product.getName().toLowerCase().equals(temp_prod[i].getName().toLowerCase())) {
                    checker = true;
                }
            }

            if (!checker) {
                if (productList.addProductToDb(product)) {
                    productList = new ProductList();
                    supplier = new Supplier(AddItemSuppNameField.getText(), productList.getProductByName(AddNameField.getText()).getId(), Double.parseDouble(AddCapitalField.getText()));
                    if (supplierList.addSupplierToDb(supplier)) {
                        if (activityList.addActivityToDb(new Activity("ADD PRODUCT", "ITEM CATEGORY", admin_id))) {
                            JOptionPane.showMessageDialog(null, "Successfuly added to db.");
                        }
                        activityList = new ActivityList();

                        supplierList = new SupplierList();
                        CategoryPanelInit();
                        SupplierPanelInit();
                        AdminLogInit();
                        SuppliersListFrame.setVisible(false);
                        ItemListFrame.setVisible(true);
                        AddItemFrame.setVisible(false);

                        AddNameField.setText("");
                        AddCapitalField.setText("");
                        AddSellField.setText("");
                        AddStockField.setText("");
                        AddItemSuppNameField.setText("");
                    }

                }
            } else {
                JOptionPane.showMessageDialog(null, "The item is already in database");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Invalid format");
//            e.printStackTrace();
        }
    }//GEN-LAST:event_AddItemSaveBtnMouseClicked

    private void AddItemSaveBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddItemSaveBtnMouseEntered
        AddItemSaveBtn.setBackground(new Color(150, 150, 150));
        AddItemSaveBtn.setForeground(new Color(255, 255, 255));
        AddItemSaveBtn.setBorder(BorderFactory.createLineBorder(new Color(255, 255, 255)));
    }//GEN-LAST:event_AddItemSaveBtnMouseEntered

    private void AddItemSaveBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddItemSaveBtnMouseExited
        AddItemSaveBtn.setBackground(new Color(235, 235, 235));
        AddItemSaveBtn.setForeground(new Color(0, 0, 0));
        AddItemSaveBtn.setBorder(BorderFactory.createLineBorder(new Color(51, 51, 51)));
    }//GEN-LAST:event_AddItemSaveBtnMouseExited

    private void AddItemCancelBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddItemCancelBtnMouseClicked

        ItemCategoryFrame.setVisible(true);
        AddItemFrame.setVisible(false);

    }//GEN-LAST:event_AddItemCancelBtnMouseClicked

    private void AddItemCancelBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddItemCancelBtnMouseEntered
        AddItemCancelBtn.setBackground(new Color(150, 150, 150));
        AddItemCancelBtn.setForeground(new Color(255, 255, 255));
        AddItemCancelBtn.setBorder(BorderFactory.createLineBorder(new Color(255, 255, 255)));
    }//GEN-LAST:event_AddItemCancelBtnMouseEntered

    private void AddItemCancelBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddItemCancelBtnMouseExited
        AddItemCancelBtn.setBackground(new Color(235, 235, 235));
        AddItemCancelBtn.setForeground(new Color(0, 0, 0));
        AddItemCancelBtn.setBorder(BorderFactory.createLineBorder(new Color(51, 51, 51)));
    }//GEN-LAST:event_AddItemCancelBtnMouseExited

    private void TransactionBackBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TransactionBackBtnMouseClicked

        SalesFrame.setVisible(true);
        TransactionFrame.setVisible(false);

    }//GEN-LAST:event_TransactionBackBtnMouseClicked

    private void TransactionBackBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TransactionBackBtnMouseEntered
        TransactionBackBtn.setBackground(new Color(150, 150, 150));
        TransactionBackBtn.setForeground(new Color(255, 255, 255));
        TransactionBackBtn.setBorder(BorderFactory.createLineBorder(new Color(255, 255, 255)));
    }//GEN-LAST:event_TransactionBackBtnMouseEntered

    private void TransactionBackBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TransactionBackBtnMouseExited
        TransactionBackBtn.setBackground(new Color(235, 235, 235));
        TransactionBackBtn.setForeground(new Color(0, 0, 0));
        TransactionBackBtn.setBorder(BorderFactory.createLineBorder(new Color(51, 51, 51)));
    }//GEN-LAST:event_TransactionBackBtnMouseExited

    private void MostPurchasedTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MostPurchasedTableMouseClicked
        int row = MostPurchasedTable.getSelectedRow();
        SelectedMostPurchased = String.valueOf(MostPurchasedTable.getValueAt(row, 0));
    }//GEN-LAST:event_MostPurchasedTableMouseClicked

    private void Menu4PanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Menu4PanelMouseClicked
        ChosenCategory = "";
        SelectedId = "";
        MostStartDate.setDate(null);
        MostEndDate.setDate(null);

        DashboardFrame.setVisible(false);
        ItemCategoryFrame.setVisible(false);
        SalesFrame.setVisible(false);
        ItemInfoFrame.setVisible(false);
        ItemListFrame.setVisible(false);
        AddItemFrame.setVisible(false);
        MostPurchasedFrame.setVisible(true);
        SuppliersListFrame.setVisible(false);
        AddSuppFrame.setVisible(false);
        ActivityLogFrame.setVisible(false);
        TransactionFrame.setVisible(false);
        StockPrintFrame.setVisible(false);
        PrintStock.setVisible(false);
        AccountsFrame.setVisible(false);
        SpecificAccountFrame.setVisible(false);

        Menu4PanelInit();
    }//GEN-LAST:event_Menu4PanelMouseClicked

    public void Menu4PanelInit() {
        Product tmp[] = detailList.getMostPurchased();
        Object obj3[][] = new Object[tmp.length][4];

        for (int i = 0; i < tmp.length; i++) {
            obj3[i][0] = tmp[i].getName();
            obj3[i][1] = tmp[i].getCategory();
            obj3[i][2] = tmp[i].getStock();
            int x = (int) tmp[i].getRankCounter();
            obj3[i][3] = x;
        }

        try {
            MostPurchasedTable.setModel(new javax.swing.table.DefaultTableModel(
                    obj3,
                    new String[]{
                        "Name", "Category", "Stock", "Number of Purchase"
                    }
            ) {
                Class[] types = new Class[]{
                    java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
                };
                boolean[] canEdit = new boolean[]{
                    false, false, false, false
                };

                public Class getColumnClass(int columnIndex) {
                    return types[columnIndex];
                }

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit[columnIndex];
                }
            });
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please enter a correct date format");
        }
    }

    private void Menu4PanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Menu4PanelMouseEntered
        Menu4Panel.setBackground(new Color(204, 204, 204));
    }//GEN-LAST:event_Menu4PanelMouseEntered

    private void Menu4PanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Menu4PanelMouseExited
        Menu4Panel.setBackground(new Color(240, 240, 240));
    }//GEN-LAST:event_Menu4PanelMouseExited

    private void MostEnterBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MostEnterBtnMouseEntered
        MostEnterBtn.setBackground(new Color(150, 150, 150));
        MostEnterBtn.setForeground(new Color(255, 255, 255));
        MostEnterBtn.setBorder(BorderFactory.createLineBorder(new Color(255, 255, 255)));
    }//GEN-LAST:event_MostEnterBtnMouseEntered

    private void MostEnterBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MostEnterBtnMouseExited
        MostEnterBtn.setBackground(new Color(235, 235, 235));
        MostEnterBtn.setForeground(new Color(0, 0, 0));
        MostEnterBtn.setBorder(BorderFactory.createLineBorder(new Color(51, 51, 51)));
    }//GEN-LAST:event_MostEnterBtnMouseExited

    private void MostResetBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MostResetBtnMouseEntered
        MostResetBtn.setBackground(new Color(150, 150, 150));
        MostResetBtn.setForeground(new Color(255, 255, 255));
        MostResetBtn.setBorder(BorderFactory.createLineBorder(new Color(255, 255, 255)));
    }//GEN-LAST:event_MostResetBtnMouseEntered

    private void MostResetBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MostResetBtnMouseExited
        MostResetBtn.setBackground(new Color(235, 235, 235));
        MostResetBtn.setForeground(new Color(0, 0, 0));
        MostResetBtn.setBorder(BorderFactory.createLineBorder(new Color(51, 51, 51)));
    }//GEN-LAST:event_MostResetBtnMouseExited

    private void SupplierPanelInit() {
        Supplier suppliers[] = null;
        Object obj3[][] = null;

        try {
            suppliers = supplierList.getSupplierById(supplierByProduct);
            obj3 = new Object[suppliers.length][2];

            for (int i = 0; i < suppliers.length; i++) {
                obj3[i][0] = suppliers[i].getSupplierName();
                obj3[i][1] = suppliers[i].getPrice();
            }

            SuppListTable.setModel(new javax.swing.table.DefaultTableModel(
                    obj3,
                    new String[]{
                        "Supplier Name", "Price"
                    }
            ) {
                Class[] types = new Class[]{
                    java.lang.String.class, java.lang.String.class, java.lang.Object.class
                };
                boolean[] canEdit = new boolean[]{
                    false, false
                };

                public Class getColumnClass(int columnIndex) {
                    return types[columnIndex];
                }

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit[columnIndex];
                }
            });

        } catch (Exception e) {
            e.printStackTrace();
        }

        SupplierListProductName.setText("Product: " + ItemNameField.getText());

        DashboardFrame.setVisible(false);
        ItemCategoryFrame.setVisible(false);
        SalesFrame.setVisible(false);
        ItemInfoFrame.setVisible(false);
        ItemListFrame.setVisible(false);
        AddItemFrame.setVisible(false);
        MostPurchasedFrame.setVisible(false);
        SuppliersListFrame.setVisible(true);
        AddSuppFrame.setVisible(false);
        AccountsFrame.setVisible(false);
        SpecificAccountFrame.setVisible(false);
    }

    private void ItemInfoViewSuppMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ItemInfoViewSuppMouseClicked

        supplierByProduct = productList.getProductByName(ItemNameField.getText()).getId();
        this.SelectedSupplierName = "";
        SupplierPanelInit();

//        Supplier suppliers[] = null;
//        Object obj3[][] = null;
//        System.out.println("NIUSLDSOADI");
//        try {
//            suppliers = supplierList.getSupplierById(supplierByProduct);
//            obj3 = new Object[suppliers.length][2];
//
//            for (int i = 0; i < suppliers.length; i++) {
//                obj3[i][0] = suppliers[i].getSupplierName();
//                obj3[i][1] = suppliers[i].getPrice();
//            }
//
//            SuppListTable.setModel(new javax.swing.table.DefaultTableModel(
//                    obj3,
//                    new String[]{
//                        "Supplier Name", "Price"
//                    }
//            ) {
//                Class[] types = new Class[]{
//                    java.lang.String.class, java.lang.String.class, java.lang.Object.class
//                };
//                boolean[] canEdit = new boolean[]{
//                    false, false
//                };
//
//                public Class getColumnClass(int columnIndex) {
//                    return types[columnIndex];
//                }
//
//                public boolean isCellEditable(int rowIndex, int columnIndex) {
//                    return canEdit[columnIndex];
//                }
//            });
//
//        } catch (Exception e) {
//            e.printStackTrace();
//        }
//
//        SupplierListProductName.setText("Product: " + ItemNameField.getText());
//        product = new Product(ItemNameField.getText(), Double.parseDouble(CapitalField.getText()), Double.parseDouble(SellingField.getText()), Double.parseDouble(StockField.getText()), ItemBarcodeField.getText(), ChosenCategory);
        ItemInfoFrame.setVisible(false);
        SuppliersListFrame.setVisible(true);

    }//GEN-LAST:event_ItemInfoViewSuppMouseClicked

    private void SuppDeleteBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SuppDeleteBtnMouseClicked

        if (!SelectedSupplierName.equals("") && !supplierByProduct.equals("")) {
            try {
                int x = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this supplier?", "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (x == JOptionPane.YES_OPTION) {

                    if (supplierList.deleteSupplierToDb(SelectedSupplierName, supplierByProduct)) {
                        if (activityList.addActivityToDb(new Activity("DELETE SUPPLIER", "ITEM CATEGORY", admin_id))) {
                            JOptionPane.showMessageDialog(null, "Successfuly deleted supplier.");
                        }

                        activityList = new ActivityList();
                        supplierList = new SupplierList();
                        SupplierPanelInit();
                        AdminLogInit();
                        ItemInfoFrame.setVisible(true);
                        SuppliersListFrame.setVisible(false);

                    }
                }

            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        SelectedSupplierName = "";
    }//GEN-LAST:event_SuppDeleteBtnMouseClicked

    private void SuppDeleteBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SuppDeleteBtnMouseEntered
        SuppDeleteBtn.setBackground(new Color(150, 150, 150));
        SuppDeleteBtn.setForeground(new Color(255, 255, 255));
        SuppDeleteBtn.setBorder(BorderFactory.createLineBorder(new Color(255, 255, 255)));
    }//GEN-LAST:event_SuppDeleteBtnMouseEntered

    private void SuppDeleteBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SuppDeleteBtnMouseExited
        SuppDeleteBtn.setBackground(new Color(235, 235, 235));
        SuppDeleteBtn.setForeground(new Color(0, 0, 0));
        SuppDeleteBtn.setBorder(BorderFactory.createLineBorder(new Color(51, 51, 51)));
    }//GEN-LAST:event_SuppDeleteBtnMouseExited

    private void SuppAddBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SuppAddBtnMouseClicked

        SuppliersListFrame.setVisible(false);
        AddSuppFrame.setVisible(true);

    }//GEN-LAST:event_SuppAddBtnMouseClicked

    private void SuppAddBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SuppAddBtnMouseEntered
        SuppAddBtn.setBackground(new Color(150, 150, 150));
        SuppAddBtn.setForeground(new Color(255, 255, 255));
        SuppAddBtn.setBorder(BorderFactory.createLineBorder(new Color(255, 255, 255)));
    }//GEN-LAST:event_SuppAddBtnMouseEntered

    private void SuppAddBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SuppAddBtnMouseExited
        SuppAddBtn.setBackground(new Color(235, 235, 235));
        SuppAddBtn.setForeground(new Color(0, 0, 0));
        SuppAddBtn.setBorder(BorderFactory.createLineBorder(new Color(51, 51, 51)));
    }//GEN-LAST:event_SuppAddBtnMouseExited

    private void SuppBackBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SuppBackBtnMouseClicked

        ItemInfoFrame.setVisible(true);
        SuppliersListFrame.setVisible(false);

    }//GEN-LAST:event_SuppBackBtnMouseClicked

    private void SuppBackBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SuppBackBtnMouseEntered
        SuppBackBtn.setBackground(new Color(150, 150, 150));
        SuppBackBtn.setForeground(new Color(255, 255, 255));
        SuppBackBtn.setBorder(BorderFactory.createLineBorder(new Color(255, 255, 255)));
    }//GEN-LAST:event_SuppBackBtnMouseEntered

    private void SuppBackBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SuppBackBtnMouseExited
        SuppBackBtn.setBackground(new Color(235, 235, 235));
        SuppBackBtn.setForeground(new Color(0, 0, 0));
        SuppBackBtn.setBorder(BorderFactory.createLineBorder(new Color(51, 51, 51)));
    }//GEN-LAST:event_SuppBackBtnMouseExited

    private void AddSuppSaveBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddSuppSaveBtnMouseClicked

//        product.setSupplier(AddSuppNameField.getText(), Double.parseDouble(AddSuppPriceField.getText()));
        try {
            if (supplierList.addSupplierToDb(new Supplier(AddSuppNameField.getText(), supplierByProduct, Double.parseDouble(AddSuppPriceField.getText())))) {
                if (activityList.addActivityToDb(new Activity("ADD SUPPLIER", "ITEM CATEGORY", admin_id))) {
                    JOptionPane.showMessageDialog(null, "Supplier successfuly added to db.");
                }

                activityList = new ActivityList();
                supplierList = new SupplierList();
                SupplierPanelInit();
                AdminLogInit();

            }
            AddSuppNameField.setText("");
            AddSuppPriceField.setText("");
            SuppliersListFrame.setVisible(true);
            AddSuppFrame.setVisible(false);

        } catch (Exception e) {
            e.printStackTrace();
        }
//        supplierByProduct = "";
    }//GEN-LAST:event_AddSuppSaveBtnMouseClicked

    private void AddSuppSaveBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddSuppSaveBtnMouseEntered
        AddSuppSaveBtn.setBackground(new Color(150, 150, 150));
        AddSuppSaveBtn.setForeground(new Color(255, 255, 255));
        AddSuppSaveBtn.setBorder(BorderFactory.createLineBorder(new Color(255, 255, 255)));
    }//GEN-LAST:event_AddSuppSaveBtnMouseEntered

    private void AddSuppSaveBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddSuppSaveBtnMouseExited
        AddSuppSaveBtn.setBackground(new Color(235, 235, 235));
        AddSuppSaveBtn.setForeground(new Color(0, 0, 0));
        AddSuppSaveBtn.setBorder(BorderFactory.createLineBorder(new Color(51, 51, 51)));
    }//GEN-LAST:event_AddSuppSaveBtnMouseExited

    private void AddSuppCancelBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddSuppCancelBtnMouseClicked

        int x = JOptionPane.showConfirmDialog(this, "Continue to cancel?", "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (x == JOptionPane.YES_OPTION) {
            AddSuppNameField.setText("");
            AddSuppPriceField.setText("");
            SuppliersListFrame.setVisible(true);
            AddSuppFrame.setVisible(false);
        }

    }//GEN-LAST:event_AddSuppCancelBtnMouseClicked

    private void AddSuppCancelBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddSuppCancelBtnMouseEntered
        AddSuppCancelBtn.setBackground(new Color(150, 150, 150));
        AddSuppCancelBtn.setForeground(new Color(255, 255, 255));
        AddSuppCancelBtn.setBorder(BorderFactory.createLineBorder(new Color(255, 255, 255)));
    }//GEN-LAST:event_AddSuppCancelBtnMouseEntered

    private void AddSuppCancelBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddSuppCancelBtnMouseExited
        AddSuppCancelBtn.setBackground(new Color(235, 235, 235));
        AddSuppCancelBtn.setForeground(new Color(0, 0, 0));
        AddSuppCancelBtn.setBorder(BorderFactory.createLineBorder(new Color(51, 51, 51)));
    }//GEN-LAST:event_AddSuppCancelBtnMouseExited

    private void AddItemSuppNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddItemSuppNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AddItemSuppNameFieldActionPerformed

    private void SuppListTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SuppListTableMouseClicked
        int row = SuppListTable.getSelectedRow();
        SelectedSupplierName = String.valueOf(SuppListTable.getValueAt(row, 0));
        SelectedSupplierProduct = String.valueOf(SuppListTable.getValueAt(row, 1));
    }//GEN-LAST:event_SuppListTableMouseClicked

    private void MostEnterBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MostEnterBtnMouseClicked
        DateFormat df = new SimpleDateFormat("MM-dd-yyyy");
        Object obj3[][] = null;
        try {
            Product tmp[] = detailList.getMostPurchasedByDate(df.format(MostStartDate.getDate()), df.format(MostEndDate.getDate()));
            obj3 = new Object[tmp.length][4];

            for (int i = 0; i < tmp.length; i++) {
                obj3[i][0] = tmp[i].getName();
                obj3[i][1] = tmp[i].getCategory();
                obj3[i][2] = tmp[i].getStock();
                int x = (int) tmp[i].getRankCounter();
                obj3[i][3] = x;
            }
            MostPurchasedTable.setModel(new javax.swing.table.DefaultTableModel(
                    obj3,
                    new String[]{
                        "Name", "Category", "Stock", "Number of purchase"
                    }
            ) {
                Class[] types = new Class[]{
                    java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
                };
                boolean[] canEdit = new boolean[]{
                    false, false, false, false
                };

                public Class getColumnClass(int columnIndex) {
                    return types[columnIndex];
                }

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit[columnIndex];
                }
            });

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please enter a correct date format");
        }
    }//GEN-LAST:event_MostEnterBtnMouseClicked

    private void MostEnterBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MostEnterBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MostEnterBtnActionPerformed

    private void Menu5PanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Menu5PanelMouseClicked
        ChosenCategory = "";
        SelectedId = "";

        DashboardFrame.setVisible(false);
        ItemCategoryFrame.setVisible(false);
        SalesFrame.setVisible(false);
        ItemInfoFrame.setVisible(false);
        ItemListFrame.setVisible(false);
        AddItemFrame.setVisible(false);
        MostPurchasedFrame.setVisible(false);
        SuppliersListFrame.setVisible(false);
        AddSuppFrame.setVisible(false);
        ActivityLogFrame.setVisible(true);
        TransactionFrame.setVisible(false);
        StockPrintFrame.setVisible(false);
        PrintStock.setVisible(false);
        AccountsFrame.setVisible(false);
        SpecificAccountFrame.setVisible(false);
    }//GEN-LAST:event_Menu5PanelMouseClicked

    private void Menu5PanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Menu5PanelMouseEntered
        Menu5Panel.setBackground(new Color(204, 204, 204));
    }//GEN-LAST:event_Menu5PanelMouseEntered

    private void Menu5PanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Menu5PanelMouseExited
        Menu5Panel.setBackground(new Color(240, 240, 240));
    }//GEN-LAST:event_Menu5PanelMouseExited

    private void DashboardTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DashboardTableMouseClicked
        int row = DashboardTable.getSelectedRow();
        SelectedId = String.valueOf(DashboardTable.getValueAt(row, 0));
    }//GEN-LAST:event_DashboardTableMouseClicked

    private void DashViewBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DashViewBtnMouseClicked
        System.out.println("SELECTED ID: " + SelectedId);
        if (!SelectedId.equals("")) {
            DashboardFrame.setVisible(false);
            ItemInfoFrame.setVisible(true);

            try {
                this.ProductSelected = productList.getProductByName(SelectedId);
//                ChosenCategory = ProductSelected.getCategory();
                ItemNameField.setText(ProductSelected.getName());
                if (ProductSelected.getUnit().equals("kg")) {
                    ItemBarcodeField.setSelectedIndex(1);
                }
                StockField.setText(String.valueOf(ProductSelected.getStock()));
                CapitalField.setText(String.valueOf(ProductSelected.getCapitalPrice()));
                SellingField.setText(String.valueOf(ProductSelected.getSellPrice()));
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_DashViewBtnMouseClicked
    public void DashboardPanelInit() {
        Product least_product[] = productList.getLeastStock();
        Object least_obj[][] = new Object[least_product.length][3];
        for (int i = 0; i < least_obj.length; i++) {
            least_obj[i][0] = least_product[i].getName();
            least_obj[i][1] = least_product[i].getStock();
            least_obj[i][2] = least_product[i].getCategory();
        }
        DashboardTable.setModel(new javax.swing.table.DefaultTableModel(
                least_obj,
                new String[]{
                    "Name", "Stock", "Category"
                }
        ) {
            boolean[] canEdit = new boolean[]{
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
    }
    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked

        ConstructionCB.setSelected(false);
        PlumbingCB.setSelected(false);
        ElectricalCB.setSelected(false);
        OilCB.setSelected(false);
        MotorCB.setSelected(false);
        AutoCB.setSelected(false);
        StainlessCB.setSelected(false);
        FishingCB.setSelected(false);
        OtherCB.setSelected(false);

        StockPrintFrame.setVisible(true);
        ItemCategoryFrame.setVisible(false);
    }//GEN-LAST:event_jLabel5MouseClicked

    private void StockPrintCancelBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StockPrintCancelBtnMouseClicked
        StockPrintFrame.setVisible(false);
        ItemCategoryFrame.setVisible(true);
    }//GEN-LAST:event_StockPrintCancelBtnMouseClicked

    private void StockPrintCancelBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StockPrintCancelBtnMouseEntered
        StockPrintCancelBtn.setBackground(new Color(150, 150, 150));
        StockPrintCancelBtn.setForeground(new Color(255, 255, 255));
        StockPrintCancelBtn.setBorder(BorderFactory.createLineBorder(new Color(255, 255, 255)));
    }//GEN-LAST:event_StockPrintCancelBtnMouseEntered

    private void StockPrintCancelBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StockPrintCancelBtnMouseExited
        StockPrintCancelBtn.setBackground(new Color(235, 235, 235));
        StockPrintCancelBtn.setForeground(new Color(0, 0, 0));
        StockPrintCancelBtn.setBorder(BorderFactory.createLineBorder(new Color(51, 51, 51)));
    }//GEN-LAST:event_StockPrintCancelBtnMouseExited

    private void StockPrintContinueBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StockPrintContinueBtnMouseClicked

        try {
            productList = new ProductList();
            Product products[];
            Object obj[][] = null;

            products = productList.getProducts();
            obj = new Object[productList.getTableSize()][6]; //Specify the size of array using the number of rows queried
            int counter = 0;

            if (ConstructionCB.isSelected()) {
                for (int i = 0; i < products.length; i++) {
                    if (products[i].getCategory().equals("Construction")) {
                        obj[counter][0] = products[i].getName();
                        obj[counter][1] = products[i].getCapitalPrice();
                        obj[counter][2] = products[i].getSellPrice();
                        obj[counter][3] = products[i].getStock();
                        obj[counter][4] = products[i].getUnit();
                        obj[counter][5] = products[i].getCategory();
                        counter++;
                    }
                }
            }

            if (PlumbingCB.isSelected()) {
                for (int i = 0; i < products.length; i++) {
                    if (products[i].getCategory().equals("Plumbing")) {
                        obj[counter][0] = products[i].getName();
                        obj[counter][1] = products[i].getCapitalPrice();
                        obj[counter][2] = products[i].getSellPrice();
                        obj[counter][3] = products[i].getStock();
                        obj[counter][4] = products[i].getUnit();
                        obj[counter][5] = products[i].getCategory();
                        counter++;
                    }
                }
            }

            if (ElectricalCB.isSelected()) {
                for (int i = 0; i < products.length; i++) {
                    if (products[i].getCategory().equals("Electrical")) {
                        obj[counter][0] = products[i].getName();
                        obj[counter][1] = products[i].getCapitalPrice();
                        obj[counter][2] = products[i].getSellPrice();
                        obj[counter][3] = products[i].getStock();
                        obj[counter][4] = products[i].getUnit();
                        obj[counter][5] = products[i].getCategory();
                        counter++;
                    }
                }
            }

            if (OilCB.isSelected()) {
                for (int i = 0; i < products.length; i++) {
                    if (products[i].getCategory().equals("Oils")) {
                        obj[counter][0] = products[i].getName();
                        obj[counter][1] = products[i].getCapitalPrice();
                        obj[counter][2] = products[i].getSellPrice();
                        obj[counter][3] = products[i].getStock();
                        obj[counter][4] = products[i].getUnit();
                        obj[counter][5] = products[i].getCategory();
                        counter++;
                    }
                }
            }

            if (MotorCB.isSelected()) {
                for (int i = 0; i < products.length; i++) {
                    if (products[i].getCategory().equals("Motor")) {
                        obj[counter][0] = products[i].getName();
                        obj[counter][1] = products[i].getCapitalPrice();
                        obj[counter][2] = products[i].getSellPrice();
                        obj[counter][3] = products[i].getStock();
                        obj[counter][4] = products[i].getUnit();
                        obj[counter][5] = products[i].getCategory();
                        counter++;
                    }
                }
            }

            if (AutoCB.isSelected()) {
                for (int i = 0; i < products.length; i++) {
                    if (products[i].getCategory().equals("Auto")) {
                        obj[counter][0] = products[i].getName();
                        obj[counter][1] = products[i].getCapitalPrice();
                        obj[counter][2] = products[i].getSellPrice();
                        obj[counter][3] = products[i].getStock();
                        obj[counter][4] = products[i].getUnit();
                        obj[counter][5] = products[i].getCategory();
                        counter++;
                    }
                }
            }

            if (StainlessCB.isSelected()) {
                for (int i = 0; i < products.length; i++) {
                    if (products[i].getCategory().equals("Stainless")) {
                        obj[counter][0] = products[i].getName();
                        obj[counter][1] = products[i].getCapitalPrice();
                        obj[counter][2] = products[i].getSellPrice();
                        obj[counter][3] = products[i].getStock();
                        obj[counter][4] = products[i].getUnit();
                        obj[counter][5] = products[i].getCategory();
                        counter++;
                    }
                }
            }

            if (FishingCB.isSelected()) {
                for (int i = 0; i < products.length; i++) {
                    if (products[i].getCategory().equals("Fishing")) {
                        obj[counter][0] = products[i].getName();
                        obj[counter][1] = products[i].getCapitalPrice();
                        obj[counter][2] = products[i].getSellPrice();
                        obj[counter][3] = products[i].getStock();
                        obj[counter][4] = products[i].getUnit();
                        obj[counter][5] = products[i].getCategory();
                        counter++;
                    }
                }
            }

            if (OtherCB.isSelected()) {
                for (int i = 0; i < products.length; i++) {
                    if (products[i].getCategory().equals("Others")) {
                        obj[counter][0] = products[i].getName();
                        obj[counter][1] = products[i].getCapitalPrice();
                        obj[counter][2] = products[i].getSellPrice();
                        obj[counter][3] = products[i].getStock();
                        obj[counter][4] = products[i].getUnit();
                        obj[counter][5] = products[i].getCategory();
                        counter++;
                    }
                }
            }

            Object obj2[][] = null;
            obj2 = new Object[counter][6];
            for (int i = 0; i < counter; i++) {
                if (!obj[i][0].equals("")) {
                    obj2[i][0] = obj[i][0];
                    obj2[i][1] = obj[i][1];
                    obj2[i][2] = obj[i][2];
                    obj2[i][3] = obj[i][3];
                    obj2[i][4] = obj[i][4];
                    obj2[i][5] = obj[i][5];
                }
            }

            PrintTable.setModel(new javax.swing.table.DefaultTableModel(
                    obj2,
                    new String[]{
                        "Product Name", "Capital Price", "Sell Price", "Stock", "Unit", "Category"
                    }
            ) {
                Class[] types = new Class[]{
                    java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
                };
                boolean[] canEdit = new boolean[]{
                    false, false, false, false, false, false
                };

                public Class getColumnClass(int columnIndex) {
                    return types[columnIndex];
                }

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit[columnIndex];
                }
            });

            StockPrintFrame.setVisible(false);
            PrintStock.setVisible(true);

        } catch (SQLException ex) {
            Logger.getLogger(AdminDashboard.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_StockPrintContinueBtnMouseClicked

    private void StockPrintContinueBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StockPrintContinueBtnMouseEntered
        StockPrintContinueBtn.setBackground(new Color(150, 150, 150));
        StockPrintContinueBtn.setForeground(new Color(255, 255, 255));
        StockPrintContinueBtn.setBorder(BorderFactory.createLineBorder(new Color(255, 255, 255)));
    }//GEN-LAST:event_StockPrintContinueBtnMouseEntered

    private void StockPrintContinueBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StockPrintContinueBtnMouseExited
        StockPrintContinueBtn.setBackground(new Color(235, 235, 235));
        StockPrintContinueBtn.setForeground(new Color(0, 0, 0));
        StockPrintContinueBtn.setBorder(BorderFactory.createLineBorder(new Color(51, 51, 51)));
    }//GEN-LAST:event_StockPrintContinueBtnMouseExited

    private void PrintStockPrintBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PrintStockPrintBtnMouseClicked

        SimpleDateFormat format = new SimpleDateFormat("MMMM d, Y");
        Date date = new Date();

        MessageFormat header = new MessageFormat("Triple K Stock Record - " + format.format(date));
        MessageFormat footer = new MessageFormat("Page {0,number,integer}");
        try {

            PrintTable.print(JTable.PrintMode.NORMAL, header, footer);
        } catch (PrinterException ex) {
            Logger.getLogger(AdminDashboard.class.getName()).log(Level.SEVERE, null, ex);
        }
        PrintStock.setVisible(false);
        ItemCategoryFrame.setVisible(true);

    }//GEN-LAST:event_PrintStockPrintBtnMouseClicked

    private void PrintStockPrintBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PrintStockPrintBtnMouseEntered
        PrintStockPrintBtn.setBackground(new Color(150, 150, 150));
        PrintStockPrintBtn.setForeground(new Color(255, 255, 255));
        PrintStockPrintBtn.setBorder(BorderFactory.createLineBorder(new Color(255, 255, 255)));
    }//GEN-LAST:event_PrintStockPrintBtnMouseEntered

    private void PrintStockPrintBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PrintStockPrintBtnMouseExited
        PrintStockPrintBtn.setBackground(new Color(235, 235, 235));
        PrintStockPrintBtn.setForeground(new Color(0, 0, 0));
        PrintStockPrintBtn.setBorder(BorderFactory.createLineBorder(new Color(51, 51, 51)));
    }//GEN-LAST:event_PrintStockPrintBtnMouseExited

    private void PrintStockCancelBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PrintStockCancelBtnMouseClicked
        PrintStock.setVisible(false);
        ItemCategoryFrame.setVisible(true);
    }//GEN-LAST:event_PrintStockCancelBtnMouseClicked

    private void PrintStockCancelBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PrintStockCancelBtnMouseEntered
        PrintStockCancelBtn.setBackground(new Color(150, 150, 150));
        PrintStockCancelBtn.setForeground(new Color(255, 255, 255));
        PrintStockCancelBtn.setBorder(BorderFactory.createLineBorder(new Color(255, 255, 255)));
    }//GEN-LAST:event_PrintStockCancelBtnMouseEntered

    private void PrintStockCancelBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PrintStockCancelBtnMouseExited
        PrintStockCancelBtn.setBackground(new Color(235, 235, 235));
        PrintStockCancelBtn.setForeground(new Color(0, 0, 0));
        PrintStockCancelBtn.setBorder(BorderFactory.createLineBorder(new Color(51, 51, 51)));
    }//GEN-LAST:event_PrintStockCancelBtnMouseExited

    private void MinimizeBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MinimizeBtnMouseClicked
        this.setState(AdminDashboard.ICONIFIED);
    }//GEN-LAST:event_MinimizeBtnMouseClicked

    private void MinimizeBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MinimizeBtnMouseEntered
        MinimizeBtn.setForeground(new Color(255, 255, 255));
    }//GEN-LAST:event_MinimizeBtnMouseEntered

    private void MinimizeBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MinimizeBtnMouseExited
        MinimizeBtn.setForeground(new Color(204, 204, 204));
    }//GEN-LAST:event_MinimizeBtnMouseExited

    private void InitAddminTable() {
        try {
            adminList = new AdminList();
            UserLogin user[];
            Object obj[][] = null;

            user = adminList.getAdmins();
            obj = new Object[user.length][6]; //Specify the size of array using the number of rows queried

            for (int i = 0; i < user.length; i++) {
                if (user[i] != null) {
                    obj[i][0] = user[i].getName();
                    obj[i][1] = user[i].getUsername();
                }
            }

            AccountsTable.setModel(new javax.swing.table.DefaultTableModel(
                    obj,
                    new String[]{
                        "Account Name", "Username"
                    }
            ) {
                Class[] types = new Class[]{
                    java.lang.String.class, java.lang.String.class
                };
                boolean[] canEdit = new boolean[]{
                    false, false
                };

                public Class getColumnClass(int columnIndex) {
                    return types[columnIndex];
                }

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit[columnIndex];
                }
            });
        } catch (SQLException ex) {
            Logger.getLogger(AdminDashboard.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void AccountsIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AccountsIconMouseClicked

        this.InitAddminTable();

        SelectedAccountUsername = "";
        User = null;
        DashboardFrame.setVisible(false);
        ItemCategoryFrame.setVisible(false);
        SalesFrame.setVisible(false);
        ItemInfoFrame.setVisible(false);
        ItemListFrame.setVisible(false);
        AddItemFrame.setVisible(false);
        MostPurchasedFrame.setVisible(false);
        SuppliersListFrame.setVisible(false);
        AddSuppFrame.setVisible(false);
        ActivityLogFrame.setVisible(false);
        TransactionFrame.setVisible(false);
        StockPrintFrame.setVisible(false);
        PrintStock.setVisible(false);
        AccountsFrame.setVisible(true);
        SpecificAccountFrame.setVisible(false);
    }//GEN-LAST:event_AccountsIconMouseClicked

    private void AccountsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AccountsTableMouseClicked
        int row = AccountsTable.getSelectedRow();
        SelectedAccountUsername = String.valueOf(AccountsTable.getValueAt(row, 1));
    }//GEN-LAST:event_AccountsTableMouseClicked

    private void AccountsViewBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AccountsViewBtnMouseClicked
        if (!SelectedAccountUsername.equals("")) {
            SpecificAccountFrame.setVisible(true);
            AccountsFrame.setVisible(false);

            try {
                this.User = adminList.getAdminByUsername(SelectedAccountUsername);
                this.old_username = User.getUsername();
                AccountNameField.setText(User.getName());
                AccountUsernameField.setText(User.getUsername());
                AccountPasswordField.setText(User.getPassword());
                if (User.getType().equals("STAFF")) {
                    AccountTypeCB.setSelectedIndex(1);
                }

            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_AccountsViewBtnMouseClicked

    private void AccountEditBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AccountEditBtnMouseClicked
        this.User = new UserLogin();
        this.User.setUser(AccountNameField.getText(), AccountUsernameField.getText(), AccountPasswordField.getText(), String.valueOf(AccountTypeCB.getSelectedItem()), this.old_username);
        Object[] choices = {"Confirm", "Cancel"};

        try {
            int flag = JOptionPane.showOptionDialog(AddItemPanel,
                    "Are you sure you want to edit this account?",
                    "CONFIRM EDIT",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE,
                    null,
                    choices,
                    choices[0]);
            if (flag == 0) {
                if (adminList.editAccountToDb(User)) {
                    if (activityList.addActivityToDb(new Activity("EDIT ACCOUNT", "ACCOUNTS", admin_id))) {
                        JOptionPane.showMessageDialog(null, "Succesfully edited account");
                    }

                    activityList = new ActivityList();
                    adminList = new AdminList();
                    AdminLogInit();
                    this.InitAddminTable();
                    AccountsFrame.setVisible(true);
                    SpecificAccountFrame.setVisible(false);

                } else {
                    JOptionPane.showMessageDialog(null, "Something went wrong please contact system administator.");
                    ItemInfoFrame.setVisible(false);
                    ItemListFrame.setVisible(true);

                }
            } else {
                ItemInfoFrame.setVisible(false);
                ItemListFrame.setVisible(true);
            }

        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_AccountEditBtnMouseClicked

    private void AccountsViewBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AccountsViewBtnMouseEntered
        AccountsViewBtn.setBackground(new Color(150, 150, 150));
        AccountsViewBtn.setForeground(new Color(255, 255, 255));
        AccountsViewBtn.setBorder(BorderFactory.createLineBorder(new Color(255, 255, 255)));
    }//GEN-LAST:event_AccountsViewBtnMouseEntered

    private void AccountsViewBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AccountsViewBtnMouseExited
        AccountsViewBtn.setBackground(new Color(235, 235, 235));
        AccountsViewBtn.setForeground(new Color(0, 0, 0));
        AccountsViewBtn.setBorder(BorderFactory.createLineBorder(new Color(51, 51, 51)));
    }//GEN-LAST:event_AccountsViewBtnMouseExited

    private void AccountEditBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AccountEditBtnMouseEntered
        AccountEditBtn.setBackground(new Color(150, 150, 150));
        AccountEditBtn.setForeground(new Color(255, 255, 255));
        AccountEditBtn.setBorder(BorderFactory.createLineBorder(new Color(255, 255, 255)));
    }//GEN-LAST:event_AccountEditBtnMouseEntered

    private void AccountEditBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AccountEditBtnMouseExited
        AccountEditBtn.setBackground(new Color(235, 235, 235));
        AccountEditBtn.setForeground(new Color(0, 0, 0));
        AccountEditBtn.setBorder(BorderFactory.createLineBorder(new Color(51, 51, 51)));
    }//GEN-LAST:event_AccountEditBtnMouseExited

    private void AccountBackBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AccountBackBtnMouseClicked
        SelectedAccountUsername = "";
        SpecificAccountFrame.setVisible(false);
        AccountsFrame.setVisible(true);

    }//GEN-LAST:event_AccountBackBtnMouseClicked

    private void AccountBackBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AccountBackBtnMouseEntered
        AccountBackBtn.setBackground(new Color(150, 150, 150));
        AccountBackBtn.setForeground(new Color(255, 255, 255));
        AccountBackBtn.setBorder(BorderFactory.createLineBorder(new Color(255, 255, 255)));
    }//GEN-LAST:event_AccountBackBtnMouseEntered

    private void AccountBackBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AccountBackBtnMouseExited
        AccountBackBtn.setBackground(new Color(235, 235, 235));
        AccountBackBtn.setForeground(new Color(0, 0, 0));
        AccountBackBtn.setBorder(BorderFactory.createLineBorder(new Color(51, 51, 51)));
    }//GEN-LAST:event_AccountBackBtnMouseExited

    private void MostResetBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MostResetBtnMouseClicked
        Menu4PanelInit();
        MostStartDate.setDate(null);
        MostEndDate.setDate(null);
    }//GEN-LAST:event_MostResetBtnMouseClicked

    public void AdminLogInit() {
        Object obj[][] = null;
        Activity tmp[] = null;

        try {
            tmp = activityList.getActivities();
            obj = new Object[tmp.length][4];

            for (int i = 0; i < obj.length; i++) {
                obj[i][0] = adminList.getAdminById(tmp[i].getAdminId()).getName();
                obj[i][1] = tmp[i].getType();
                obj[i][2] = tmp[i].getDateTime();
                obj[i][3] = tmp[i].getLocation();
            }
            ActivityTable.setModel(new javax.swing.table.DefaultTableModel(
                    obj,
                    new String[]{
                        "Account Name", "Activity", "Date", "Area Performed"
                    }
            ) {
                Class[] types = new Class[]{
                    java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
                };
                boolean[] canEdit = new boolean[]{
                    false, false, false, false
                };

                public Class getColumnClass(int columnIndex) {
                    return types[columnIndex];
                }

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit[columnIndex];
                }
            });
        } catch (Exception e) {
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminDashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AccountBackBtn;
    private javax.swing.JButton AccountEditBtn;
    private javax.swing.JTextField AccountNameField;
    private javax.swing.JLabel AccountNameLabel;
    private javax.swing.JTextField AccountPasswordField;
    private javax.swing.JLabel AccountPasswordLabel;
    private javax.swing.JComboBox<String> AccountTypeCB;
    private javax.swing.JLabel AccountTypeLabel;
    private javax.swing.JTextField AccountUsernameField;
    private javax.swing.JLabel AccountUsernameLabel;
    private javax.swing.JPanel AccountsFrame;
    private javax.swing.JLabel AccountsIcon;
    private javax.swing.JTable AccountsTable;
    private javax.swing.JButton AccountsViewBtn;
    private javax.swing.JPanel ActivityLogFrame;
    private javax.swing.JLabel ActivityLogLabel;
    private javax.swing.JPanel ActivityLogPanel;
    private javax.swing.JTable ActivityTable;
    private javax.swing.JLabel AddBarcodeLabel;
    private javax.swing.JTextField AddCapitalField;
    private javax.swing.JLabel AddCapitalLabel;
    private javax.swing.JButton AddItemCancelBtn;
    private javax.swing.JPanel AddItemFrame;
    private javax.swing.JLabel AddItemLabel;
    private javax.swing.JPanel AddItemPanel;
    private javax.swing.JButton AddItemSaveBtn;
    private javax.swing.JTextField AddItemSuppNameField;
    private javax.swing.JLabel AddItemSuppNameLabel;
    private javax.swing.JComboBox<String> AddItemUnit;
    private javax.swing.JTextField AddNameField;
    private javax.swing.JLabel AddNameLabel;
    private javax.swing.JTextField AddSellField;
    private javax.swing.JLabel AddSellLabel;
    private javax.swing.JTextField AddStockField;
    private javax.swing.JLabel AddStockLabel;
    private javax.swing.JButton AddSuppCancelBtn;
    private javax.swing.JPanel AddSuppFrame;
    private javax.swing.JLabel AddSuppLabel;
    private javax.swing.JTextField AddSuppNameField;
    private javax.swing.JLabel AddSuppNameLabel;
    private javax.swing.JPanel AddSuppPanel;
    private javax.swing.JTextField AddSuppPriceField;
    private javax.swing.JLabel AddSuppPriceLabel;
    private javax.swing.JButton AddSuppSaveBtn;
    private javax.swing.JLabel Admin;
    private javax.swing.JCheckBox AutoCB;
    private javax.swing.JPanel Background;
    private javax.swing.JTextField CapitalField;
    private javax.swing.JLabel CapitalLabel;
    private javax.swing.JLabel Category1Label;
    private javax.swing.JPanel Category1Panel;
    private javax.swing.JLabel Category2Label;
    private javax.swing.JPanel Category2Panel;
    private javax.swing.JLabel Category3Label;
    private javax.swing.JPanel Category3Panel;
    private javax.swing.JLabel Category4Label;
    private javax.swing.JPanel Category4Panel;
    private javax.swing.JLabel Category5Label;
    private javax.swing.JPanel Category5Panel;
    private javax.swing.JLabel Category6Label;
    private javax.swing.JPanel Category6Panel;
    private javax.swing.JLabel Category7Label;
    private javax.swing.JPanel Category7Panel;
    private javax.swing.JLabel Category8Label;
    private javax.swing.JPanel Category8Panel;
    private javax.swing.JLabel Category9Label;
    private javax.swing.JPanel Category9Panel;
    private javax.swing.JCheckBox ConstructionCB;
    private javax.swing.JButton DashViewBtn;
    private javax.swing.JPanel DashboardFrame;
    private javax.swing.JTextField DashboardGainField;
    private javax.swing.JLabel DashboardGainLabe;
    private javax.swing.JLabel DashboardLabel;
    private javax.swing.JScrollPane DashboardPane;
    private javax.swing.JPanel DashboardPanel;
    private javax.swing.JPanel DashboardPanelMid;
    private javax.swing.JLabel DashboardStockLabel;
    private javax.swing.JTable DashboardTable;
    private javax.swing.JLabel DeleteLabel;
    private javax.swing.JPanel DeletePanel;
    private javax.swing.JCheckBox ElectricalCB;
    private javax.swing.JLabel Exit;
    private javax.swing.JCheckBox FishingCB;
    private javax.swing.JComboBox<String> ItemBarcodeField;
    private javax.swing.JLabel ItemBarcodeLabel;
    private javax.swing.JPanel ItemCategoryFrame;
    private javax.swing.JLabel ItemCategoryLabel;
    private javax.swing.JPanel ItemCategoryPanel;
    private javax.swing.JButton ItemInfoBackBtn;
    private javax.swing.JButton ItemInfoEditBtn;
    private javax.swing.JPanel ItemInfoFrame;
    private javax.swing.JPanel ItemInfoPanel;
    private javax.swing.JButton ItemInfoViewSupp;
    private javax.swing.JLabel ItemInformationLabel;
    private javax.swing.JPanel ItemListFrame;
    private javax.swing.JLabel ItemListLabel;
    private javax.swing.JScrollPane ItemListPane;
    private javax.swing.JPanel ItemListPanel;
    private javax.swing.JTable ItemListTable;
    private javax.swing.JTextField ItemNameField;
    private javax.swing.JLabel ItemNameLabel;
    private javax.swing.JTextField ItemSearchField;
    private javax.swing.JLabel ItemSearchLogo;
    private javax.swing.JPanel LeftPanel;
    private javax.swing.JButton ListItemAddBtn;
    private javax.swing.JButton ListItemBackBtn;
    private javax.swing.JButton ListItemResetBtn;
    private javax.swing.JButton ListViewBtn;
    private javax.swing.JLabel LogoutLabel;
    private javax.swing.JPanel LogoutPanel;
    private javax.swing.JPanel MainInfoPanel;
    private javax.swing.JPanel MainPanel;
    private javax.swing.JLabel Menu1Label;
    private javax.swing.JPanel Menu1Panel;
    private javax.swing.JLabel Menu2Label;
    private javax.swing.JPanel Menu2Panel;
    private javax.swing.JLabel Menu3Label;
    private javax.swing.JPanel Menu3Panel;
    private javax.swing.JLabel Menu4Label;
    private javax.swing.JPanel Menu4Panel;
    private javax.swing.JLabel Menu5Label;
    private javax.swing.JPanel Menu5Panel;
    private javax.swing.JLabel MinimizeBtn;
    private com.toedter.calendar.JDateChooser MostEndDate;
    private javax.swing.JLabel MostEndLabel;
    private javax.swing.JButton MostEnterBtn;
    private javax.swing.JPanel MostPurchasedFrame;
    private javax.swing.JLabel MostPurchasedLabel;
    private javax.swing.JScrollPane MostPurchasedPane;
    private javax.swing.JPanel MostPurchasedPanel;
    private javax.swing.JTable MostPurchasedTable;
    private javax.swing.JButton MostResetBtn;
    private com.toedter.calendar.JDateChooser MostStartDate;
    private javax.swing.JLabel MostStartLabel;
    private javax.swing.JCheckBox MotorCB;
    private javax.swing.JCheckBox OilCB;
    private javax.swing.JCheckBox OtherCB;
    private javax.swing.JCheckBox PlumbingCB;
    private javax.swing.JPanel PrintStock;
    private javax.swing.JButton PrintStockCancelBtn;
    private javax.swing.JButton PrintStockPrintBtn;
    private javax.swing.JTable PrintTable;
    private com.toedter.calendar.JDateChooser SalesEndDate;
    private javax.swing.JLabel SalesEndLabel;
    private javax.swing.JButton SalesEnterBtn;
    private javax.swing.JPanel SalesFrame;
    private javax.swing.JTextField SalesGainField;
    private javax.swing.JLabel SalesGainLabel;
    private javax.swing.JLabel SalesLabel;
    private javax.swing.JScrollPane SalesPane;
    private javax.swing.JPanel SalesPanel;
    private javax.swing.JButton SalesResetBtn;
    private com.toedter.calendar.JDateChooser SalesStartDate;
    private javax.swing.JLabel SalesStartLabel;
    private javax.swing.JTable SalesTable;
    private javax.swing.JButton SalesViewBtn;
    private javax.swing.JPanel SearchPanel;
    private javax.swing.JTextField SellingField;
    private javax.swing.JLabel SellingLabel;
    private javax.swing.JPanel SpecificAccountFrame;
    private javax.swing.JCheckBox StainlessCB;
    private javax.swing.JTextField StockField;
    private javax.swing.JLabel StockLabel;
    private javax.swing.JToggleButton StockPrintCancelBtn;
    private javax.swing.JToggleButton StockPrintContinueBtn;
    private javax.swing.JPanel StockPrintFrame;
    private javax.swing.JLabel StockPrintLabel;
    private javax.swing.JPanel StockPrintMidPanel;
    private javax.swing.JPanel StockPrintPanel;
    private javax.swing.JButton SuppAddBtn;
    private javax.swing.JButton SuppBackBtn;
    private javax.swing.JButton SuppDeleteBtn;
    private javax.swing.JTable SuppListTable;
    private javax.swing.JLabel SupplierLabel;
    private javax.swing.JLabel SupplierListProductName;
    private javax.swing.JPanel SuppliersListFrame;
    private javax.swing.JPanel SuppliersListPanel;
    private javax.swing.JScrollPane TansactionPane;
    private javax.swing.JPanel TempFrame;
    private javax.swing.JTextField TransBillField;
    private javax.swing.JLabel TransBillLabel;
    private javax.swing.JTextField TransCashierField;
    private javax.swing.JLabel TransCashierLabel;
    private javax.swing.JTextField TransDateField;
    private javax.swing.JLabel TransDateLabel;
    private javax.swing.JTextField TransIDField;
    private javax.swing.JLabel TransIDLabel;
    private javax.swing.JTextField TransTimeField;
    private javax.swing.JLabel TransTimeLabel;
    private javax.swing.JButton TransactionBackBtn;
    private javax.swing.JPanel TransactionFrame;
    private javax.swing.JLabel TransactionLabe;
    private javax.swing.JPanel TransactionPanel;
    private javax.swing.JPanel TransactionPanelMid;
    private javax.swing.JTable TransactionTable;
    private javax.swing.JLabel TripleKLogo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
}
