/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Main;

import ArrayUtil.Activity;
import ArrayUtil.ActivityList;
import ArrayUtil.Product;
import ArrayUtil.ProductList;
import ArrayUtil.ProductLinkedList;
import ArrayUtil.Node;
import ArrayUtil.TransactionDetailList;
import ArrayUtil.TransactionList;
import ArrayUtil.Transaction;
import ArrayUtil.TransactionDetail;
import ArrayUtil.AdminList;
import java.awt.Color;
import java.awt.Font;
import java.awt.print.PrinterException;
import java.text.MessageFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.print.attribute.HashPrintRequestAttributeSet;
import javax.print.attribute.PrintRequestAttributeSet;
import javax.print.attribute.standard.MediaPrintableArea;
import javax.print.attribute.standard.MediaSizeName;
import javax.print.attribute.standard.Sides;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author Kortopi
 */
public class CashierDashboard extends javax.swing.JFrame {

    private ProductList productList = null;
    private String ChosenCategory = "";
    private String SelectedId = "";
    private String SelectedQueue = "";
    private ProductLinkedList linkedlist = null;
    private ActivityList activityList = null;
    private AdminList adminList = null;
    private Transaction transaction = null;
    private TransactionDetail detail = null;
    private TransactionList transactionList = null;
    private TransactionDetailList detailList = null;
    private String amount_taken;
    private String admin_id = "";
    private float grandTotal = 0;

    /**
     * Creates new form CashierDashboard
     */
    public CashierDashboard() {

    }

    public CashierDashboard(String admin_id) {
        this.admin_id = admin_id;
        try {
            transactionList = new TransactionList();
            detailList = new TransactionDetailList();
            productList = new ProductList();
            linkedlist = new ProductLinkedList();
            activityList = new ActivityList();
            adminList = new AdminList();
        } catch (Exception e) {

        }
        initComponents();
        System.out.println("ADMIN LOGGED: " + this.admin_id);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Background = new javax.swing.JPanel();
        CashierLabel = new javax.swing.JLabel();
        Exit = new javax.swing.JLabel();
        MinimizeBtn = new javax.swing.JLabel();
        MidPanel = new javax.swing.JPanel();
        QueueFrame = new javax.swing.JPanel();
        LeftPanel = new javax.swing.JPanel();
        CategoryPanel = new javax.swing.JPanel();
        FirstCategory = new javax.swing.JPanel();
        FirstIcon = new javax.swing.JLabel();
        FirstLabel = new javax.swing.JLabel();
        SecondCategory = new javax.swing.JPanel();
        SecondIcon = new javax.swing.JLabel();
        SecondLabel = new javax.swing.JLabel();
        ThirdCategory = new javax.swing.JPanel();
        ThirdIcon = new javax.swing.JLabel();
        ThirdLabel = new javax.swing.JLabel();
        FourthCategory = new javax.swing.JPanel();
        FourthIcon = new javax.swing.JLabel();
        FourthLabel = new javax.swing.JLabel();
        FifthCategory = new javax.swing.JPanel();
        FifthIcon = new javax.swing.JLabel();
        FifthLabel = new javax.swing.JLabel();
        SixthCategory = new javax.swing.JPanel();
        SixthIcon = new javax.swing.JLabel();
        SixthLabel = new javax.swing.JLabel();
        SeventhCategory = new javax.swing.JPanel();
        SeventhIcon = new javax.swing.JLabel();
        SeventhLabel = new javax.swing.JLabel();
        EigthCategory = new javax.swing.JPanel();
        EigthIcon = new javax.swing.JLabel();
        EigthLabel = new javax.swing.JLabel();
        OtherCategory = new javax.swing.JPanel();
        OtherIcon = new javax.swing.JLabel();
        OtherLabel = new javax.swing.JLabel();
        ItemListPanel = new javax.swing.JPanel();
        ItemListPane = new javax.swing.JScrollPane();
        ItemListTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        AddQueueBtn = new javax.swing.JButton();
        BackToCatListBtn = new javax.swing.JButton();
        Temp = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        SearchPanel = new javax.swing.JPanel();
        SearchField = new javax.swing.JTextField();
        SearchIcon = new javax.swing.JLabel();
        ReightPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        QueueTable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        TotalBillField = new javax.swing.JTextField();
        PrintPanel = new javax.swing.JPanel();
        Print = new javax.swing.JLabel();
        RemoveToQueueBtn = new javax.swing.JButton();
        PrintFrame = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ReceiptArea = new javax.swing.JTextArea();
        PrintBtn = new javax.swing.JButton();
        CancelBtn = new javax.swing.JButton();
        TempFrame = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        LogoutLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        Background.setBackground(new java.awt.Color(51, 51, 51));

        CashierLabel.setFont(new java.awt.Font("Century Gothic", 0, 36)); // NOI18N
        CashierLabel.setForeground(new java.awt.Color(255, 255, 255));
        CashierLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CashierLabel.setText("Cashier");

        Exit.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        Exit.setForeground(new java.awt.Color(204, 204, 204));
        Exit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Exit.setText("X");
        Exit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ExitMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ExitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ExitMouseExited(evt);
            }
        });

        MinimizeBtn.setFont(new java.awt.Font("Tahoma", 0, 40)); // NOI18N
        MinimizeBtn.setForeground(new java.awt.Color(204, 204, 204));
        MinimizeBtn.setText("-");
        MinimizeBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        MinimizeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MinimizeBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MinimizeBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                MinimizeBtnMouseExited(evt);
            }
        });

        MidPanel.setLayout(new java.awt.CardLayout());

        QueueFrame.setBackground(new java.awt.Color(51, 51, 51));

        LeftPanel.setLayout(new java.awt.CardLayout());

        CategoryPanel.setBackground(new java.awt.Color(51, 51, 51));

        FirstCategory.setBackground(new java.awt.Color(51, 51, 51));
        FirstCategory.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        FirstCategory.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        FirstCategory.setPreferredSize(new java.awt.Dimension(150, 150));
        FirstCategory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FirstCategoryMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                FirstCategoryMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                FirstCategoryMouseExited(evt);
            }
        });

        FirstIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/Construction.png"))); // NOI18N

        FirstLabel.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        FirstLabel.setForeground(new java.awt.Color(204, 204, 204));
        FirstLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        FirstLabel.setText("Construction Supp.");

        javax.swing.GroupLayout FirstCategoryLayout = new javax.swing.GroupLayout(FirstCategory);
        FirstCategory.setLayout(FirstCategoryLayout);
        FirstCategoryLayout.setHorizontalGroup(
            FirstCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FirstCategoryLayout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(FirstCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(FirstLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FirstCategoryLayout.createSequentialGroup()
                        .addComponent(FirstIcon)
                        .addGap(37, 37, 37))))
        );
        FirstCategoryLayout.setVerticalGroup(
            FirstCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FirstCategoryLayout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addComponent(FirstIcon)
                .addGap(18, 18, 18)
                .addComponent(FirstLabel)
                .addContainerGap())
        );

        SecondCategory.setBackground(new java.awt.Color(51, 51, 51));
        SecondCategory.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        SecondCategory.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SecondCategory.setPreferredSize(new java.awt.Dimension(150, 150));
        SecondCategory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SecondCategoryMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                SecondCategoryMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                SecondCategoryMouseExited(evt);
            }
        });

        SecondIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/Plumbing.png"))); // NOI18N

        SecondLabel.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        SecondLabel.setForeground(new java.awt.Color(204, 204, 204));
        SecondLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SecondLabel.setText("Plumbing Supp.");

        javax.swing.GroupLayout SecondCategoryLayout = new javax.swing.GroupLayout(SecondCategory);
        SecondCategory.setLayout(SecondCategoryLayout);
        SecondCategoryLayout.setHorizontalGroup(
            SecondCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SecondCategoryLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(SecondLabel)
                .addContainerGap(21, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SecondCategoryLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SecondIcon)
                .addGap(42, 42, 42))
        );
        SecondCategoryLayout.setVerticalGroup(
            SecondCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SecondCategoryLayout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addComponent(SecondIcon)
                .addGap(18, 18, 18)
                .addComponent(SecondLabel)
                .addContainerGap())
        );

        ThirdCategory.setBackground(new java.awt.Color(51, 51, 51));
        ThirdCategory.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        ThirdCategory.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ThirdCategory.setPreferredSize(new java.awt.Dimension(150, 150));
        ThirdCategory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ThirdCategoryMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ThirdCategoryMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ThirdCategoryMouseExited(evt);
            }
        });

        ThirdIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/Electric.png"))); // NOI18N

        ThirdLabel.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        ThirdLabel.setForeground(new java.awt.Color(204, 204, 204));
        ThirdLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ThirdLabel.setText("Electical Supp.");

        javax.swing.GroupLayout ThirdCategoryLayout = new javax.swing.GroupLayout(ThirdCategory);
        ThirdCategory.setLayout(ThirdCategoryLayout);
        ThirdCategoryLayout.setHorizontalGroup(
            ThirdCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ThirdCategoryLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ThirdLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ThirdCategoryLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ThirdIcon)
                .addGap(38, 38, 38))
        );
        ThirdCategoryLayout.setVerticalGroup(
            ThirdCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ThirdCategoryLayout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addComponent(ThirdIcon)
                .addGap(18, 18, 18)
                .addComponent(ThirdLabel)
                .addContainerGap())
        );

        FourthCategory.setBackground(new java.awt.Color(51, 51, 51));
        FourthCategory.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        FourthCategory.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        FourthCategory.setPreferredSize(new java.awt.Dimension(150, 150));
        FourthCategory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FourthCategoryMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                FourthCategoryMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                FourthCategoryMouseExited(evt);
            }
        });

        FourthIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/Oil.png"))); // NOI18N

        FourthLabel.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        FourthLabel.setForeground(new java.awt.Color(204, 204, 204));
        FourthLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        FourthLabel.setText("Oil's");

        javax.swing.GroupLayout FourthCategoryLayout = new javax.swing.GroupLayout(FourthCategory);
        FourthCategory.setLayout(FourthCategoryLayout);
        FourthCategoryLayout.setHorizontalGroup(
            FourthCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FourthCategoryLayout.createSequentialGroup()
                .addGroup(FourthCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FourthCategoryLayout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(FourthLabel))
                    .addGroup(FourthCategoryLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(FourthIcon)))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        FourthCategoryLayout.setVerticalGroup(
            FourthCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FourthCategoryLayout.createSequentialGroup()
                .addContainerGap(36, Short.MAX_VALUE)
                .addComponent(FourthIcon)
                .addGap(18, 18, 18)
                .addComponent(FourthLabel)
                .addContainerGap())
        );

        FifthCategory.setBackground(new java.awt.Color(51, 51, 51));
        FifthCategory.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        FifthCategory.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        FifthCategory.setPreferredSize(new java.awt.Dimension(150, 150));
        FifthCategory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FifthCategoryMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                FifthCategoryMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                FifthCategoryMouseExited(evt);
            }
        });

        FifthIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/Motor.png"))); // NOI18N

        FifthLabel.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        FifthLabel.setForeground(new java.awt.Color(204, 204, 204));
        FifthLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        FifthLabel.setText("Motorcycle Eq.");

        javax.swing.GroupLayout FifthCategoryLayout = new javax.swing.GroupLayout(FifthCategory);
        FifthCategory.setLayout(FifthCategoryLayout);
        FifthCategoryLayout.setHorizontalGroup(
            FifthCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FifthCategoryLayout.createSequentialGroup()
                .addGroup(FifthCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FifthCategoryLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(FifthLabel))
                    .addGroup(FifthCategoryLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(FifthIcon)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        FifthCategoryLayout.setVerticalGroup(
            FifthCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FifthCategoryLayout.createSequentialGroup()
                .addContainerGap(36, Short.MAX_VALUE)
                .addComponent(FifthIcon)
                .addGap(18, 18, 18)
                .addComponent(FifthLabel)
                .addContainerGap())
        );

        SixthCategory.setBackground(new java.awt.Color(51, 51, 51));
        SixthCategory.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        SixthCategory.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SixthCategory.setPreferredSize(new java.awt.Dimension(150, 150));
        SixthCategory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SixthCategoryMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                SixthCategoryMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                SixthCategoryMouseExited(evt);
            }
        });

        SixthIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/auto.png"))); // NOI18N

        SixthLabel.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        SixthLabel.setForeground(new java.awt.Color(204, 204, 204));
        SixthLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SixthLabel.setText("Auto Parts");

        javax.swing.GroupLayout SixthCategoryLayout = new javax.swing.GroupLayout(SixthCategory);
        SixthCategory.setLayout(SixthCategoryLayout);
        SixthCategoryLayout.setHorizontalGroup(
            SixthCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SixthCategoryLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(SixthCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SixthLabel)
                    .addComponent(SixthIcon))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        SixthCategoryLayout.setVerticalGroup(
            SixthCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SixthCategoryLayout.createSequentialGroup()
                .addContainerGap(36, Short.MAX_VALUE)
                .addComponent(SixthIcon)
                .addGap(18, 18, 18)
                .addComponent(SixthLabel)
                .addContainerGap())
        );

        SeventhCategory.setBackground(new java.awt.Color(51, 51, 51));
        SeventhCategory.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        SeventhCategory.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SeventhCategory.setPreferredSize(new java.awt.Dimension(150, 150));
        SeventhCategory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SeventhCategoryMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                SeventhCategoryMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                SeventhCategoryMouseExited(evt);
            }
        });

        SeventhIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/stainless.png"))); // NOI18N

        SeventhLabel.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        SeventhLabel.setForeground(new java.awt.Color(204, 204, 204));
        SeventhLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SeventhLabel.setText("Stainless Steel");

        javax.swing.GroupLayout SeventhCategoryLayout = new javax.swing.GroupLayout(SeventhCategory);
        SeventhCategory.setLayout(SeventhCategoryLayout);
        SeventhCategoryLayout.setHorizontalGroup(
            SeventhCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SeventhCategoryLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(SeventhCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SeventhIcon, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                    .addGroup(SeventhCategoryLayout.createSequentialGroup()
                        .addComponent(SeventhLabel)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        SeventhCategoryLayout.setVerticalGroup(
            SeventhCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SeventhCategoryLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(SeventhIcon)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SeventhLabel)
                .addContainerGap())
        );

        EigthCategory.setBackground(new java.awt.Color(51, 51, 51));
        EigthCategory.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        EigthCategory.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        EigthCategory.setPreferredSize(new java.awt.Dimension(150, 150));
        EigthCategory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EigthCategoryMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                EigthCategoryMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                EigthCategoryMouseExited(evt);
            }
        });

        EigthIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/fishing.png"))); // NOI18N

        EigthLabel.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        EigthLabel.setForeground(new java.awt.Color(204, 204, 204));
        EigthLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        EigthLabel.setText("Fishing Equipments");

        javax.swing.GroupLayout EigthCategoryLayout = new javax.swing.GroupLayout(EigthCategory);
        EigthCategory.setLayout(EigthCategoryLayout);
        EigthCategoryLayout.setHorizontalGroup(
            EigthCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EigthCategoryLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(EigthLabel)
                .addContainerGap())
            .addGroup(EigthCategoryLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(EigthIcon)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        EigthCategoryLayout.setVerticalGroup(
            EigthCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EigthCategoryLayout.createSequentialGroup()
                .addContainerGap(36, Short.MAX_VALUE)
                .addComponent(EigthIcon)
                .addGap(18, 18, 18)
                .addComponent(EigthLabel)
                .addContainerGap())
        );

        OtherCategory.setBackground(new java.awt.Color(51, 51, 51));
        OtherCategory.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        OtherCategory.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        OtherCategory.setPreferredSize(new java.awt.Dimension(150, 150));
        OtherCategory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OtherCategoryMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                OtherCategoryMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                OtherCategoryMouseExited(evt);
            }
        });

        OtherIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/other.png"))); // NOI18N

        OtherLabel.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        OtherLabel.setForeground(new java.awt.Color(204, 204, 204));
        OtherLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        OtherLabel.setText("Others");

        javax.swing.GroupLayout OtherCategoryLayout = new javax.swing.GroupLayout(OtherCategory);
        OtherCategory.setLayout(OtherCategoryLayout);
        OtherCategoryLayout.setHorizontalGroup(
            OtherCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OtherCategoryLayout.createSequentialGroup()
                .addGroup(OtherCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(OtherCategoryLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(OtherIcon))
                    .addGroup(OtherCategoryLayout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(OtherLabel)))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        OtherCategoryLayout.setVerticalGroup(
            OtherCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OtherCategoryLayout.createSequentialGroup()
                .addContainerGap(36, Short.MAX_VALUE)
                .addComponent(OtherIcon)
                .addGap(18, 18, 18)
                .addComponent(OtherLabel)
                .addContainerGap())
        );

        javax.swing.GroupLayout CategoryPanelLayout = new javax.swing.GroupLayout(CategoryPanel);
        CategoryPanel.setLayout(CategoryPanelLayout);
        CategoryPanelLayout.setHorizontalGroup(
            CategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CategoryPanelLayout.createSequentialGroup()
                .addContainerGap(88, Short.MAX_VALUE)
                .addGroup(CategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(SeventhCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FirstCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FourthCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(CategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(SecondCategory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FifthCategory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EigthCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(CategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ThirdCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SixthCategory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(OtherCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(87, 87, 87))
        );
        CategoryPanelLayout.setVerticalGroup(
            CategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CategoryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(FirstCategory, 138, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SecondCategory, 138, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ThirdCategory, 138, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(CategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CategoryPanelLayout.createSequentialGroup()
                        .addGroup(CategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(FourthCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(FifthCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(CategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SeventhCategory, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(EigthCategory, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(CategoryPanelLayout.createSequentialGroup()
                        .addComponent(SixthCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(OtherCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        LeftPanel.add(CategoryPanel, "card2");

        ItemListPanel.setBackground(new java.awt.Color(51, 51, 51));

        ItemListTable.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        ItemListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Name", "Stock Remaining", "Sell Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ItemListTable.setRowHeight(30);
        ItemListTable.setShowVerticalLines(false);
        ItemListTable.getTableHeader().setReorderingAllowed(false);
        ItemListTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ItemListTableMouseClicked(evt);
            }
        });
        ItemListPane.setViewportView(ItemListTable);
        if (ItemListTable.getColumnModel().getColumnCount() > 0) {
            ItemListTable.getColumnModel().getColumn(0).setResizable(false);
            ItemListTable.getColumnModel().getColumn(1).setResizable(false);
            ItemListTable.getColumnModel().getColumn(2).setResizable(false);
        }
        JTableHeader ItemListHead = ItemListTable.getTableHeader();
        ItemListHead.setBackground(new Color(240,240,240));
        ItemListHead.setForeground(new Color(51,51,51));
        ItemListHead.setFont (new Font("Century Gothic", Font.PLAIN, 15));

        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setText("Item List");

        AddQueueBtn.setBackground(new java.awt.Color(235, 235, 235));
        AddQueueBtn.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        AddQueueBtn.setText("Add to Queue");
        AddQueueBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        AddQueueBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AddQueueBtn.setPreferredSize(new java.awt.Dimension(135, 45));
        AddQueueBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddQueueBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                AddQueueBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                AddQueueBtnMouseExited(evt);
            }
        });

        BackToCatListBtn.setBackground(new java.awt.Color(235, 235, 235));
        BackToCatListBtn.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        BackToCatListBtn.setText("Back");
        BackToCatListBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        BackToCatListBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BackToCatListBtn.setPreferredSize(new java.awt.Dimension(135, 45));
        BackToCatListBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BackToCatListBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BackToCatListBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BackToCatListBtnMouseExited(evt);
            }
        });

        javax.swing.GroupLayout ItemListPanelLayout = new javax.swing.GroupLayout(ItemListPanel);
        ItemListPanel.setLayout(ItemListPanelLayout);
        ItemListPanelLayout.setHorizontalGroup(
            ItemListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ItemListPanelLayout.createSequentialGroup()
                .addGroup(ItemListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ItemListPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(ItemListPane, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(ItemListPanelLayout.createSequentialGroup()
                .addGap(129, 129, 129)
                .addComponent(AddQueueBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 173, Short.MAX_VALUE)
                .addComponent(BackToCatListBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(132, 132, 132))
        );
        ItemListPanelLayout.setVerticalGroup(
            ItemListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ItemListPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(ItemListPane, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(ItemListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddQueueBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BackToCatListBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        LeftPanel.add(ItemListPanel, "card3");

        jLabel2.setText("Temp");

        javax.swing.GroupLayout TempLayout = new javax.swing.GroupLayout(Temp);
        Temp.setLayout(TempLayout);
        TempLayout.setHorizontalGroup(
            TempLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TempLayout.createSequentialGroup()
                .addGap(262, 262, 262)
                .addComponent(jLabel2)
                .addContainerGap(415, Short.MAX_VALUE))
        );
        TempLayout.setVerticalGroup(
            TempLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TempLayout.createSequentialGroup()
                .addGap(241, 241, 241)
                .addComponent(jLabel2)
                .addContainerGap(272, Short.MAX_VALUE))
        );

        LeftPanel.add(Temp, "card4");

        SearchPanel.setBackground(new java.awt.Color(204, 204, 204));
        SearchPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 2, true));
        SearchPanel.setPreferredSize(new java.awt.Dimension(590, 60));

        SearchField.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        SearchField.setMinimumSize(new java.awt.Dimension(7, 20));
        SearchField.setPreferredSize(new java.awt.Dimension(525, 50));
        SearchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchFieldActionPerformed(evt);
            }
        });

        SearchIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/Search.png"))); // NOI18N
        SearchIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SearchIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SearchIconMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout SearchPanelLayout = new javax.swing.GroupLayout(SearchPanel);
        SearchPanel.setLayout(SearchPanelLayout);
        SearchPanelLayout.setHorizontalGroup(
            SearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SearchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(SearchIcon)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SearchField, javax.swing.GroupLayout.DEFAULT_SIZE, 534, Short.MAX_VALUE))
        );
        SearchPanelLayout.setVerticalGroup(
            SearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SearchPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SearchIcon)
                .addGap(22, 22, 22))
            .addGroup(SearchPanelLayout.createSequentialGroup()
                .addComponent(SearchField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        QueueTable.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        QueueTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Qty.", "Name", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        QueueTable.setFocusable(false);
        QueueTable.setIntercellSpacing(new java.awt.Dimension(0, 0));
        QueueTable.setRowHeight(35);
        JTableHeader THead = QueueTable.getTableHeader();
        THead.setBackground(new Color(240,240,240));
        THead.setForeground(new Color(51,51,51));
        THead.setFont (new Font("Century Gothic", Font.PLAIN, 18));
        QueueTable.setShowVerticalLines(false);
        QueueTable.getTableHeader().setReorderingAllowed(false);
        QueueTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                QueueTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(QueueTable);
        if (QueueTable.getColumnModel().getColumnCount() > 0) {
            QueueTable.getColumnModel().getColumn(1).setResizable(false);
            QueueTable.getColumnModel().getColumn(2).setResizable(false);
        }

        TotalBillField.setEditable(false);
        TotalBillField.setBackground(new java.awt.Color(255, 255, 255));
        TotalBillField.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        TotalBillField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TotalBillField.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        PrintPanel.setPreferredSize(new java.awt.Dimension(60, 60));
        PrintPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PrintPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                PrintPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                PrintPanelMouseExited(evt);
            }
        });

        Print.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/Print.png")));
        Print.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout PrintPanelLayout = new javax.swing.GroupLayout(PrintPanel);
        PrintPanel.setLayout(PrintPanelLayout);
        PrintPanelLayout.setHorizontalGroup(
            PrintPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PrintPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Print)
                .addContainerGap(50, Short.MAX_VALUE))
        );
        PrintPanelLayout.setVerticalGroup(
            PrintPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PrintPanelLayout.createSequentialGroup()
                .addComponent(Print, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 6, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PrintPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(TotalBillField)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(PrintPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(TotalBillField)))
        );

        RemoveToQueueBtn.setBackground(new java.awt.Color(51, 51, 51));
        RemoveToQueueBtn.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        RemoveToQueueBtn.setForeground(new java.awt.Color(150, 150, 150));
        RemoveToQueueBtn.setText("Remove to Queue");
        RemoveToQueueBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        RemoveToQueueBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        RemoveToQueueBtn.setPreferredSize(new java.awt.Dimension(180, 45));
        RemoveToQueueBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RemoveToQueueBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                RemoveToQueueBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                RemoveToQueueBtnMouseExited(evt);
            }
        });

        javax.swing.GroupLayout ReightPanelLayout = new javax.swing.GroupLayout(ReightPanel);
        ReightPanel.setLayout(ReightPanelLayout);
        ReightPanelLayout.setHorizontalGroup(
            ReightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReightPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ReightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ReightPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(RemoveToQueueBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );
        ReightPanelLayout.setVerticalGroup(
            ReightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReightPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(RemoveToQueueBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout QueueFrameLayout = new javax.swing.GroupLayout(QueueFrame);
        QueueFrame.setLayout(QueueFrameLayout);
        QueueFrameLayout.setHorizontalGroup(
            QueueFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(QueueFrameLayout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addComponent(SearchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(476, Short.MAX_VALUE))
            .addGroup(QueueFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(QueueFrameLayout.createSequentialGroup()
                    .addGap(16, 16, 16)
                    .addComponent(LeftPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(18, 18, 18)
                    .addComponent(ReightPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
        QueueFrameLayout.setVerticalGroup(
            QueueFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, QueueFrameLayout.createSequentialGroup()
                .addContainerGap(564, Short.MAX_VALUE)
                .addComponent(SearchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
            .addGroup(QueueFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(QueueFrameLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(QueueFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(QueueFrameLayout.createSequentialGroup()
                            .addComponent(LeftPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 527, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(78, 78, 78))
                        .addComponent(ReightPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        MidPanel.add(QueueFrame, "card2");

        PrintFrame.setBackground(new java.awt.Color(51, 51, 51));
        PrintFrame.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 5));

        ReceiptArea.setEditable(false);
        ReceiptArea.setColumns(20);
        ReceiptArea.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        ReceiptArea.setRows(5);
        ReceiptArea.setTabSize(2);
        ReceiptArea.setPreferredSize(new java.awt.Dimension(165, 100));
        jScrollPane2.setViewportView(ReceiptArea);

        PrintBtn.setBackground(new java.awt.Color(235, 235, 235));
        PrintBtn.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        PrintBtn.setText("Print");
        PrintBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PrintBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        PrintBtn.setPreferredSize(new java.awt.Dimension(130, 45));
        PrintBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PrintBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                PrintBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                PrintBtnMouseExited(evt);
            }
        });

        CancelBtn.setBackground(new java.awt.Color(235, 235, 235));
        CancelBtn.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        CancelBtn.setText("Cancel");
        CancelBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        CancelBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        CancelBtn.setPreferredSize(new java.awt.Dimension(135, 45));
        CancelBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CancelBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                CancelBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                CancelBtnMouseExited(evt);
            }
        });

        javax.swing.GroupLayout PrintFrameLayout = new javax.swing.GroupLayout(PrintFrame);
        PrintFrame.setLayout(PrintFrameLayout);
        PrintFrameLayout.setHorizontalGroup(
            PrintFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PrintFrameLayout.createSequentialGroup()
                .addGap(349, 349, 349)
                .addGroup(PrintFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(PrintFrameLayout.createSequentialGroup()
                        .addComponent(PrintBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(CancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(369, Short.MAX_VALUE))
        );
        PrintFrameLayout.setVerticalGroup(
            PrintFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PrintFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(PrintFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PrintBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        MidPanel.add(PrintFrame, "card3");

        jLabel3.setText("Temp Frame");

        javax.swing.GroupLayout TempFrameLayout = new javax.swing.GroupLayout(TempFrame);
        TempFrame.setLayout(TempFrameLayout);
        TempFrameLayout.setHorizontalGroup(
            TempFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TempFrameLayout.createSequentialGroup()
                .addGap(528, 528, 528)
                .addComponent(jLabel3)
                .addContainerGap(559, Short.MAX_VALUE))
        );
        TempFrameLayout.setVerticalGroup(
            TempFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TempFrameLayout.createSequentialGroup()
                .addGap(279, 279, 279)
                .addComponent(jLabel3)
                .addContainerGap(353, Short.MAX_VALUE))
        );

        MidPanel.add(TempFrame, "card4");

        LogoutLabel.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        LogoutLabel.setForeground(new java.awt.Color(153, 153, 153));
        LogoutLabel.setText("Logout");
        LogoutLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        LogoutLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LogoutLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                LogoutLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                LogoutLabelMouseExited(evt);
            }
        });

        javax.swing.GroupLayout BackgroundLayout = new javax.swing.GroupLayout(Background);
        Background.setLayout(BackgroundLayout);
        BackgroundLayout.setHorizontalGroup(
            BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BackgroundLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(MidPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(BackgroundLayout.createSequentialGroup()
                        .addComponent(CashierLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(LogoutLabel)
                        .addGap(31, 31, 31)
                        .addComponent(MinimizeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Exit, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(23, 23, 23))
        );
        BackgroundLayout.setVerticalGroup(
            BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CashierLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Exit, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(BackgroundLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(LogoutLabel)
                            .addComponent(MinimizeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(MidPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 647, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Background, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setSize(new java.awt.Dimension(1191, 731));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExitMouseClicked
        int x = JOptionPane.showConfirmDialog(this, "Are you sure you want to exit?", "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (x == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_ExitMouseClicked

    private void SearchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchFieldActionPerformed

    private void ExitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExitMouseEntered
        Exit.setForeground(new Color(255, 255, 255));
    }//GEN-LAST:event_ExitMouseEntered

    private void ExitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExitMouseExited
        Exit.setForeground(new Color(204, 204, 204));
    }//GEN-LAST:event_ExitMouseExited

    private void PrintPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PrintPanelMouseExited
        PrintPanel.setBackground(new Color(240, 240, 240));
    }//GEN-LAST:event_PrintPanelMouseExited

    private void PrintPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PrintPanelMouseEntered
        PrintPanel.setBackground(new Color(153, 255, 255));
    }//GEN-LAST:event_PrintPanelMouseEntered

    private void FirstCategoryMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FirstCategoryMouseEntered
        FirstCategory.setBackground(new Color(255, 255, 255));
        FirstLabel.setForeground(new Color(30, 30, 30));
    }//GEN-LAST:event_FirstCategoryMouseEntered

    private void FirstCategoryMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FirstCategoryMouseExited
        FirstCategory.setBackground(new Color(51, 51, 51));
        FirstLabel.setForeground(new Color(240, 240, 240));
    }//GEN-LAST:event_FirstCategoryMouseExited

    private void SecondCategoryMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SecondCategoryMouseEntered
        SecondCategory.setBackground(new Color(255, 255, 255));
        SecondLabel.setForeground(new Color(30, 30, 30));
    }//GEN-LAST:event_SecondCategoryMouseEntered

    private void SecondCategoryMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SecondCategoryMouseExited
        SecondCategory.setBackground(new Color(51, 51, 51));
        SecondLabel.setForeground(new Color(240, 240, 240));
    }//GEN-LAST:event_SecondCategoryMouseExited

    private void ThirdCategoryMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ThirdCategoryMouseEntered
        ThirdCategory.setBackground(new Color(255, 255, 255));
        ThirdLabel.setForeground(new Color(30, 30, 30));
    }//GEN-LAST:event_ThirdCategoryMouseEntered

    private void ThirdCategoryMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ThirdCategoryMouseExited
        ThirdCategory.setBackground(new Color(51, 51, 51));
        ThirdLabel.setForeground(new Color(240, 240, 240));
    }//GEN-LAST:event_ThirdCategoryMouseExited

    private void FourthCategoryMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FourthCategoryMouseEntered
        FourthCategory.setBackground(new Color(255, 255, 255));
        FourthLabel.setForeground(new Color(30, 30, 30));
    }//GEN-LAST:event_FourthCategoryMouseEntered

    private void FourthCategoryMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FourthCategoryMouseExited
        FourthCategory.setBackground(new Color(51, 51, 51));
        FourthLabel.setForeground(new Color(240, 240, 240));
    }//GEN-LAST:event_FourthCategoryMouseExited

    private void SeventhCategoryMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SeventhCategoryMouseEntered
        SeventhCategory.setBackground(new Color(255, 255, 255));
        SeventhLabel.setForeground(new Color(30, 30, 30));
    }//GEN-LAST:event_SeventhCategoryMouseEntered

    private void SeventhCategoryMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SeventhCategoryMouseExited
        SeventhCategory.setBackground(new Color(51, 51, 51));
        SeventhLabel.setForeground(new Color(240, 240, 240));
    }//GEN-LAST:event_SeventhCategoryMouseExited

    private void FifthCategoryMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FifthCategoryMouseEntered
        FifthCategory.setBackground(new Color(255, 255, 255));
        FifthLabel.setForeground(new Color(30, 30, 30));
    }//GEN-LAST:event_FifthCategoryMouseEntered

    private void FifthCategoryMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FifthCategoryMouseExited
        FifthCategory.setBackground(new Color(51, 51, 51));
        FifthLabel.setForeground(new Color(240, 240, 240));
    }//GEN-LAST:event_FifthCategoryMouseExited

    private void SixthCategoryMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SixthCategoryMouseEntered
        SixthCategory.setBackground(new Color(255, 255, 255));
        SixthLabel.setForeground(new Color(30, 30, 30));
    }//GEN-LAST:event_SixthCategoryMouseEntered

    private void SixthCategoryMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SixthCategoryMouseExited
        SixthCategory.setBackground(new Color(51, 51, 51));
        SixthLabel.setForeground(new Color(240, 240, 240));
    }//GEN-LAST:event_SixthCategoryMouseExited

    private void EigthCategoryMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EigthCategoryMouseEntered
        EigthCategory.setBackground(new Color(255, 255, 255));
        EigthLabel.setForeground(new Color(30, 30, 30));
    }//GEN-LAST:event_EigthCategoryMouseEntered

    private void EigthCategoryMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EigthCategoryMouseExited
        EigthCategory.setBackground(new Color(51, 51, 51));
        EigthLabel.setForeground(new Color(240, 240, 240));
    }//GEN-LAST:event_EigthCategoryMouseExited

    private void OtherCategoryMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OtherCategoryMouseEntered
        OtherCategory.setBackground(new Color(255, 255, 255));
        OtherLabel.setForeground(new Color(30, 30, 30));
    }//GEN-LAST:event_OtherCategoryMouseEntered

    private void OtherCategoryMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OtherCategoryMouseExited
        OtherCategory.setBackground(new Color(51, 51, 51));
        OtherLabel.setForeground(new Color(240, 240, 240));
    }//GEN-LAST:event_OtherCategoryMouseExited

    private void CategoryPanelInit() {
        Product products_by_category[] = null;
        Object obj3[][] = null;

        try {
            productList = new ProductList();
            products_by_category = productList.getProductByCategory(ChosenCategory);
            obj3 = new Object[products_by_category.length][3];
            for (int i = 0; i < products_by_category.length; i++) {
                obj3[i][0] = products_by_category[i].getName();
                obj3[i][1] = products_by_category[i].getStock();
                obj3[i][2] = products_by_category[i].getSellPrice();
            }
            ItemListTable.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
            ItemListTable.setModel(new javax.swing.table.DefaultTableModel(
                    obj3,
                    new String[]{
                        "Name", "Stock Remaining", "Sell Price"
                    }
            ) {
                Class[] types = new Class[]{
                    java.lang.String.class, java.lang.String.class, java.lang.Object.class
                };
                boolean[] canEdit = new boolean[]{
                    false, false, false
                };

                public Class getColumnClass(int columnIndex) {
                    return types[columnIndex];
                }

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit[columnIndex];
                }
            });
            ItemListTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }


    private void FirstCategoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FirstCategoryMouseClicked
        CategoryPanel.setVisible(false);
        ItemListPanel.setVisible(true);
        ChosenCategory = "Construction";
        CategoryPanelInit();
    }//GEN-LAST:event_FirstCategoryMouseClicked

    private void SecondCategoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SecondCategoryMouseClicked
        CategoryPanel.setVisible(false);
        ItemListPanel.setVisible(true);
        ChosenCategory = "Plumbing";
        CategoryPanelInit();
    }//GEN-LAST:event_SecondCategoryMouseClicked

    private void ThirdCategoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ThirdCategoryMouseClicked
        CategoryPanel.setVisible(false);
        ItemListPanel.setVisible(true);
        ChosenCategory = "Electrical";
        CategoryPanelInit();
    }//GEN-LAST:event_ThirdCategoryMouseClicked

    private void FourthCategoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FourthCategoryMouseClicked
        CategoryPanel.setVisible(false);
        ItemListPanel.setVisible(true);
        ChosenCategory = "Oils";
        CategoryPanelInit();
    }//GEN-LAST:event_FourthCategoryMouseClicked

    private void FifthCategoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FifthCategoryMouseClicked
        CategoryPanel.setVisible(false);
        ItemListPanel.setVisible(true);
        ChosenCategory = "Motor";
        CategoryPanelInit();
    }//GEN-LAST:event_FifthCategoryMouseClicked

    private void SixthCategoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SixthCategoryMouseClicked
        CategoryPanel.setVisible(false);
        ItemListPanel.setVisible(true);
        ChosenCategory = "Auto";
        CategoryPanelInit();
    }//GEN-LAST:event_SixthCategoryMouseClicked

    private void SeventhCategoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SeventhCategoryMouseClicked
        CategoryPanel.setVisible(false);
        ItemListPanel.setVisible(true);
        ChosenCategory = "Stainless";
        CategoryPanelInit();
    }//GEN-LAST:event_SeventhCategoryMouseClicked

    private void EigthCategoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EigthCategoryMouseClicked
        CategoryPanel.setVisible(false);
        ItemListPanel.setVisible(true);
        ChosenCategory = "Fishing";
        CategoryPanelInit();
    }//GEN-LAST:event_EigthCategoryMouseClicked

    private void OtherCategoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OtherCategoryMouseClicked
        CategoryPanel.setVisible(false);
        ItemListPanel.setVisible(true);
        ChosenCategory = "Others";
        CategoryPanelInit();
    }//GEN-LAST:event_OtherCategoryMouseClicked

    private void SearchIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SearchIconMouseClicked
        Object obj2[][] = null;
        Product searchedProducts[] = null;

        try {
            searchedProducts = productList.searchByName(SearchField.getText());
            obj2 = new Object[searchedProducts.length][3];

            for (int i = 0; i < searchedProducts.length; i++) {
                obj2[i][0] = searchedProducts[i].getName();
                obj2[i][1] = searchedProducts[i].getStock();
                obj2[i][2] = searchedProducts[i].getSellPrice();
            }

            ItemListTable.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
            ItemListTable.setModel(new javax.swing.table.DefaultTableModel(
                    obj2,
                    new String[]{
                        "Name", "Stock Remaining", "Sell Price"
                    }
            ) {
                Class[] types = new Class[]{
                    java.lang.String.class, java.lang.String.class, java.lang.Object.class
                };
                boolean[] canEdit = new boolean[]{
                    false, false, false
                };

                public Class getColumnClass(int columnIndex) {
                    return types[columnIndex];
                }

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit[columnIndex];
                }
            });

            ItemListTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        } catch (Exception e) {
            e.printStackTrace();
        }

        CategoryPanel.setVisible(false);
        ItemListPanel.setVisible(true);
    }//GEN-LAST:event_SearchIconMouseClicked

    private void PrintPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PrintPanelMouseClicked
        
        if (grandTotal>0) {
            amount_taken = JOptionPane.showInputDialog(this, "Enter amount taken: ", 0);

            if (amount_taken != null) {
                char chars[];
                chars = amount_taken.toCharArray();
                boolean flag = true;

                for (int i = 0; i < chars.length; i++) {
                    if (Character.isDigit(chars[i])) {
                        // ^_^
                    } else if (Character.isAlphabetic(chars[i])) {
                        flag = false;
                    } else {
                        flag = false;
                    }
                }

                if (flag && !amount_taken.isEmpty() && !amount_taken.equals("0")) {
                    SimpleDateFormat DateFormat = new SimpleDateFormat("MM-dd-yyyy");
                    SimpleDateFormat TimeFormat = new SimpleDateFormat("HH:mm:ss");
                    Date currdate = new Date();
                    Node node = linkedlist.getList();
                    String receipt_id = transactionList.generateReceiptId(String.valueOf(DateFormat.format(currdate)));
                    String details = linkedlist.getStringDetails();
                    float grand_total = linkedlist.getGrandTotal();
                    float change = Float.parseFloat(amount_taken) - grand_total;

                    if (Float.parseFloat(amount_taken) >= grand_total) {

                        ReceiptArea.append("\n \t \t \t \t \t \t \t \t \t \t \t KKK Hardware"
                                + "\n \t \t \t \t \t \t \t \t \t \t Lanang, Davao City \n "
                                + "\n \t Receipt ID: " + receipt_id + "\t \t \t \t  \t " + DateFormat.format(currdate) + "/" + TimeFormat.format(currdate)
                                + "\n ========================================================"
                                + "\n \t Qty. \t \t Amount \t \t \t \t \t \t Description"
                                + "\n \t" + details  
                                + "\n \n \t Received: " + amount_taken
                                + "\n \t Change:   " + change + "\n"
                                + " -------------------------------------------------------- "
                                + "\n \t Total Bill: " + grand_total);

                        QueueFrame.setVisible(false);
                        PrintFrame.setVisible(true);
                        TempFrame.setVisible(false);
                    } else {
                        JOptionPane.showMessageDialog(this, "AMOUNT TAKEN MUST BE GREATER OR EQUAL TO TOTAL BILL");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "PLEASE ENTER A NUMBER");
                }
            }
        }
              
    }//GEN-LAST:event_PrintPanelMouseClicked

    private void LogoutLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LogoutLabelMouseEntered
        LogoutLabel.setForeground(new Color(250, 250, 250));
    }//GEN-LAST:event_LogoutLabelMouseEntered

    private void LogoutLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LogoutLabelMouseExited
        LogoutLabel.setForeground(new Color(153, 153, 153));
    }//GEN-LAST:event_LogoutLabelMouseExited

    private void LogoutLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LogoutLabelMouseClicked
        LoginPage LP = new LoginPage();
        LP.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_LogoutLabelMouseClicked


    private void ItemListTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ItemListTableMouseClicked
        int row = ItemListTable.getSelectedRow();

        SelectedId = String.valueOf(ItemListTable.getValueAt(row, 0));
    }//GEN-LAST:event_ItemListTableMouseClicked

    private void QueueTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_QueueTableMouseClicked
        int row = QueueTable.getSelectedRow();
        SelectedQueue = String.valueOf(QueueTable.getValueAt(row, 1));

    }//GEN-LAST:event_QueueTableMouseClicked

    private void PrintBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PrintBtnMouseEntered
        PrintBtn.setBorder(BorderFactory.createLineBorder(new Color(0, 204, 204)));
        PrintBtn.setForeground(new Color(0, 204, 204));
        PrintBtn.setBackground(new Color(51, 51, 51));
    }//GEN-LAST:event_PrintBtnMouseEntered

    private void PrintBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PrintBtnMouseExited
        PrintBtn.setBorder(BorderFactory.createLineBorder(new Color(0, 0, 0)));
        PrintBtn.setForeground(new Color(50, 50, 50));
        PrintBtn.setBackground(new Color(235, 235, 235));
    }//GEN-LAST:event_PrintBtnMouseExited

    private void PrintBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PrintBtnMouseClicked
       
        try {
            
            PrintRequestAttributeSet attr_set = new HashPrintRequestAttributeSet();
            attr_set.add(MediaSizeName.ISO_A5);
            attr_set.add(Sides.DUPLEX);
            attr_set.add(new MediaPrintableArea(0.15f, 0.15f, 6.0f, 8.0f, MediaPrintableArea.INCH));
            boolean show = true;
            MessageFormat footerFormat = new MessageFormat("Page {0,number,integer}");
            
            boolean isPrinted = ReceiptArea.print(null, footerFormat, show, null, attr_set, show);
            
            SimpleDateFormat DateFormat = new SimpleDateFormat("MM-dd-yyyy");
            SimpleDateFormat TimeFormat = new SimpleDateFormat("HH:mm:ss");
            Date currdate = new Date();
            Node node = linkedlist.getList();
            float grand_total = linkedlist.getGrandTotal();
            String receipt_id = transactionList.generateReceiptId(String.valueOf(DateFormat.format(currdate)));

            if (isPrinted) {
                try {
                    transaction = new Transaction(receipt_id, DateFormat.format(currdate), TimeFormat.format(currdate), String.valueOf(grand_total), this.admin_id);

                    if (transactionList.addTransactionToDb(transaction)) {
                        if (activityList.addActivityToDb(new Activity("ADD TRANSACTION", "CASHIER DASHBOARD", admin_id))) {
                            while (node != null) {
                                detail = new TransactionDetail("", transaction.getId(), String.valueOf(node.data.getQuantity()), node.data.getId(), node.data.getSellPrice());
                                if (detailList.addDetailToDb(detail)) {
                                    productList.changeProductStock(node.data.getId(), String.valueOf(node.data.getQuantity()));
                                }
                                node = node.next;
                            }
                            JOptionPane.showMessageDialog(PrintPanel, "Print Successful");
                            QueueTable.setModel(new javax.swing.table.DefaultTableModel(
                                    new Object[][]{},
                                    new String[]{
                                        "Qty.", "Name", "Sell Price"
                                    }
                            ) {
                                Class[] types = new Class[]{
                                    java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
                                };
                                boolean[] canEdit = new boolean[]{
                                    false, false, false, false
                                };

                                public Class getColumnClass(int columnIndex) {
                                    return types[columnIndex];
                                }

                                public boolean isCellEditable(int rowIndex, int columnIndex) {
                                    return canEdit[columnIndex];
                                }
                            });

                            ItemListTable.setModel(new javax.swing.table.DefaultTableModel(
                                    new Object[][]{
                                        {null, null, null},
                                        {null, null, null},
                                        {null, null, null},
                                        {null, null, null}
                                    },
                                    new String[]{
                                        "Name", "Stock Remaining", "Sell Price"
                                    }
                            ) {
                                Class[] types = new Class[]{
                                    java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
                                };
                                boolean[] canEdit = new boolean[]{
                                    false, false, false
                                };

                                public Class getColumnClass(int columnIndex) {
                                    return types[columnIndex];
                                }

                                public boolean isCellEditable(int rowIndex, int columnIndex) {
                                    return canEdit[columnIndex];
                                }
                            });
                            TotalBillField.setText("0.00");
                            ReceiptArea.setText("");
                            grandTotal = 0;
                            CategoryPanelInit();
                            linkedlist = new ProductLinkedList();
                            transactionList = new TransactionList();
                        }

                    }
                } catch (Exception e) {
                    ReceiptArea.setText("");
                    e.printStackTrace();
                }
            } else {
                ReceiptArea.setText("");
                JOptionPane.showMessageDialog(this, "Print Receipt Failed");
            }
        } catch (PrinterException ex) {
            ReceiptArea.setText("");
            Logger.getLogger(CashierDashboard.class.getName()).log(Level.SEVERE, null, ex);
        }
        QueueFrame.setVisible(true);
        PrintFrame.setVisible(false);
        TempFrame.setVisible(false);

    }//GEN-LAST:event_PrintBtnMouseClicked

    private void CancelBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CancelBtnMouseEntered
        CancelBtn.setBackground(new Color(41, 41, 41));
        CancelBtn.setBorder(BorderFactory.createLineBorder(new Color(255, 0, 0)));
        CancelBtn.setForeground(new Color(255, 0, 0));
    }//GEN-LAST:event_CancelBtnMouseEntered

    private void CancelBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CancelBtnMouseExited
        CancelBtn.setBackground(new Color(235, 235, 235));
        CancelBtn.setBorder(BorderFactory.createLineBorder(new Color(0, 0, 0)));
        CancelBtn.setForeground(new Color(0, 0, 0));
    }//GEN-LAST:event_CancelBtnMouseExited

    private void CancelBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CancelBtnMouseClicked
        int response = JOptionPane.showConfirmDialog(this, "Continue cancel this transaction?", "Cancel Confirmation", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

        if (response == JOptionPane.YES_OPTION) {
            ReceiptArea.setText("");
            QueueFrame.setVisible(true);
            PrintFrame.setVisible(false);
            TempFrame.setVisible(false);
        }
    }//GEN-LAST:event_CancelBtnMouseClicked

    private void AddQueueBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddQueueBtnMouseEntered
        AddQueueBtn.setBackground(new Color(51, 51, 51));
        AddQueueBtn.setBorder(BorderFactory.createLineBorder(new Color(51, 255, 51)));
        AddQueueBtn.setForeground(new Color(51, 255, 51));
    }//GEN-LAST:event_AddQueueBtnMouseEntered

    private void AddQueueBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddQueueBtnMouseExited
        AddQueueBtn.setBackground(new Color(240, 240, 240));
        AddQueueBtn.setBorder(BorderFactory.createLineBorder(new Color(0, 0, 0)));
        AddQueueBtn.setForeground(new Color(0, 0, 0));
    }//GEN-LAST:event_AddQueueBtnMouseExited

    private void addToList(double quantity) {
        grandTotal = 0;
        Object obj2[][] = null;
        Node node = null;
        Product selected_item = null;
        selected_item = productList.getProductByName(SelectedId);

        if (linkedlist.addProduct(selected_item, quantity)) {
            node = linkedlist.getList();

            obj2 = new Object[linkedlist.getSize()][3];

            for (int i = 0; node != null; i++) {
                obj2[i][0] = node.data.getQuantity();
                obj2[i][1] = node.data.getName();
                obj2[i][2] = node.data.getSellPrice();
                grandTotal += Float.parseFloat(String.valueOf(node.data.getSellPrice())) * node.data.getQuantity();
                node = node.next;
            }
            try {
                QueueTable.setModel(new javax.swing.table.DefaultTableModel(
                        obj2,
                        new String[]{
                            "Qty.", "Name", "Sell Price"
                        }
                ) {
                    Class[] types = new Class[]{
                        java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
                    };
                    boolean[] canEdit = new boolean[]{
                        false, false, false, false
                    };

                    public Class getColumnClass(int columnIndex) {
                        return types[columnIndex];
                    }

                    public boolean isCellEditable(int rowIndex, int columnIndex) {
                        return canEdit[columnIndex];
                    }
                });
                QueueTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
                TotalBillField.setText(String.valueOf(grandTotal));
                CategoryPanel.setVisible(true);
                ItemListPanel.setVisible(false);
                SelectedId = "";
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    private void AddQueueBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddQueueBtnMouseClicked

        if (!SelectedId.equals("")) {

            Boolean flag = true;
            Double quantity = 0.0;

            try {
                do {
                    quantity = Double.parseDouble(JOptionPane.showInputDialog(this, "Enter Quantity:(" + productList.getCurrentUnitByName(SelectedId) + ") ", 0));
                    if (quantity > 0) {
                        if (quantity % 0.25 == 0 && productList.getCurrentUnitByName(SelectedId).equals("kg") && productList.getCurrentStockByName(SelectedId) >= quantity) {
                            this.addToList(quantity);
                        } else if (quantity % 1 == 0 && productList.getCurrentUnitByName(SelectedId).equals("pc") && productList.getCurrentStockByName(SelectedId) >= quantity) {
                            this.addToList(quantity);
                        } else if (productList.getCurrentStockByName(SelectedId) < quantity) {
                            JOptionPane.showMessageDialog(this, "Stock is not enough!");
                        } else {
                            JOptionPane.showMessageDialog(this, "Invalid amount!");
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Invalid amount!");
                    }

                } while ((quantity % 0.25 != 0 && productList.getCurrentUnitByName(SelectedId).equals("kg") && productList.getCurrentStockByName(SelectedId) >= quantity) || (quantity % 1 != 0 && productList.getCurrentUnitByName(SelectedId).equals("pc") && productList.getCurrentStockByName(SelectedId) >= quantity));

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Please enter a valid number!");
            }
        }

        SelectedId = "";


    }//GEN-LAST:event_AddQueueBtnMouseClicked

    private void BackToCatListBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackToCatListBtnMouseEntered
        BackToCatListBtn.setBackground(new Color(51, 51, 51));
        BackToCatListBtn.setBorder(BorderFactory.createLineBorder(new Color(245, 245, 245)));
        BackToCatListBtn.setForeground(new Color(230, 230, 230));
    }//GEN-LAST:event_BackToCatListBtnMouseEntered

    private void BackToCatListBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackToCatListBtnMouseExited
        BackToCatListBtn.setBackground(new Color(240, 240, 240));
        BackToCatListBtn.setForeground(new Color(0, 0, 0));
        BackToCatListBtn.setBorder(BorderFactory.createLineBorder(new Color(0, 0, 0)));
    }//GEN-LAST:event_BackToCatListBtnMouseExited

    private void BackToCatListBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackToCatListBtnMouseClicked
        SearchField.setText("");
        CategoryPanel.setVisible(true);
        ItemListPanel.setVisible(false);
    }//GEN-LAST:event_BackToCatListBtnMouseClicked

    private void RemoveToQueueBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RemoveToQueueBtnMouseEntered
        RemoveToQueueBtn.setBackground(new Color(241, 241, 241));
        RemoveToQueueBtn.setBorder(BorderFactory.createLineBorder(new Color(255, 0, 0)));
        RemoveToQueueBtn.setForeground(new Color(255, 0, 0));
    }//GEN-LAST:event_RemoveToQueueBtnMouseEntered

    private void RemoveToQueueBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RemoveToQueueBtnMouseExited
        RemoveToQueueBtn.setBackground(new Color(51, 51, 51));
        RemoveToQueueBtn.setForeground(new Color(153, 153, 153));
        RemoveToQueueBtn.setBorder(BorderFactory.createLineBorder(new Color(10, 10, 10)));
    }//GEN-LAST:event_RemoveToQueueBtnMouseExited

    private void RemoveToQueueBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RemoveToQueueBtnMouseClicked

        if (!SelectedQueue.isEmpty() && SelectedQueue != null) {
            Object obj2[][] = null;
            linkedlist.remove(SelectedQueue);
            Node node = linkedlist.getList();
            obj2 = new Object[linkedlist.getSize()][3];
            grandTotal = 0;

            for (int i = 0; node != null; i++) {
                obj2[i][0] = node.data.getQuantity();
                obj2[i][1] = node.data.getName();
                obj2[i][2] = node.data.getSellPrice();
                grandTotal += Float.parseFloat(String.valueOf(node.data.getSellPrice())) * node.data.getQuantity();
                node = node.next;
            }

            try {
                QueueTable.setModel(new javax.swing.table.DefaultTableModel(
                        obj2,
                        new String[]{
                            "Qty.", "Name", "Sell Price"
                        }
                ) {
                    Class[] types = new Class[]{
                        java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
                    };
                    boolean[] canEdit = new boolean[]{
                        false, false, false, false
                    };

                    public Class getColumnClass(int columnIndex) {
                        return types[columnIndex];
                    }

                    public boolean isCellEditable(int rowIndex, int columnIndex) {
                        return canEdit[columnIndex];
                    }
                });
                TotalBillField.setText(String.valueOf(grandTotal));
                CategoryPanel.setVisible(true);
                ItemListPanel.setVisible(false);
                SelectedId = "";
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        SelectedQueue = "";
    }//GEN-LAST:event_RemoveToQueueBtnMouseClicked

    private void MinimizeBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MinimizeBtnMouseClicked
        this.setState(CashierDashboard.ICONIFIED);
    }//GEN-LAST:event_MinimizeBtnMouseClicked

    private void MinimizeBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MinimizeBtnMouseEntered
        MinimizeBtn.setForeground(new Color(255, 255, 255));
    }//GEN-LAST:event_MinimizeBtnMouseEntered

    private void MinimizeBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MinimizeBtnMouseExited
        MinimizeBtn.setForeground(new Color(204, 204, 204));
    }//GEN-LAST:event_MinimizeBtnMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CashierDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CashierDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CashierDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CashierDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CashierDashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddQueueBtn;
    private javax.swing.JButton BackToCatListBtn;
    private javax.swing.JPanel Background;
    private javax.swing.JButton CancelBtn;
    private javax.swing.JLabel CashierLabel;
    private javax.swing.JPanel CategoryPanel;
    private javax.swing.JPanel EigthCategory;
    private javax.swing.JLabel EigthIcon;
    private javax.swing.JLabel EigthLabel;
    private javax.swing.JLabel Exit;
    private javax.swing.JPanel FifthCategory;
    private javax.swing.JLabel FifthIcon;
    private javax.swing.JLabel FifthLabel;
    private javax.swing.JPanel FirstCategory;
    private javax.swing.JLabel FirstIcon;
    private javax.swing.JLabel FirstLabel;
    private javax.swing.JPanel FourthCategory;
    private javax.swing.JLabel FourthIcon;
    private javax.swing.JLabel FourthLabel;
    private javax.swing.JScrollPane ItemListPane;
    private javax.swing.JPanel ItemListPanel;
    private javax.swing.JTable ItemListTable;
    private javax.swing.JPanel LeftPanel;
    private javax.swing.JLabel LogoutLabel;
    private javax.swing.JPanel MidPanel;
    private javax.swing.JLabel MinimizeBtn;
    private javax.swing.JPanel OtherCategory;
    private javax.swing.JLabel OtherIcon;
    private javax.swing.JLabel OtherLabel;
    private javax.swing.JLabel Print;
    private javax.swing.JButton PrintBtn;
    private javax.swing.JPanel PrintFrame;
    private javax.swing.JPanel PrintPanel;
    private javax.swing.JPanel QueueFrame;
    private javax.swing.JTable QueueTable;
    private javax.swing.JTextArea ReceiptArea;
    private javax.swing.JPanel ReightPanel;
    private javax.swing.JButton RemoveToQueueBtn;
    private javax.swing.JTextField SearchField;
    private javax.swing.JLabel SearchIcon;
    private javax.swing.JPanel SearchPanel;
    private javax.swing.JPanel SecondCategory;
    private javax.swing.JLabel SecondIcon;
    private javax.swing.JLabel SecondLabel;
    private javax.swing.JPanel SeventhCategory;
    private javax.swing.JLabel SeventhIcon;
    private javax.swing.JLabel SeventhLabel;
    private javax.swing.JPanel SixthCategory;
    private javax.swing.JLabel SixthIcon;
    private javax.swing.JLabel SixthLabel;
    private javax.swing.JPanel Temp;
    private javax.swing.JPanel TempFrame;
    private javax.swing.JPanel ThirdCategory;
    private javax.swing.JLabel ThirdIcon;
    private javax.swing.JLabel ThirdLabel;
    private javax.swing.JTextField TotalBillField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
